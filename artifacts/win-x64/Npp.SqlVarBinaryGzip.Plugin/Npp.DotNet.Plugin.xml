<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Npp.DotNet.Plugin</name>
    </assembly>
    <members>
        <member name="T:Npp.DotNet.Plugin.IDotNetPlugin">
            <summary>
            Provides managed wrappers around the core Notepad++ plugin APIs.
            Plugins can implement external lexers by extending the <see cref="T:Npp.DotNet.Plugin.DotNetPlugin"/> base class.
            </summary>
            <remarks>
            For a guide to the external lexer API, see <see href="https://community.notepad-plus-plus.org/post/76117"/>
            </remarks>
        </member>
        <member name="M:Npp.DotNet.Plugin.IDotNetPlugin.OnSetInfo">
            <inheritdoc cref="M:Npp.DotNet.Plugin.DotNetPlugin.OnSetInfo"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.IDotNetPlugin.OnBeNotified(Npp.DotNet.Plugin.ScNotification)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.DotNetPlugin.OnBeNotified(Npp.DotNet.Plugin.ScNotification)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.IDotNetPlugin.OnMessageProc(System.UInt32,System.UIntPtr,System.IntPtr)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.DotNetPlugin.OnMessageProc(System.UInt32,System.UIntPtr,System.IntPtr)"/>
        </member>
        <member name="T:Npp.DotNet.Plugin.DotNetPlugin">
            <summary>
            Default implementation of the <see cref="T:Npp.DotNet.Plugin.IDotNetPlugin"/> interface.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.DotNetPlugin.OnSetInfo">
            <summary>
            Called by the unmanaged <c>setInfo</c> Notepad++ API function.<br/>
            All setup logic that needs a valid handle to the host application window should go into this method.
            </summary>
            <remarks>Overridable.</remarks>
        </member>
        <member name="M:Npp.DotNet.Plugin.DotNetPlugin.OnBeNotified(Npp.DotNet.Plugin.ScNotification)">
            <summary>
            Called by the unmanaged <c>beNotified</c> Notepad++ API function.<br/>
            Callbacks for editor events and notifications go here.
            </summary>
            <remarks>Overridable.</remarks>
        </member>
        <member name="M:Npp.DotNet.Plugin.DotNetPlugin.OnMessageProc(System.UInt32,System.UIntPtr,System.IntPtr)">
            <summary>
            Called by the unmanaged <c>messageProc</c> Notepad++ API function.<br/>
            Callbacks for Win32 window messages go here. Some editor notifications may be sent to it as well.
            </summary>
            <returns>
            <see langword="true"/> to forward the message to the system for further processing;
            <see langword="false"/> to signal that this method will handle the message instead.
            </returns>
            <remarks>Overridable.</remarks>
        </member>
        <member name="M:Npp.DotNet.Plugin.DotNetPlugin.OnGetFuncsArray(System.IntPtr)">
            <summary>
            Called by the unmanaged <c>getFuncsArray</c> Notepad++ API function.<br/>
            </summary>
            <param name="nbF">The number of commands provided by this plugin.</param>
            <returns>A pointer to a managed <see cref="T:Npp.DotNet.Plugin.PluginFuncArray"/>.</returns>
            <remarks>
            A positive non-zero value must be assigned to <paramref name="nbF"/>, and the return value
            must not be a <c>NULL</c> pointer, a.k.a <see cref="F:System.IntPtr.Zero"/>.<br/><br/>
            Deriving classes <b>should not </b> override this.
            </remarks>
        </member>
        <member name="M:Npp.DotNet.Plugin.DotNetPlugin.OnGetName">
            <summary>
            Called by the unmanaged <c>getName</c> Notepad++ API function.<br/>
            </summary>
            <returns>The allocated string pointer held by <see cref="F:Npp.DotNet.Plugin.PluginData.PszPluginName"/>.</returns>
            <remarks>
            The return value must not be a <c>NULL</c> pointer, a.k.a <see cref="F:System.IntPtr.Zero"/>.<br/><br/>
            Deriving classes <b>should not </b> override this.
            </remarks>
        </member>
        <member name="M:Npp.DotNet.Plugin.DotNetPlugin.OnIsUnicode">
            <summary>
            Called by the unmanaged <c>isUnicode</c> API function.<br/>
            </summary>
            <returns><see langword="true"/></returns>
            <remarks>Deriving classes <b>should not </b> override this.</remarks>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.LazySlice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Allows the use of Python-style slices, where start, stop, and stride must be declared as individual paramters.<br></br>
            Thus e.g. arr.Slice(2, null, -1) is just like arr[slice(2, None, -1)] in Python.<br></br>
            This just yields the elements one by one.<br></br>
            If you want a function that yields a shallow copy of the sliced region of the iterable, use Slice&lt;T&gt; instead.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <param name="stride"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.ClampWithinLen(System.Int32,System.Int32,System.Boolean)">
            <summary>
            If num is negative, use Python-style negative indices (e.g., -1 is the last element, -len is the first elememnt)
            Otherwise, restrict num to between 0 and len (inclusive unless is_start_idx)
            </summary>
            <param name="len"></param>
            <param name="num"></param>
            <param name="is_start_idx"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.LazySlice``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
             Allows the use of Python-style slices, passed as strings (e.g., ":", "1::-2").<br></br>
             Because LazySlice is an extension method, all arrays in this namespace can use this method.<br></br>
             See https://stackoverflow.com/questions/509211/understanding-slicing
             This just yields the elements one by one.<br></br>
             If you want a function that yields a shallow copy of the sliced region of the iterable, use Slice&lt;T&gt; instead.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.LazySlice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32}[])">
            <summary>
            This just yields the elements one by one.<br></br>
            If you want a function that yields a shallow copy of the sliced region of the iterable, use Slice&lt;T&gt; instead.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="slicer"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Allows use of Python-style slices, except that these create a copy of the sliced object rather than a view.<br></br>
            For higher performance at the cost of only producing an iterator and not a new iterable, use LazySlice.<br></br>
            See the documentation for LazySlice with three int arguments.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <param name="stride"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.Slice``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            Allows use of Python-style slices, except that these create a copy of the sliced object rather than a view.<br></br>
            For higher performance at the cost of only producing an iterator and not a new iterable, use LazySlice.<br></br>
            See the documentation for LazySlice with a string argument
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="slicer"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32}[])">
            <summary>
            Allows use of Python-style slices, except that these create a copy of the sliced object rather than a view.<br></br>
            For higher performance at the cost of only producing an iterator and not a new iterable, use LazySlice.<br></br>
            See the documentation for LazySlice with three int arguments.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="slicer"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.Slice(System.String,System.Nullable{System.Int32}[])">
            <summary>
            s_slice(x: string, sli: integer | slicer) -> string<br></br>
            uses Python slicing syntax.<br></br>
            EXAMPLES:<br></br>
            * s_slice(abcde, 1:-2) returns "bc"<br></br>
            * s_slice(abcde, :2) returns "ab"<br></br>
            * s_slice(abcde, -2) returns "d"<br></br>
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>
            randomize the order of the elements in arr
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.Pop``1(System.Collections.Generic.List{``0})">
            <summary>
            Removes and returns the last element of a list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.ArrayToString``1(System.Collections.Generic.IList{``0})">
            <summary>
            e.g., int[]{1,2,3,4,5} ->
            "[1, 2, 3, 4, 5]"
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.WrappedIndex``1(System.Collections.Generic.IList{``0},System.Int32,``0@)">
            <summary>
            If idx is between [0, source length) exclusive, atIdx = source[idx] and return true.<br></br>
            If idx is between [-(source length), -1] inclusive, atIdx = source[idx + source length] and return true.<br></br>
            else atIdx =  default(T) and return false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="idx"></param>
            <param name="atIdx"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.WrappedIndex(System.String,System.Int32,System.String@)">
            <summary>
            see WrappedIndex docs for lists and arrays.<br></br>
            Returns null if idx is out of bounds.<br></br>
            EXAMPLES<br></br>
            1. WrappedIndex("abc", 1) -> "b"<br></br>
            2. WrappedIndex("abc", -3) -> "a"<br></br>
            3. WrappedIndex("abc", 4) -> null<br></br>
            4. WrappedIndex("abc", -5) -> null<br></br>
            </summary>
            <param name="source"></param>
            <param name="idx"></param>
            <param name="atIdx"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ArrayExtensions.FirstIfOutOfBounds``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Return the first element of list if idx is not a valid index for this IList.<br></br>
            Otherwise return list[idx]
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.ISettingsManager">
            <summary>
            Provides plugins with methods to read and write INI configuration files.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.DefaultSettings">
            <summary>
            Default implementation of the <see cref="T:Npp.DotNet.Plugin.ISettingsManager"/> interface.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.DefaultSettings.KeyValueSeparator">
            <summary>
            Token used to separate property keys from values.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.DefaultSettings.Load(System.String)">
            <summary>
            Sets all writable properties of this <see cref="T:Npp.DotNet.Plugin.ISettingsManager"/> from the values in the INI file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Full file path of an INI file.</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.DefaultSettings.Save(System.String)">
            <summary>
            Dumps all writable properties of this <see cref="T:Npp.DotNet.Plugin.ISettingsManager"/> to the INI file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Full file path of an INI file.</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.DefaultSettings.OpenFile">
            <summary>
            Opens the INI file of this <see cref="T:Npp.DotNet.Plugin.ISettingsManager"/>.
            </summary>
            <remarks>Deriving classes must implement this method for themselves.</remarks>
        </member>
        <member name="M:Npp.DotNet.Plugin.DefaultSettings.ParseEnumProperty(System.Type,System.String)">
            <summary>
            Parses a named enum value, ignoring case, or the underlying numeric value.
            </summary>
            <param name="TEnum">Some enum type.</param>
            <param name="propertyStr">A name defined by <paramref name="TEnum"/>, or a number.</param>
            <returns>
            For example, if <paramref name="TEnum"/> is <see cref="T:Npp.DotNet.Plugin.Win32.MsgBox"/>, the result is <see cref="F:Npp.DotNet.Plugin.Win32.MsgBox.OK"/> when
            <paramref name="propertyStr"/> is <c>"Ok"</c> or <c>"0"</c>.
            </returns>
            <exception cref="T:System.ArgumentException">
            Thrown if <paramref name="propertyStr"/> is not a value of <paramref name="TEnum"/>.
            </exception>
        </member>
        <member name="M:Npp.DotNet.Plugin.NanInf.Divide(System.Double,System.Double)">
            <summary>
            a/b<br></br>
            may be necessary to generate infinity or nan at runtime
            to avoid the compiler pre-computing things<br></br>
            since if the compiler sees literal division by 0d in the code
            it just pre-computes it at compile time
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Npp.DotNet.Plugin.NppUtils">
            <summary>
            contains connectors to Scintilla (editor) and Notepad++ (notepad)
            </summary>
        </member>
        <member name="P:Npp.DotNet.Plugin.NppUtils.Editor">
            <summary>
            Connector to Scintilla. Can be reset after initialization.
            </summary>
        </member>
        <member name="P:Npp.DotNet.Plugin.NppUtils.Notepad">
            <summary>
            Connector to Notepad++.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppUtils.Random">
            <summary>
            this should only be instantiated once in your entire project
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.NppUtils.AddLine(System.String)">
            <summary>
            append text to current doc, then append newline and move cursor
            </summary>
            <param name="inp"></param>
        </member>
        <member name="M:Npp.DotNet.Plugin.NppUtils.GetCurrentPath(Npp.DotNet.Plugin.NppUtils.PathType)">
            <summary>
            input is one of 'p', 'd', 'f'<br></br>
            if 'p', get full path to current file (default)<br></br>
            if 'd', get directory of current file<br></br>
            if 'f', get filename of current file
            </summary>
            <param name="which"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.NppUtils.FileExtension(System.String)">
            <summary>
            Get the file type for a file path (no period)<br></br>
            Default path is the currently open file.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.NppUtils.GetSlice(System.Int32,System.Int32)">
            <summary>
            get all text starting at position start in the current document
            and ending at position end in the current document
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.NppUtils.GetEndOfLineString(System.Int32)">
            <summary>0: CRLF, 1: CR, 2: LF<br></br>
            Anything less than 0 or greater than 2: LF</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.NppUtils.CharToSb(System.Text.StringBuilder,System.Char)">
            <summary>
            appends the JSON representation of char c to a StringBuilder.<br></br>
            for most characters, this just means appending the character itself, but for example '\n' would become "\\n", '\t' would become "\\t",<br></br>
            and most other chars less than 32 would be appended as "\\u00{char value in hex}" (e.g., '\x14' becomes "\\u0014")
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.NppUtils.StrToString(System.String,System.Boolean)">
            <summary>
            the string representation of a JSON string
            if not quoted, this will not have the enclosing quotes a JSON string normally has
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.SelectionManager.ParseStartEnd(System.String)">
            <summary>
            takes a list of one or more comma-separated integers
            and transforms it into an array of numbers.
            </summary>
            <param name="startEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.SelectionManager.StartFromStartEnd(System.String)">
            <summary>
            extract INTEGER1 from string of form INTEGER1,INTEGER2
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.SelectionManager.StartEndCompareByStart(System.String,System.String)">
            <summary>
            compare two strings, "INTEGER1,INTEGER2" and "INTEGER3,INTEGER4"
            comparing INTEGER1 to INTEGER3
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.SelectionManager.StartEndListToString(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Int32}},System.String)">
            <summary>
            Given selections (selstart1,selend1), (selstart2,selend2), ..., (selstartN,selendN)<br></br>
            returns a sep-separated list of "start,end" pairs.<br></br>
            EXAMPLE:<br></br>
            * StartEndListToString([(1, 2), (5, 7)], "], [") returns "1,2], [5,7"<br></br>
            * StartEndListToString([(1, 2), (9, 20), (30,45)], " ") returns "1,2 9,20 30,45"
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.SelectionManager.StartEndListToString(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            equivalent to sep.Join(selections)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.NppTbMsg">
            <summary>
            Defines for the Docking Manager.<br/>
            <c>CONT_*</c> :  styles for containers<br/>
            <c>DWS_*</c>  :  mask params for plugins of internal dialogs<br/>
            <c>DWS_DF_*</c> : default docking values for first call of plugin
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_ICONTAB">
            <summary>
            Icon for tabs are available
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_ICONBAR">
            <summary>
            Icon for icon bar are available (currently not supported)
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_ADDINFO">
            <summary>
            Additional information are in use
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_PARAMSALL">
            <summary>
            Combines all properties of <see cref="F:Npp.DotNet.Plugin.NppTbMsg.DWS_ICONTAB"/>, <see cref="F:Npp.DotNet.Plugin.NppTbMsg.DWS_ICONBAR"/> and <see cref="F:Npp.DotNet.Plugin.NppTbMsg.DWS_ADDINFO"/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_DF_CONT_LEFT">
            <summary>
            Default docking on left
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_DF_CONT_RIGHT">
            <summary>
            Default docking on right
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_DF_CONT_TOP">
            <summary>
            Default docking on top
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_DF_CONT_BOTTOM">
            <summary>
            Default docking on bottom
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbMsg.DWS_DF_FLOATING">
            <summary>
            Default state is floating
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.DockMgrMsg.DMN_FIRST">
            <summary>
            <example>
            Usage: <c>nmhdr.Code = DWORD(DMN_XXX, int newContainer)</c><br/>
            e.g.,
            <code>
                nmhdr.Code = DWORD(DMN_CLOSE, 0));
                nmhdr.hwndFrom = hwndNpp;
                nmhdr.IdFrom = ctrlIdNpp;
            </code>
            </example>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.HClient">
            <summary>
            Client window handle
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.PszName">
            <summary>
            Name of plugin (shown in window's title bar)
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.DlgID">
            <summary>
            Command id of the plugin function that will launch the window
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.UMask">
            <summary>
            Mask params. See <see cref="T:Npp.DotNet.Plugin.NppTbMsg"/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.HIconTab">
            <summary>
            Icon for tabs
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.PszAddInfo">
            <summary>
            Additional information (shown in window's title bar)
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.RcFloat">
            <summary>
            Floating position
            </summary>
            <remarks>
            Internal data, DO NOT USE
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.IPrevCont">
            <summary>
            Stores the previous container (toggling between float and dock)
            </summary>
            <remarks>
            Internal data, DO NOT USE
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppTbData.PszModuleName">
            <summary>
            Plugin file name, including '.dll'
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.PluginFuncArray">
            <summary>
            Encapsulates a plugin's functions as a managed collection of <see cref="T:Npp.DotNet.Plugin.FuncItem"/> items.<br/>
            Extracted and adapted for .NET SDK from <c>NppPluginNETHelper.cs</c>, part of
            <a href="https://github.com/kbilsted/NotepadPlusPlusPluginPack.Net/">NotepadPlusPlusPluginPack.Net</a>.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Colour">
            <summary>
            Colours are set using the RGB format (Red, Green, Blue). The intensity of each colour is set in the range 0 to 255.
            If you have three such intensities, they are combined as: red | (green &lt;&lt; 8) | (blue &lt;&lt; 16).
            If you set all intensities to 255, the colour is white. If you set all intensities to 0, the colour is black.
            When you set a colour, you are making a request. What you will get depends on the capabilities of the system and the current screen mode.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Colour.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary></summary>
            <param name="red">a number 0-255</param>
            <param name="green">a number 0-255</param>
            <param name="blue">a number 0-255</param>
        </member>
        <member name="T:Npp.DotNet.Plugin.Position">
            <summary>
            Positions within the Scintilla document refer to a character or the gap before that character.
            The first character in a document is 0, the second 1 and so on. If a document contains nLen characters, the last character is numbered nLen-1. The caret exists between character positions and can be located from before the first character (0) to after the last character (nLen).
            <br/>
            There are places where the caret can not go where two character bytes make up one character.
            This occurs when a DBCS character from a language like Japanese is included in the document or when line ends are marked with the CP/M
            standard of a carriage return followed by a line feed.The INVALID_POSITION constant(-1) represents an invalid position within the document.
            <br/>
            All lines of text in Scintilla are the same height, and this height is calculated from the largest font in any current style.This restriction
            is for performance; if lines differed in height then calculations involving positioning of text would require the text to be styled first.
            <br/>
            If you use messages, there is nothing to stop you setting a position that is in the middle of a CRLF pair, or in the middle of a 2 byte character.
            However, keyboard commands will not move the caret into such positions.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.KeyModifier">
            <summary>
            Class containing key and modifiers
            <br/>
            The key code is a visible or control character or a key from the SCK_* enumeration, which contains:
            SCK_ADD, SCK_BACK, SCK_DELETE, SCK_DIVIDE, SCK_DOWN, SCK_END, SCK_ESCAPE, SCK_HOME, SCK_INSERT, SCK_LEFT, SCK_MENU, SCK_NEXT(Page Down), SCK_PRIOR(Page Up), S
            CK_RETURN, SCK_RIGHT, SCK_RWIN, SCK_SUBTRACT, SCK_TAB, SCK_UP, and SCK_WIN.
            <br/>
            The modifiers are a combination of zero or more of SCMOD_ALT, SCMOD_CTRL, SCMOD_SHIFT, SCMOD_META, and SCMOD_SUPER.
            On OS X, the Command key is mapped to SCMOD_CTRL and the Control key to SCMOD_META.SCMOD_SUPER is only available on GTK+ which is commonly the Windows key.
            If you are building a table, you might want to use SCMOD_NORM, which has the value 0, to mean no modifiers.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.KeyModifier.#ctor(Npp.DotNet.Plugin.SciMsg,Npp.DotNet.Plugin.SciMsg)">
            <summary>
            The key code is a visible or control character or a key from the SCK_* enumeration, which contains:
            SCK_ADD, SCK_BACK, SCK_DELETE, SCK_DIVIDE, SCK_DOWN, SCK_END, SCK_ESCAPE, SCK_HOME, SCK_INSERT, SCK_LEFT, SCK_MENU, SCK_NEXT(Page Down), SCK_PRIOR(Page Up),
            SCK_RETURN, SCK_RIGHT, SCK_RWIN, SCK_SUBTRACT, SCK_TAB, SCK_UP, and SCK_WIN.
            <br/>
            The modifiers are a combination of zero or more of SCMOD_ALT, SCMOD_CTRL, SCMOD_SHIFT, SCMOD_META, and SCMOD_SUPER.
            On OS X, the Command key is mapped to SCMOD_CTRL and the Control key to SCMOD_META.SCMOD_SUPER is only available on GTK+ which is commonly the Windows key.
            If you are building a table, you might want to use SCMOD_NORM, which has the value 0, to mean no modifiers.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.WhiteSpace">
            <summary>Is undo history being collected? (Scintilla feature SCWS_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.TabDrawMode">
            <summary>Make white space characters invisible, always visible or visible outside indentation. (Scintilla feature SCTD_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.EndOfLine">
            <summary>Retrieve the position of the last correctly styled character. (Scintilla feature SC_EOL_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.IMEInteraction">
            <summary>
            Set the code page used to interpret the bytes of the document as characters.
            The SC_CP_UTF8 value can be used to enter Unicode mode.
            (Scintilla feature SC_IME_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.MarkerSymbol">
            <summary>Choose to display the the IME in a winow or inline. (Scintilla feature SC_MARK_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.MarkerOutline">
            <summary>Invisible mark that only sets the line background colour. (Scintilla feature SC_MARKNUM_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.MarginType">
            <summary>Set the alpha used for a marker that is drawn in the text area, not the margin. (Scintilla feature SC_MARGIN_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.StylesCommon">
            <summary>Styles in range 32..39 are predefined for parts of the UI and are not used as normal styles. (Scintilla feature STYLE_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CharacterSet">
            <summary>
            Character set identifiers are used in StyleSetCharacterSet.
            The values are the same as the Windows *_CHARSET values.
            (Scintilla feature SC_CHARSET_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CaseVisible">
            <summary>Set a style to be underlined or not. (Scintilla feature SC_CASE_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.FontWeight">
            <summary>Get the size of characters of a style in points multiplied by 100 (Scintilla feature SC_WEIGHT_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.IndicatorStyle">
            <summary>Indicator style enumeration and some constants (Scintilla feature INDIC_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.IndicatorNumbers">
            <summary>
            INDIC_CONTAINER, INDIC_IME, INDIC_IME_MAX, and INDIC_MAX are indicator numbers,
            not IndicatorStyles so should not really be in the INDIC_ enumeration.
            They are redeclared in IndicatorNumbers INDICATOR_.
            (Scintilla feature INDICATOR_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.IndicValue">
            <summary>Retrieve the foreground hover colour of an indicator. (Scintilla feature SC_INDICVALUE)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.IndicFlag">
            <summary>Retrieve the foreground hover colour of an indicator. (Scintilla feature SC_INDICFLAG_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.IndentView">
            <summary>Is the horizontal scroll bar visible? (Scintilla feature SC_IV_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.PrintOption">
            <summary>Returns the print magnification. (Scintilla feature SC_PRINT_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.FindOption">
            <summary>Returns the print colour mode. (Scintilla feature SCFIND_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.FoldLevel">
            <summary>The number of display lines needed to wrap a document line (Scintilla feature SC_FOLDLEVEL)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.FoldDisplayTextStyle">
            <summary>Switch a header line between expanded and contracted and show some text after the line. (Scintilla feature SC_FOLDDISPLAYTEXT_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.FoldAction">
            <summary>Get the default fold display text. (Scintilla feature SC_FOLDACTION_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.AutomaticFold">
            <summary>Ensure a particular line is visible by expanding any header line hiding it. (Scintilla feature SC_AUTOMATICFOLD_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.FoldFlag">
            <summary>Get automatic folding behaviours. (Scintilla feature SC_FOLDFLAG_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.IdleStyling">
            <summary>Is the range start..end considered a word? (Scintilla feature SC_IDLESTYLING_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Wrap">
            <summary>Retrieve the limits to idle styling. (Scintilla feature SC_WRAP_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.WrapVisualFlag">
            <summary>Retrieve whether text is word wrapped. (Scintilla feature SC_WRAPVISUALFLAG_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.WrapVisualLocation">
            <summary>Retrive the display mode of visual flags for wrapped lines. (Scintilla feature SC_WRAPVISUALFLAGLOC_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.WrapIndentMode">
            <summary>Retrive the start indent for wrapped lines. (Scintilla feature SC_WRAPINDENT_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.LineCache">
            <summary>Retrieve how wrapped sublines are placed. Default is fixed. (Scintilla feature SC_CACHE_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.PhasesDraw">
            <summary>Append a string to the end of the document without changing the selection. (Scintilla feature SC_PHASES_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.FontQuality">
            <summary>Control font anti-aliasing. (Scintilla feature SC_EFF_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.MultiPaste">
            <summary>Scroll so that a display line is at the top of the display. (Scintilla feature SC_MULTIPASTE_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Accessibility">
            <summary>Set the other colour used as a chequerboard pattern in the fold margin (Scintilla feature SC_ACCESSIBILITY_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.EdgeVisualStyle">
            <summary>Set which document modification events are sent to the container. (Scintilla feature EDGE_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.PopUp">
            <summary>Retrieves the number of lines completely visible. (Scintilla feature SC_POPUP_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.DocumentOption">
            <summary>Retrieve the zoom level. (Scintilla feature SC_DOCUMENTOPTION_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Status">
            <summary>Get internal focus flag. (Scintilla feature SC_STATUS_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CursorShape">
            <summary>Get whether mouse wheel can be active outside the window. (Scintilla feature SC_CURSOR)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.VisiblePolicy">
            <summary>Constants for use with SetVisiblePolicy, similar to SetCaretPolicy. (Scintilla feature VISIBLE_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CaretPolicy">
            <summary>Set the focus to this Scintilla widget. (Scintilla feature CARET_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.SelectionMode">
            <summary>Copy argument text to the clipboard. (Scintilla feature SC_SEL_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CaseInsensitiveBehaviour">
            <summary>
            Get currently selected item text in the auto-completion list
            Returns the length of the item text
            Result is NUL-terminated.
            (Scintilla feature SC_CASEINSENSITIVEBEHAVIOUR_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.MultiAutoComplete">
            <summary>Get auto-completion case insensitive behaviour. (Scintilla feature SC_MULTIAUTOC_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Ordering">
            <summary>Retrieve the effect of autocompleting when there are multiple selections. (Scintilla feature SC_ORDER_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CaretSticky">
            <summary>Stop the caret preferred x position changing when the user types. (Scintilla feature SC_CARETSTICKY_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Alpha">
            <summary>Duplicate the selection. If selection empty duplicate the line containing the caret. (Scintilla feature SC_ALPHA_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CaretStyle">
            <summary>Get the background alpha of the caret line. (Scintilla feature CARETSTYLE_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.MarginOption">
            <summary>Get the start of the range of style numbers used for margin text (Scintilla feature SC_MARGINOPTION_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.AnnotationVisible">
            <summary>Clear the annotations from all lines (Scintilla feature ANNOTATION_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.UndoFlags">
            <summary>Allocate some extended (>255) style numbers and return the start of the range (Scintilla feature UNDO_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.VirtualSpace">
            <summary>Return the virtual space of the anchor of the rectangular selection. (Scintilla feature SCVS_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Technology">
            <summary>Scroll to end of document. (Scintilla feature SC_TECHNOLOGY_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.LineEndType">
            <summary>
            Line end types which may be used in addition to LF, CR, and CRLF
            SC_LINE_END_TYPE_UNICODE includes U+2028 Line Separator,
            U+2029 Paragraph Separator, and U+0085 Next Line
            (Scintilla feature SC_LINE_END_TYPE_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.TypeProperty">
            <summary>
            Retrieve a '\n' separated list of properties understood by the current lexer.
            Result is NUL-terminated.
            (Scintilla feature SC_TYPE_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.ModificationFlags">
            <summary>
            Notifications
            Type of modification and the action which caused the modification.
            These are defined as a bit mask to make it easy to specify which notifications are wanted.
            One bit is set from each of SC_MOD_* and SC_PERFORMED_*.
            (Scintilla feature SC_MOD_ SC_PERFORMED_ SC_MULTISTEPUNDOREDO SC_LASTSTEPINUNDOREDO SC_MULTILINEUNDOREDO SC_STARTACTION SC_MODEVENTMASKALL)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Update">
            <summary>
            Notifications
            Type of modification and the action which caused the modification.
            These are defined as a bit mask to make it easy to specify which notifications are wanted.
            One bit is set from each of SC_MOD_* and SC_PERFORMED_*.
            (Scintilla feature SC_UPDATE_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.KeyMod">
            <summary>
            Symbolic key codes and modifier flags.
            ASCII and other printable characters below 256.
            Extended keys above 300.
            (Scintilla feature SCMOD_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CompletionMethods">
            <summary>
            Symbolic key codes and modifier flags.
            ASCII and other printable characters below 256.
            Extended keys above 300.
            (Scintilla feature SC_AC_)
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CharacterSource">
            <summary>characterSource for SCN_CHARADDED (Scintilla feature SC_CHARACTERSOURCE_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Lexer">
            <summary>For SciLexer.h (Scintilla feature SCLEX_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Bidirectional">
            <summary>GTK Specific to work around focus and accelerator problems: (Scintilla feature SC_BIDIRECTIONAL_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.LineCharacterIndexType">
            <summary>Set bidirectional text display state. (Scintilla feature SC_LINECHARACTERINDEX_)</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.IScintillaGateway">
             <summary>
             This it the plugin-writers primary interface to Notepad++/Scintilla.
             It takes away all the complexity with command numbers and Int-pointer casting.
            
             See http://www.scintilla.org/ScintillaDoc.html for further details.
             </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCurrentLineNumber">
            <summary>
            Get the current line from the current position
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetScrollInfo(Npp.DotNet.Plugin.Win32.ScrollInfoMask,Npp.DotNet.Plugin.Win32.ScrollInfoBar)">
            <summary>
            Get the scroll information for the current Scintilla window.
            </summary>
            <param name="mask">Arguments for the scroll information such as tracking</param>
            <param name="scrollBar">Which scroll bar information are you looking for</param>
            <returns>A ScrollInfo struct with information of the current scroll state</returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AddText(System.Int32,System.String)">
            <summary>Add text to the document at current position. (Scintilla feature 2001)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AddStyledText(System.Int32,Npp.DotNet.Plugin.Cells)">
            <summary>Add array of cells to document. (Scintilla feature 2002)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.InsertText(System.Int32,System.String)">
            <summary>Insert string at a position. (Scintilla feature 2003)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ChangeInsertion(System.Int32,System.String)">
            <summary>Change the text that is being inserted in response to SC_MOD_INSERTCHECK (Scintilla feature 2672)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ClearAll">
            <summary>Delete all text in the document. (Scintilla feature 2004)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DeleteRange(System.Int32,System.Int32)">
            <summary>Delete a range of text in the document. (Scintilla feature 2645)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ClearDocumentStyle">
            <summary>Set all style bytes to 0, remove all folding information. (Scintilla feature 2005)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLength">
            <summary>Returns the number of bytes in the document. (Scintilla feature 2006)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCharAt(System.Int32)">
            <summary>Returns the character byte at the position. (Scintilla feature 2007)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCurrentPos">
            <summary>Returns the position of the caret. (Scintilla feature 2008)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAnchor">
            <summary>Returns the position of the opposite end of the selection to the caret. (Scintilla feature 2009)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetStyleAt(System.Int32)">
            <summary>Returns the style byte at the position. (Scintilla feature 2010)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Redo">
            <summary>Redoes the next action on the undo history. (Scintilla feature 2011)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetUndoCollection(System.Boolean)">
            <summary>
            Choose between collecting actions into the undo
            history and discarding them.
            (Scintilla feature 2012)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SelectAll">
            <summary>Select all the text in the document. (Scintilla feature 2013)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSavePoint">
            <summary>
            Remember the current position in the undo history as the position
            at which the document was saved.
            (Scintilla feature 2014)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetStyledText(Npp.DotNet.Plugin.TextRange)">
            <summary>
            Retrieve a buffer of cells.
            Returns the number of bytes in the buffer not including terminating NULs.
            (Scintilla feature 2015)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CanRedo">
            <summary>Are there any redoable actions in the undo history? (Scintilla feature 2016)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerLineFromHandle(System.Int32)">
            <summary>Retrieve the line number at which a particular marker is located. (Scintilla feature 2017)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerDeleteHandle(System.Int32)">
            <summary>Delete a marker. (Scintilla feature 2018)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetUndoCollection">
            <summary>Is undo history being collected? (Scintilla feature 2019)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetViewWS">
            <summary>
            Are white space characters currently visible?
            Returns one of SCWS_* constants.
            (Scintilla feature 2020)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetViewWS(Npp.DotNet.Plugin.WhiteSpace)">
            <summary>Make white space characters invisible, always visible or visible outside indentation. (Scintilla feature 2021)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTabDrawMode">
            <summary>
            Retrieve the current tab draw mode.
            Returns one of SCTD_* constants.
            (Scintilla feature 2698)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetTabDrawMode(Npp.DotNet.Plugin.TabDrawMode)">
            <summary>Set how tabs are drawn when visible. (Scintilla feature 2699)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PositionFromPoint(System.Int32,System.Int32)">
            <summary>Find the position from a point within the window. (Scintilla feature 2022)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PositionFromPointClose(System.Int32,System.Int32)">
            <summary>
            Find the position from a point within the window but return
            INVALID_POSITION if not close to text.
            (Scintilla feature 2023)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GotoLine(System.Int32)">
            <summary>Set caret to start of a line and ensure it is visible. (Scintilla feature 2024)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GotoPos(System.Int32)">
            <summary>Set caret to a position and ensure it is visible. (Scintilla feature 2025)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAnchor(System.Int32)">
            <summary>
            Set the selection anchor to a position. The anchor is the opposite
            end of the selection from the caret.
            (Scintilla feature 2026)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCurLine">
            <summary>
            Retrieve the text of the line containing the caret.
            Returns the index of the caret on the line.
            Result is NUL-terminated.
            (Scintilla feature 2027)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetEndStyled">
            <summary>Retrieve the position of the last correctly styled character. (Scintilla feature 2028)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ConvertEOLs(Npp.DotNet.Plugin.EndOfLine)">
            <summary>Convert all line endings in the document to one mode. (Scintilla feature 2029)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetEOLMode">
            <summary>Retrieve the current end of line mode - one of CRLF, CR, or LF. (Scintilla feature 2030)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetEOLMode(Npp.DotNet.Plugin.EndOfLine)">
            <summary>Set the current end of line mode. (Scintilla feature 2031)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StartStyling(System.Int32,System.Int32)">
            <summary>
            Set the current styling position to start.
            The unused parameter is no longer used and should be set to 0.
            (Scintilla feature 2032)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetStyling(System.Int32,System.Int32)">
            <summary>
            Change style from current styling position for length characters to a style
            and move the current styling position to after this newly styled segment.
            (Scintilla feature 2033)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetBufferedDraw">
            <summary>Is drawing done first into a buffer or direct to the screen? (Scintilla feature 2034)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetBufferedDraw(System.Boolean)">
            <summary>
            If drawing is buffered then each line of text is drawn into a bitmap buffer
            before drawing it to the screen to avoid flicker.
            (Scintilla feature 2035)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetTabWidth(System.Int32)">
            <summary>Change the visible size of a tab to be a multiple of the width of a space character. (Scintilla feature 2036)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTabWidth">
            <summary>Retrieve the visible size of a tab. (Scintilla feature 2121)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ClearTabStops(System.Int32)">
            <summary>Clear explicit tabstops on a line. (Scintilla feature 2675)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AddTabStop(System.Int32,System.Int32)">
            <summary>Add an explicit tab stop for a line. (Scintilla feature 2676)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetNextTabStop(System.Int32,System.Int32)">
            <summary>Find the next explicit tab stop position on a line after a position. (Scintilla feature 2677)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCodePage(System.Int32)">
            <summary>
            Set the code page used to interpret the bytes of the document as characters.
            The SC_CP_UTF8 value can be used to enter Unicode mode.
            (Scintilla feature 2037)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetIMEInteraction">
            <summary>Is the IME displayed in a window or inline? (Scintilla feature 2678)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetIMEInteraction(Npp.DotNet.Plugin.IMEInteraction)">
            <summary>Choose to display the the IME in a winow or inline. (Scintilla feature 2679)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerDefine(System.Int32,Npp.DotNet.Plugin.MarkerSymbol)">
            <summary>Set the symbol used for a particular marker number. (Scintilla feature 2040)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerSetFore(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour used for a particular marker number. (Scintilla feature 2041)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerSetBack(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour used for a particular marker number. (Scintilla feature 2042)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerSetBackSelected(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour used for a particular marker number when its folding block is selected. (Scintilla feature 2292)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerEnableHighlight(System.Boolean)">
            <summary>Enable/disable highlight for current folding bloc (smallest one that contains the caret) (Scintilla feature 2293)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerAdd(System.Int32,System.Int32)">
            <summary>Add a marker to a line, returning an ID which can be used to find or delete the marker. (Scintilla feature 2043)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerDelete(System.Int32,System.Int32)">
            <summary>Delete a marker from a line. (Scintilla feature 2044)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerDeleteAll(System.Int32)">
            <summary>Delete all markers with a particular number from all lines. (Scintilla feature 2045)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerGet(System.Int32)">
            <summary>Get a bit mask of all the markers set on a line. (Scintilla feature 2046)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerNext(System.Int32,System.Int32)">
            <summary>
            Find the next line at or after lineStart that includes a marker in mask.
            Return -1 when no more lines.
            (Scintilla feature 2047)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerPrevious(System.Int32,System.Int32)">
            <summary>Find the previous line before lineStart that includes a marker in mask. (Scintilla feature 2048)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerDefinePixmap(System.Int32,System.String)">
            <summary>Define a marker from a pixmap. (Scintilla feature 2049)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerAddSet(System.Int32,System.Int32)">
            <summary>Add a set of markers to a line. (Scintilla feature 2466)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerSetAlpha(System.Int32,Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha used for a marker that is drawn in the text area, not the margin. (Scintilla feature 2476)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginTypeN(System.Int32,Npp.DotNet.Plugin.MarginType)">
            <summary>Set a margin to be either numeric or symbolic. (Scintilla feature 2240)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginTypeN(System.Int32)">
            <summary>Retrieve the type of a margin. (Scintilla feature 2241)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginWidthN(System.Int32,System.Int32)">
            <summary>Set the width of a margin to a width expressed in pixels. (Scintilla feature 2242)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginWidthN(System.Int32)">
            <summary>Retrieve the width of a margin in pixels. (Scintilla feature 2243)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginMaskN(System.Int32,System.Int32)">
            <summary>Set a mask that determines which markers are displayed in a margin. (Scintilla feature 2244)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginMaskN(System.Int32)">
            <summary>Retrieve the marker mask of a margin. (Scintilla feature 2245)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginSensitiveN(System.Int32,System.Boolean)">
            <summary>Make a margin sensitive or insensitive to mouse clicks. (Scintilla feature 2246)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginSensitiveN(System.Int32)">
            <summary>Retrieve the mouse click sensitivity of a margin. (Scintilla feature 2247)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginCursorN(System.Int32,Npp.DotNet.Plugin.CursorShape)">
            <summary>Set the cursor shown when the mouse is inside a margin. (Scintilla feature 2248)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginCursorN(System.Int32)">
            <summary>Retrieve the cursor shown in a margin. (Scintilla feature 2249)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginBackN(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour of a margin. Only visible for SC_MARGIN_COLOUR. (Scintilla feature 2250)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginBackN(System.Int32)">
            <summary>Retrieve the background colour of a margin (Scintilla feature 2251)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMargins(System.Int32)">
            <summary>Allocate a non-standard number of margins. (Scintilla feature 2252)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMargins">
            <summary>How many margins are there?. (Scintilla feature 2253)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleClearAll">
            <summary>Clear all the styles and make equivalent to the global default style. (Scintilla feature 2050)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetFore(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of a style. (Scintilla feature 2051)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetBack(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour of a style. (Scintilla feature 2052)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetBold(System.Int32,System.Boolean)">
            <summary>Set a style to be bold or not. (Scintilla feature 2053)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetItalic(System.Int32,System.Boolean)">
            <summary>Set a style to be italic or not. (Scintilla feature 2054)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetSize(System.Int32,System.Int32)">
            <summary>Set the size of characters of a style. (Scintilla feature 2055)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetFont(System.Int32,System.String)">
            <summary>Set the font of a style. (Scintilla feature 2056)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetEOLFilled(System.Int32,System.Boolean)">
            <summary>Set a style to have its end of line filled or not. (Scintilla feature 2057)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleResetDefault">
            <summary>Reset the default style to its state at startup (Scintilla feature 2058)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetUnderline(System.Int32,System.Boolean)">
            <summary>Set a style to be underlined or not. (Scintilla feature 2059)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetFore(System.Int32)">
            <summary>Get the foreground colour of a style. (Scintilla feature 2481)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetBack(System.Int32)">
            <summary>Get the background colour of a style. (Scintilla feature 2482)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetBold(System.Int32)">
            <summary>Get is a style bold or not. (Scintilla feature 2483)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetItalic(System.Int32)">
            <summary>Get is a style italic or not. (Scintilla feature 2484)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetSize(System.Int32)">
            <summary>Get the size of characters of a style. (Scintilla feature 2485)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetFont(System.Int32)">
            <summary>
            Get the font of a style.
            Returns the length of the fontName
            Result is NUL-terminated.
            (Scintilla feature 2486)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetEOLFilled(System.Int32)">
            <summary>Get is a style to have its end of line filled or not. (Scintilla feature 2487)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetUnderline(System.Int32)">
            <summary>Get is a style underlined or not. (Scintilla feature 2488)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetCase(System.Int32)">
            <summary>Get is a style mixed case, or to force upper or lower case. (Scintilla feature 2489)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetCharacterSet(System.Int32)">
            <summary>Get the character get of the font in a style. (Scintilla feature 2490)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetVisible(System.Int32)">
            <summary>Get is a style visible or not. (Scintilla feature 2491)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetChangeable(System.Int32)">
            <summary>
            Get is a style changeable or not (read only).
            Experimental feature, currently buggy.
            (Scintilla feature 2492)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetHotSpot(System.Int32)">
            <summary>Get is a style a hotspot or not. (Scintilla feature 2493)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetCase(System.Int32,Npp.DotNet.Plugin.CaseVisible)">
            <summary>Set a style to be mixed case, or to force upper or lower case. (Scintilla feature 2060)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetSizeFractional(System.Int32,System.Int32)">
            <summary>Set the size of characters of a style. Size is in points multiplied by 100. (Scintilla feature 2061)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetSizeFractional(System.Int32)">
            <summary>Get the size of characters of a style in points multiplied by 100 (Scintilla feature 2062)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetWeight(System.Int32,Npp.DotNet.Plugin.FontWeight)">
            <summary>Set the weight of characters of a style. (Scintilla feature 2063)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleGetWeight(System.Int32)">
            <summary>Get the weight of characters of a style. (Scintilla feature 2064)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetCharacterSet(System.Int32,Npp.DotNet.Plugin.CharacterSet)">
            <summary>Set the character set of the font in a style. (Scintilla feature 2066)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetHotSpot(System.Int32,System.Boolean)">
            <summary>Set a style to be a hotspot or not. (Scintilla feature 2409)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelFore(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of the main and additional selections and whether to use this setting. (Scintilla feature 2067)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelBack(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour of the main and additional selections and whether to use this setting. (Scintilla feature 2068)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelAlpha">
            <summary>Get the alpha of the selection. (Scintilla feature 2477)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelAlpha(Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha of the selection. (Scintilla feature 2478)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelEOLFilled">
            <summary>Is the selection end of line filled? (Scintilla feature 2479)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelEOLFilled(System.Boolean)">
            <summary>Set the selection to have its end of line filled or not. (Scintilla feature 2480)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretFore(Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of the caret. (Scintilla feature 2069)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AssignCmdKey(Npp.DotNet.Plugin.KeyModifier,System.Int32)">
            <summary>When key+modifier combination keyDefinition is pressed perform sciCommand. (Scintilla feature 2070)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ClearCmdKey(Npp.DotNet.Plugin.KeyModifier)">
            <summary>When key+modifier combination keyDefinition is pressed do nothing. (Scintilla feature 2071)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ClearAllCmdKeys">
            <summary>Drop all key mappings. (Scintilla feature 2072)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetStylingEx(System.Int32,System.String)">
            <summary>Set the styles for a segment of the document. (Scintilla feature 2073)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetVisible(System.Int32,System.Boolean)">
            <summary>Set a style to be visible or not. (Scintilla feature 2074)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretPeriod">
            <summary>Get the time in milliseconds that the caret is on and off. (Scintilla feature 2075)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretPeriod(System.Int32)">
            <summary>Get the time in milliseconds that the caret is on and off. 0 = steady on. (Scintilla feature 2076)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWordChars(System.String)">
            <summary>
            Set the set of characters making up words for when moving or selecting by word.
            First sets defaults like SetCharsDefault.
            (Scintilla feature 2077)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetWordChars">
            <summary>
            Get the set of characters making up words for when moving or selecting by word.
            Returns the number of characters
            (Scintilla feature 2646)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCharacterCategoryOptimization(System.Int32)">
            <summary>Set the number of characters to have directly indexed categories (Scintilla feature 2720)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCharacterCategoryOptimization">
            <summary>Get the number of characters to have directly indexed categories (Scintilla feature 2721)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.BeginUndoAction">
            <summary>
            Start a sequence of actions that is undone and redone as a unit.
            May be nested.
            (Scintilla feature 2078)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.EndUndoAction">
            <summary>End a sequence of actions that is undone and redone as a unit. (Scintilla feature 2079)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicSetStyle(System.Int32,Npp.DotNet.Plugin.IndicatorStyle)">
            <summary>Set an indicator to plain, squiggle or TT. (Scintilla feature 2080)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicGetStyle(System.Int32)">
            <summary>Retrieve the style of an indicator. (Scintilla feature 2081)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicSetFore(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of an indicator. (Scintilla feature 2082)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicGetFore(System.Int32)">
            <summary>Retrieve the foreground colour of an indicator. (Scintilla feature 2083)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicSetUnder(System.Int32,System.Boolean)">
            <summary>Set an indicator to draw under text or over(default). (Scintilla feature 2510)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicGetUnder(System.Int32)">
            <summary>Retrieve whether indicator drawn under or over text. (Scintilla feature 2511)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicSetHoverStyle(System.Int32,Npp.DotNet.Plugin.IndicatorStyle)">
            <summary>Set a hover indicator to plain, squiggle or TT. (Scintilla feature 2680)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicGetHoverStyle(System.Int32)">
            <summary>Retrieve the hover style of an indicator. (Scintilla feature 2681)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicSetHoverFore(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground hover colour of an indicator. (Scintilla feature 2682)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicGetHoverFore(System.Int32)">
            <summary>Retrieve the foreground hover colour of an indicator. (Scintilla feature 2683)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicSetFlags(System.Int32,Npp.DotNet.Plugin.IndicFlag)">
            <summary>Set the attributes of an indicator. (Scintilla feature 2684)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicGetFlags(System.Int32)">
            <summary>Retrieve the attributes of an indicator. (Scintilla feature 2685)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWhitespaceFore(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of all whitespace and whether to use this setting. (Scintilla feature 2084)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWhitespaceBack(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour of all whitespace and whether to use this setting. (Scintilla feature 2085)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWhitespaceSize(System.Int32)">
            <summary>Set the size of the dots used to mark space characters. (Scintilla feature 2086)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetWhitespaceSize">
            <summary>Get the size of the dots used to mark space characters. (Scintilla feature 2087)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetLineState(System.Int32,System.Int32)">
            <summary>Used to hold extra styling information for each line. (Scintilla feature 2092)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineState(System.Int32)">
            <summary>Retrieve the extra styling information for a line. (Scintilla feature 2093)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMaxLineState">
            <summary>Retrieve the last line number that has line state. (Scintilla feature 2094)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretLineVisible">
            <summary>Is the background of the line containing the caret in a different colour? (Scintilla feature 2095)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretLineVisible(System.Boolean)">
            <summary>Display the background of the line containing the caret in a different colour. (Scintilla feature 2096)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretLineBack">
            <summary>Get the colour of the background of the line containing the caret. (Scintilla feature 2097)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretLineBack(Npp.DotNet.Plugin.Colour)">
            <summary>Set the colour of the background of the line containing the caret. (Scintilla feature 2098)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretLineFrame">
            <summary>
            Retrieve the caret line frame width.
            Width = 0 means this option is disabled.
            (Scintilla feature 2704)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretLineFrame(System.Int32)">
            <summary>
            Display the caret line framed.
            Set width != 0 to enable this option and width = 0 to disable it.
            (Scintilla feature 2705)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StyleSetChangeable(System.Int32,System.Boolean)">
            <summary>
            Set a style to be changeable or not (read only).
            Experimental feature, currently buggy.
            (Scintilla feature 2099)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCShow(System.Int32,System.String)">
            <summary>
            Display a auto-completion list.
            The lengthEntered parameter indicates how many characters before
            the caret should be used to provide context.
            (Scintilla feature 2100)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCCancel">
            <summary>Remove the auto-completion list from the screen. (Scintilla feature 2101)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCActive">
            <summary>Is there an auto-completion list visible? (Scintilla feature 2102)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCPosStart">
            <summary>Retrieve the position of the caret when the auto-completion list was displayed. (Scintilla feature 2103)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCComplete">
            <summary>User has selected an item so remove the list and insert the selection. (Scintilla feature 2104)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCStops(System.String)">
            <summary>Define a set of character that when typed cancel the auto-completion list. (Scintilla feature 2105)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetSeparator(System.Int32)">
            <summary>
            Change the separator character in the string setting up an auto-completion list.
            Default is space but can be changed if items contain space.
            (Scintilla feature 2106)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetSeparator">
            <summary>Retrieve the auto-completion list separator character. (Scintilla feature 2107)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSelect(System.String)">
            <summary>Select the item in the auto-completion list that starts with a string. (Scintilla feature 2108)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetCancelAtStart(System.Boolean)">
            <summary>
            Should the auto-completion list be cancelled if the user backspaces to a
            position before where the box was created.
            (Scintilla feature 2110)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetCancelAtStart">
            <summary>Retrieve whether auto-completion cancelled by backspacing before start. (Scintilla feature 2111)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetFillUps(System.String)">
            <summary>
            Define a set of characters that when typed will cause the autocompletion to
            choose the selected item.
            (Scintilla feature 2112)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetChooseSingle(System.Boolean)">
            <summary>Should a single item auto-completion list automatically choose the item. (Scintilla feature 2113)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetChooseSingle">
            <summary>Retrieve whether a single item auto-completion list automatically choose the item. (Scintilla feature 2114)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetIgnoreCase(System.Boolean)">
            <summary>Set whether case is significant when performing auto-completion searches. (Scintilla feature 2115)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetIgnoreCase">
            <summary>Retrieve state of ignore case flag. (Scintilla feature 2116)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.UserListShow(System.Int32,System.String)">
            <summary>Display a list of strings and send notification when user chooses one. (Scintilla feature 2117)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetAutoHide(System.Boolean)">
            <summary>Set whether or not autocompletion is hidden automatically when nothing matches. (Scintilla feature 2118)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetAutoHide">
            <summary>Retrieve whether or not autocompletion is hidden automatically when nothing matches. (Scintilla feature 2119)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetDropRestOfWord(System.Boolean)">
            <summary>
            Set whether or not autocompletion deletes any word characters
            after the inserted text upon completion.
            (Scintilla feature 2270)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetDropRestOfWord">
            <summary>
            Retrieve whether or not autocompletion deletes any word characters
            after the inserted text upon completion.
            (Scintilla feature 2271)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.RegisterImage(System.Int32,System.String)">
            <summary>Register an XPM image for use in autocompletion lists. (Scintilla feature 2405)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ClearRegisteredImages">
            <summary>Clear all the registered XPM images. (Scintilla feature 2408)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetTypeSeparator">
            <summary>Retrieve the auto-completion list type-separator character. (Scintilla feature 2285)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetTypeSeparator(System.Int32)">
            <summary>
            Change the type-separator character in the string setting up an auto-completion list.
            Default is '?' but can be changed if items contain '?'.
            (Scintilla feature 2286)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetMaxWidth(System.Int32)">
            <summary>
            Set the maximum width, in characters, of auto-completion and user lists.
            Set to 0 to autosize to fit longest item, which is the default.
            (Scintilla feature 2208)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetMaxWidth">
            <summary>Get the maximum width, in characters, of auto-completion and user lists. (Scintilla feature 2209)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetMaxHeight(System.Int32)">
            <summary>
            Set the maximum height, in rows, of auto-completion and user lists.
            The default is 5 rows.
            (Scintilla feature 2210)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetMaxHeight">
            <summary>Set the maximum height, in rows, of auto-completion and user lists. (Scintilla feature 2211)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetIndent(System.Int32)">
            <summary>Set the number of spaces used for one level of indentation. (Scintilla feature 2122)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetIndent">
            <summary>Retrieve indentation size. (Scintilla feature 2123)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetUseTabs(System.Boolean)">
            <summary>
            Indentation will only use space characters if useTabs is false, otherwise
            it will use a combination of tabs and spaces.
            (Scintilla feature 2124)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetUseTabs">
            <summary>Retrieve whether tabs will be used in indentation. (Scintilla feature 2125)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetLineIndentation(System.Int32,System.Int32)">
            <summary>Change the indentation of a line to a number of columns. (Scintilla feature 2126)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineIndentation(System.Int32)">
            <summary>Retrieve the number of columns that a line is indented. (Scintilla feature 2127)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineIndentPosition(System.Int32)">
            <summary>Retrieve the position before the first non indentation character on a line. (Scintilla feature 2128)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetColumn(System.Int32)">
            <summary>Retrieve the column number of a position, taking tab width into account. (Scintilla feature 2129)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CountCharacters(System.Int32,System.Int32)">
            <summary>Count characters between two positions. (Scintilla feature 2633)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CountCodeUnits(System.Int32,System.Int32)">
            <summary>Count code units between two positions. (Scintilla feature 2715)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetHScrollBar(System.Boolean)">
            <summary>Show or hide the horizontal scroll bar. (Scintilla feature 2130)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetHScrollBar">
            <summary>Is the horizontal scroll bar visible? (Scintilla feature 2131)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetIndentationGuides(Npp.DotNet.Plugin.IndentView)">
            <summary>Show or hide indentation guides. (Scintilla feature 2132)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetIndentationGuides">
            <summary>Are the indentation guides visible? (Scintilla feature 2133)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetHighlightGuide(System.Int32)">
            <summary>
            Set the highlighted indentation guide column.
            0 = no highlighted guide.
            (Scintilla feature 2134)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetHighlightGuide">
            <summary>Get the highlighted indentation guide column. (Scintilla feature 2135)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineEndPosition(System.Int32)">
            <summary>Get the position after the last visible characters on a line. (Scintilla feature 2136)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCodePage">
            <summary>Get the code page used to interpret the bytes of the document as characters. (Scintilla feature 2137)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretFore">
            <summary>Get the foreground colour of the caret. (Scintilla feature 2138)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetReadOnly">
            <summary>In read-only mode? (Scintilla feature 2140)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCurrentPos(System.Int32)">
            <summary>Sets the position of the caret. (Scintilla feature 2141)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionStart(System.Int32)">
            <summary>Sets the position that starts the selection - this becomes the anchor. (Scintilla feature 2142)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionStart">
            <summary>Returns the position at the start of the selection. (Scintilla feature 2143)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionEnd(System.Int32)">
            <summary>Sets the position that ends the selection - this becomes the caret. (Scintilla feature 2144)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionEnd">
            <summary>Returns the position at the end of the selection. (Scintilla feature 2145)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetEmptySelection(System.Int32)">
            <summary>Set caret to a position, while removing any existing selection. (Scintilla feature 2556)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetPrintMagnification(System.Int32)">
            <summary>Sets the print magnification added to the point size of each style for printing. (Scintilla feature 2146)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPrintMagnification">
            <summary>Returns the print magnification. (Scintilla feature 2147)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetPrintColourMode(Npp.DotNet.Plugin.PrintOption)">
            <summary>Modify colours when printing for clearer printed text. (Scintilla feature 2148)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPrintColourMode">
            <summary>Returns the print colour mode. (Scintilla feature 2149)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FindText(Npp.DotNet.Plugin.FindOption,Npp.DotNet.Plugin.TextToFind)">
            <summary>Find some text in the document. (Scintilla feature 2150)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetFirstVisibleLine">
            <summary>Retrieve the display line at the top of the display. (Scintilla feature 2152)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLine(System.Int32)">
            <summary>
            Retrieve the contents of a line.
            Returns the length of the line.
            (Scintilla feature 2153)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineCount">
            <summary>Returns the number of lines in the document. There is always at least one. (Scintilla feature 2154)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginLeft(System.Int32)">
            <summary>Sets the size in pixels of the left margin. (Scintilla feature 2155)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginLeft">
            <summary>Returns the size in pixels of the left margin. (Scintilla feature 2156)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginRight(System.Int32)">
            <summary>Sets the size in pixels of the right margin. (Scintilla feature 2157)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginRight">
            <summary>Returns the size in pixels of the right margin. (Scintilla feature 2158)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetModify">
            <summary>Is the document different from when it was last saved? (Scintilla feature 2159)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSel(System.Int32,System.Int32)">
            <summary>Select a range of text. (Scintilla feature 2160)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelText">
            <summary>
            Retrieve the selected text.
            Return the length of the text.
            Result is NUL-terminated.
            (Scintilla feature 2161)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTextRange(Npp.DotNet.Plugin.TextRange)">
            <summary>
            Retrieve a range of text.
            Return the length of the text.
            (Scintilla feature 2162)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.HideSelection(System.Boolean)">
            <summary>Draw the selection either highlighted or in normal (non-highlighted) style. (Scintilla feature 2163)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PointXFromPosition(System.Int32)">
            <summary>Retrieve the x value of the point in the window where a position is displayed. (Scintilla feature 2164)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PointYFromPosition(System.Int32)">
            <summary>Retrieve the y value of the point in the window where a position is displayed. (Scintilla feature 2165)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineFromPosition(System.Int32)">
            <summary>Retrieve the line containing a position. (Scintilla feature 2166)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PositionFromLine(System.Int32)">
            <summary>Retrieve the position at the start of a line. (Scintilla feature 2167)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineScroll(System.Int32,System.Int32)">
            <summary>Scroll horizontally and vertically. (Scintilla feature 2168)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ScrollCaret">
            <summary>Ensure the caret is visible. (Scintilla feature 2169)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ScrollRange(System.Int32,System.Int32)">
            <summary>
            Scroll the argument positions and the range between them into view giving
            priority to the primary position then the secondary position.
            This may be used to make a search match visible.
            (Scintilla feature 2569)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ReplaceSel(System.String)">
            <summary>Replace the selected text with the argument text. (Scintilla feature 2170)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetReadOnly(System.Boolean)">
            <summary>Set to read only or read write. (Scintilla feature 2171)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Null">
            <summary>Null operation. (Scintilla feature 2172)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CanPaste">
            <summary>Will a paste succeed? (Scintilla feature 2173)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CanUndo">
            <summary>Are there any undoable actions in the undo history? (Scintilla feature 2174)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.EmptyUndoBuffer">
            <summary>Delete the undo history. (Scintilla feature 2175)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Undo">
            <summary>Undo one action in the undo history. (Scintilla feature 2176)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Cut">
            <summary>Cut the selection to the clipboard. (Scintilla feature 2177)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Copy">
            <summary>Copy the selection to the clipboard. (Scintilla feature 2178)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Paste">
            <summary>Paste the contents of the clipboard into the document replacing the selection. (Scintilla feature 2179)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Clear">
            <summary>Clear the selection. (Scintilla feature 2180)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetText(System.String)">
            <summary>Replace the contents of the document with the argument text. (Scintilla feature 2181)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetText(System.Int32)">
            <summary>
            Retrieve all the text in the document (or the first length chars of the document).
            Returns number of characters retrieved.
            Result is NUL-terminated.
            (Scintilla feature 2182)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTextLength">
            <summary>Retrieve the number of characters in the document. (Scintilla feature 2183)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetDirectFunction">
            <summary>Retrieve a pointer to a function that processes messages for this Scintilla. (Scintilla feature 2184)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetDirectPointer">
            <summary>
            Retrieve a pointer value to use as the first argument when calling
            the function returned by GetDirectFunction.
            (Scintilla feature 2185)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetOvertype(System.Boolean)">
            <summary>Set to overtype (true) or insert mode. (Scintilla feature 2186)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetOvertype">
            <summary>Returns true if overtype mode is active otherwise false is returned. (Scintilla feature 2187)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretWidth(System.Int32)">
            <summary>Set the width of the insert mode caret. (Scintilla feature 2188)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretWidth">
            <summary>Returns the width of the insert mode caret. (Scintilla feature 2189)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetTargetStart(System.Int32)">
            <summary>
            Sets the position that starts the target which is used for updating the
            document without affecting the scroll position.
            (Scintilla feature 2190)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTargetStart">
            <summary>Get the position that starts the target. (Scintilla feature 2191)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetTargetEnd(System.Int32)">
            <summary>
            Sets the position that ends the target which is used for updating the
            document without affecting the scroll position.
            (Scintilla feature 2192)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTargetEnd">
            <summary>Get the position that ends the target. (Scintilla feature 2193)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetTargetRange(System.Int32,System.Int32)">
            <summary>Sets both the start and end of the target in one call. (Scintilla feature 2686)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTargetText">
            <summary>Retrieve the text in the target. (Scintilla feature 2687)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.TargetFromSelection">
            <summary>Make the target range start and end be the same as the selection range start and end. (Scintilla feature 2287)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.TargetWholeDocument">
            <summary>Sets the target to the whole document. (Scintilla feature 2690)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ReplaceTarget(System.Int32,System.String)">
            <summary>
            Replace the target text with the argument text.
            Text is counted so it can contain NULs.
            Returns the length of the replacement text.
            (Scintilla feature 2194)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ReplaceTargetRE(System.Int32,System.String)">
            <summary>
            Replace the target text with the argument text after \d processing.
            Text is counted so it can contain NULs.
            Looks for \d where d is between 1 and 9 and replaces these with the strings
            matched in the last search operation which were surrounded by \( and \).
            Returns the length of the replacement text including any change
            caused by processing the \d patterns.
            (Scintilla feature 2195)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SearchInTarget(System.Int32,System.String)">
            <summary>
            Search for a counted string in the target and set the target to the found
            range. Text is counted so it can contain NULs.
            Returns start of found range or -1 for failure in which case target is not moved.
            (Scintilla feature 2197)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSearchFlags(Npp.DotNet.Plugin.FindOption)">
            <summary>Set the search flags used by SearchInTarget. (Scintilla feature 2198)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSearchFlags">
            <summary>Get the search flags used by SearchInTarget. (Scintilla feature 2199)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipShow(System.Int32,System.String)">
            <summary>Show a call tip containing a definition near position pos. (Scintilla feature 2200)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipCancel">
            <summary>Remove the call tip from the screen. (Scintilla feature 2201)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipActive">
            <summary>Is there an active call tip? (Scintilla feature 2202)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipPosStart">
            <summary>Retrieve the position where the caret was before displaying the call tip. (Scintilla feature 2203)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipSetPosStart(System.Int32)">
            <summary>Set the start position in order to change when backspacing removes the calltip. (Scintilla feature 2214)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipSetHlt(System.Int32,System.Int32)">
            <summary>Highlight a segment of the definition. (Scintilla feature 2204)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipSetBack(Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour for the call tip. (Scintilla feature 2205)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipSetFore(Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour for the call tip. (Scintilla feature 2206)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipSetForeHlt(Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour for the highlighted part of the call tip. (Scintilla feature 2207)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipUseStyle(System.Int32)">
            <summary>Enable use of STYLE_CALLTIP and set call tip tab size in pixels. (Scintilla feature 2212)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CallTipSetPosition(System.Boolean)">
            <summary>Set position of calltip, above or below text. (Scintilla feature 2213)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VisibleFromDocLine(System.Int32)">
            <summary>Find the display line of a document line taking hidden lines into account. (Scintilla feature 2220)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DocLineFromVisible(System.Int32)">
            <summary>Find the document line of a display line taking hidden lines into account. (Scintilla feature 2221)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WrapCount(System.Int32)">
            <summary>The number of display lines needed to wrap a document line (Scintilla feature 2235)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetFoldLevel(System.Int32,Npp.DotNet.Plugin.FoldLevel)">
            <summary>
            Set the fold level of a line.
            This encodes an integer level along with flags indicating whether the
            line is a header and whether it is effectively white space.
            (Scintilla feature 2222)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetFoldLevel(System.Int32)">
            <summary>Retrieve the fold level of a line. (Scintilla feature 2223)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLastChild(System.Int32,Npp.DotNet.Plugin.FoldLevel)">
            <summary>Find the last child line of a header line. (Scintilla feature 2224)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetFoldParent(System.Int32)">
            <summary>Find the parent line of a child line. (Scintilla feature 2225)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ShowLines(System.Int32,System.Int32)">
            <summary>Make a range of lines visible. (Scintilla feature 2226)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.HideLines(System.Int32,System.Int32)">
            <summary>Make a range of lines invisible. (Scintilla feature 2227)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineVisible(System.Int32)">
            <summary>Is a line visible? (Scintilla feature 2228)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAllLinesVisible">
            <summary>Are all lines visible? (Scintilla feature 2236)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetFoldExpanded(System.Int32,System.Boolean)">
            <summary>Show the children of a header line. (Scintilla feature 2229)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetFoldExpanded(System.Int32)">
            <summary>Is a header line expanded? (Scintilla feature 2230)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ToggleFold(System.Int32)">
            <summary>Switch a header line between expanded and contracted. (Scintilla feature 2231)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ToggleFoldShowText(System.Int32,System.String)">
            <summary>Switch a header line between expanded and contracted and show some text after the line. (Scintilla feature 2700)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FoldDisplayTextSetStyle(Npp.DotNet.Plugin.FoldDisplayTextStyle)">
            <summary>Set the style of fold display text. (Scintilla feature 2701)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FoldDisplayTextGetStyle">
            <summary>Get the style of fold display text. (Scintilla feature 2707)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetDefaultFoldDisplayText(System.String)">
            <summary>Set the default fold display text. (Scintilla feature 2722)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetDefaultFoldDisplayText">
            <summary>Get the default fold display text. (Scintilla feature 2723)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FoldLine(System.Int32,Npp.DotNet.Plugin.FoldAction)">
            <summary>Expand or contract a fold header. (Scintilla feature 2237)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FoldChildren(System.Int32,Npp.DotNet.Plugin.FoldAction)">
            <summary>Expand or contract a fold header and its children. (Scintilla feature 2238)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ExpandChildren(System.Int32,Npp.DotNet.Plugin.FoldLevel)">
            <summary>Expand a fold header and all children. Use the level argument instead of the line's current level. (Scintilla feature 2239)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FoldAll(Npp.DotNet.Plugin.FoldAction)">
            <summary>Expand or contract all fold headers. (Scintilla feature 2662)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.EnsureVisible(System.Int32)">
            <summary>Ensure a particular line is visible by expanding any header line hiding it. (Scintilla feature 2232)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAutomaticFold(Npp.DotNet.Plugin.AutomaticFold)">
            <summary>Set automatic folding behaviours. (Scintilla feature 2663)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAutomaticFold">
            <summary>Get automatic folding behaviours. (Scintilla feature 2664)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetFoldFlags(Npp.DotNet.Plugin.FoldFlag)">
            <summary>Set some style options for folding. (Scintilla feature 2233)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.EnsureVisibleEnforcePolicy(System.Int32)">
            <summary>
            Ensure a particular line is visible by expanding any header line hiding it.
            Use the currently set visibility policy to determine which range to display.
            (Scintilla feature 2234)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetTabIndents(System.Boolean)">
            <summary>Sets whether a tab pressed when caret is within indentation indents. (Scintilla feature 2260)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTabIndents">
            <summary>Does a tab pressed when caret is within indentation indent? (Scintilla feature 2261)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetBackSpaceUnIndents(System.Boolean)">
            <summary>Sets whether a backspace pressed when caret is within indentation unindents. (Scintilla feature 2262)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetBackSpaceUnIndents">
            <summary>Does a backspace pressed when caret is within indentation unindent? (Scintilla feature 2263)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMouseDwellTime(System.Int32)">
            <summary>Sets the time the mouse must sit still to generate a mouse dwell event. (Scintilla feature 2264)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMouseDwellTime">
            <summary>Retrieve the time the mouse must sit still to generate a mouse dwell event. (Scintilla feature 2265)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordStartPosition(System.Int32,System.Boolean)">
            <summary>Get position of start of word. (Scintilla feature 2266)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordEndPosition(System.Int32,System.Boolean)">
            <summary>Get position of end of word. (Scintilla feature 2267)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IsRangeWord(System.Int32,System.Int32)">
            <summary>Is the range start..end considered a word? (Scintilla feature 2691)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetIdleStyling(Npp.DotNet.Plugin.IdleStyling)">
            <summary>Sets limits to idle styling. (Scintilla feature 2692)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetIdleStyling">
            <summary>Retrieve the limits to idle styling. (Scintilla feature 2693)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWrapMode(Npp.DotNet.Plugin.Wrap)">
            <summary>Sets whether text is word wrapped. (Scintilla feature 2268)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetWrapMode">
            <summary>Retrieve whether text is word wrapped. (Scintilla feature 2269)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWrapVisualFlags(Npp.DotNet.Plugin.WrapVisualFlag)">
            <summary>Set the display mode of visual flags for wrapped lines. (Scintilla feature 2460)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetWrapVisualFlags">
            <summary>Retrive the display mode of visual flags for wrapped lines. (Scintilla feature 2461)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWrapVisualFlagsLocation(Npp.DotNet.Plugin.WrapVisualLocation)">
            <summary>Set the location of visual flags for wrapped lines. (Scintilla feature 2462)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetWrapVisualFlagsLocation">
            <summary>Retrive the location of visual flags for wrapped lines. (Scintilla feature 2463)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWrapStartIndent(System.Int32)">
            <summary>Set the start indent for wrapped lines. (Scintilla feature 2464)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetWrapStartIndent">
            <summary>Retrive the start indent for wrapped lines. (Scintilla feature 2465)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWrapIndentMode(Npp.DotNet.Plugin.WrapIndentMode)">
            <summary>Sets how wrapped sublines are placed. Default is fixed. (Scintilla feature 2472)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetWrapIndentMode">
            <summary>Retrieve how wrapped sublines are placed. Default is fixed. (Scintilla feature 2473)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetLayoutCache(Npp.DotNet.Plugin.LineCache)">
            <summary>Sets the degree of caching of layout information. (Scintilla feature 2272)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLayoutCache">
            <summary>Retrieve the degree of caching of layout information. (Scintilla feature 2273)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetScrollWidth(System.Int32)">
            <summary>Sets the document width assumed for scrolling. (Scintilla feature 2274)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetScrollWidth">
            <summary>Retrieve the document width assumed for scrolling. (Scintilla feature 2275)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetScrollWidthTracking(System.Boolean)">
            <summary>Sets whether the maximum width line displayed is used to set scroll width. (Scintilla feature 2516)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetScrollWidthTracking">
            <summary>Retrieve whether the scroll width tracks wide lines. (Scintilla feature 2517)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.TextWidth(System.Int32,System.String)">
            <summary>
            Measure the pixel width of some text in a particular style.
            NUL terminated text argument.
            Does not handle tab or control characters.
            (Scintilla feature 2276)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetEndAtLastLine(System.Boolean)">
            <summary>
            Sets the scroll range so that maximum scroll position has
            the last line at the bottom of the view (default).
            Setting this to false allows scrolling one page below the last line.
            (Scintilla feature 2277)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetEndAtLastLine">
            <summary>
            Retrieve whether the maximum scroll position has the last
            line at the bottom of the view.
            (Scintilla feature 2278)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.TextHeight(System.Int32)">
            <summary>Retrieve the height of a particular line of text in pixels. (Scintilla feature 2279)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetVScrollBar(System.Boolean)">
            <summary>Show or hide the vertical scroll bar. (Scintilla feature 2280)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetVScrollBar">
            <summary>Is the vertical scroll bar visible? (Scintilla feature 2281)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AppendText(System.Int32,System.String)">
            <summary>Append a string to the end of the document without changing the selection. (Scintilla feature 2282)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPhasesDraw">
            <summary>How many phases is drawing done in? (Scintilla feature 2673)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetPhasesDraw(Npp.DotNet.Plugin.PhasesDraw)">
            <summary>
            In one phase draw, text is drawn in a series of rectangular blocks with no overlap.
            In two phase draw, text is drawn in a series of lines allowing runs to overlap horizontally.
            In multiple phase draw, each element is drawn over the whole drawing area, allowing text
            to overlap from one line to the next.
            (Scintilla feature 2674)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetFontQuality(Npp.DotNet.Plugin.FontQuality)">
            <summary>Choose the quality level for text from the FontQuality enumeration. (Scintilla feature 2611)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetFontQuality">
            <summary>Retrieve the quality level for text. (Scintilla feature 2612)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetFirstVisibleLine(System.Int32)">
            <summary>Scroll so that a display line is at the top of the display. (Scintilla feature 2613)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMultiPaste(Npp.DotNet.Plugin.MultiPaste)">
            <summary>Change the effect of pasting when there are multiple selections. (Scintilla feature 2614)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMultiPaste">
            <summary>Retrieve the effect of pasting when there are multiple selections. (Scintilla feature 2615)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTag(System.Int32)">
            <summary>
            Retrieve the value of a tag from a regular expression search.
            Result is NUL-terminated.
            (Scintilla feature 2616)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LinesJoin">
            <summary>Join the lines in the target. (Scintilla feature 2288)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LinesSplit(System.Int32)">
            <summary>
            Split the lines in the target into lines that are less wide than pixelWidth
            where possible.
            (Scintilla feature 2289)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetFoldMarginColour(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set one of the colours used as a chequerboard pattern in the fold margin (Scintilla feature 2290)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetFoldMarginHiColour(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set the other colour used as a chequerboard pattern in the fold margin (Scintilla feature 2291)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAccessibility(Npp.DotNet.Plugin.Accessibility)">
            <summary>Enable or disable accessibility. (Scintilla feature 2702)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAccessibility">
            <summary>Report accessibility status. (Scintilla feature 2703)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineDown">
            <summary>Move caret down one line. (Scintilla feature 2300)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineDownExtend">
            <summary>Move caret down one line extending selection to new caret position. (Scintilla feature 2301)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineUp">
            <summary>Move caret up one line. (Scintilla feature 2302)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineUpExtend">
            <summary>Move caret up one line extending selection to new caret position. (Scintilla feature 2303)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CharLeft">
            <summary>Move caret left one character. (Scintilla feature 2304)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CharLeftExtend">
            <summary>Move caret left one character extending selection to new caret position. (Scintilla feature 2305)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CharRight">
            <summary>Move caret right one character. (Scintilla feature 2306)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CharRightExtend">
            <summary>Move caret right one character extending selection to new caret position. (Scintilla feature 2307)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordLeft">
            <summary>Move caret left one word. (Scintilla feature 2308)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordLeftExtend">
            <summary>Move caret left one word extending selection to new caret position. (Scintilla feature 2309)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordRight">
            <summary>Move caret right one word. (Scintilla feature 2310)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordRightExtend">
            <summary>Move caret right one word extending selection to new caret position. (Scintilla feature 2311)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Home">
            <summary>Move caret to first position on line. (Scintilla feature 2312)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.HomeExtend">
            <summary>Move caret to first position on line extending selection to new caret position. (Scintilla feature 2313)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineEnd">
            <summary>Move caret to last position on line. (Scintilla feature 2314)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineEndExtend">
            <summary>Move caret to last position on line extending selection to new caret position. (Scintilla feature 2315)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DocumentStart">
            <summary>Move caret to first position in document. (Scintilla feature 2316)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DocumentStartExtend">
            <summary>Move caret to first position in document extending selection to new caret position. (Scintilla feature 2317)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DocumentEnd">
            <summary>Move caret to last position in document. (Scintilla feature 2318)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DocumentEndExtend">
            <summary>Move caret to last position in document extending selection to new caret position. (Scintilla feature 2319)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PageUp">
            <summary>Move caret one page up. (Scintilla feature 2320)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PageUpExtend">
            <summary>Move caret one page up extending selection to new caret position. (Scintilla feature 2321)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PageDown">
            <summary>Move caret one page down. (Scintilla feature 2322)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PageDownExtend">
            <summary>Move caret one page down extending selection to new caret position. (Scintilla feature 2323)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.EditToggleOvertype">
            <summary>Switch from insert to overtype mode or the reverse. (Scintilla feature 2324)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Cancel">
            <summary>Cancel any modes such as call tip or auto-completion list display. (Scintilla feature 2325)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DeleteBack">
            <summary>Delete the selection or if no selection, the character before the caret. (Scintilla feature 2326)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Tab">
            <summary>
            If selection is empty or all on one line replace the selection with a tab character.
            If more than one line selected, indent the lines.
            (Scintilla feature 2327)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.BackTab">
            <summary>Dedent the selected lines. (Scintilla feature 2328)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.NewLine">
            <summary>Insert a new line, may use a CRLF, CR or LF depending on EOL mode. (Scintilla feature 2329)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FormFeed">
            <summary>Insert a Form Feed character. (Scintilla feature 2330)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VCHome">
            <summary>
            Move caret to before first visible character on line.
            If already there move to first character on line.
            (Scintilla feature 2331)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VCHomeExtend">
            <summary>Like VCHome but extending selection to new caret position. (Scintilla feature 2332)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ZoomIn">
            <summary>Magnify the displayed text by increasing the sizes by 1 point. (Scintilla feature 2333)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ZoomOut">
            <summary>Make the displayed text smaller by decreasing the sizes by 1 point. (Scintilla feature 2334)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DelWordLeft">
            <summary>Delete the word to the left of the caret. (Scintilla feature 2335)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DelWordRight">
            <summary>Delete the word to the right of the caret. (Scintilla feature 2336)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DelWordRightEnd">
            <summary>Delete the word to the right of the caret, but not the trailing non-word characters. (Scintilla feature 2518)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineCut">
            <summary>Cut the line containing the caret. (Scintilla feature 2337)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineDelete">
            <summary>Delete the line containing the caret. (Scintilla feature 2338)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineTranspose">
            <summary>Switch the current line with the previous. (Scintilla feature 2339)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineReverse">
            <summary>Reverse order of selected lines. (Scintilla feature 2354)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineDuplicate">
            <summary>Duplicate the current line. (Scintilla feature 2404)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LowerCase">
            <summary>Transform the selection to lower case. (Scintilla feature 2340)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.UpperCase">
            <summary>Transform the selection to upper case. (Scintilla feature 2341)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineScrollDown">
            <summary>Scroll the document down, keeping the caret visible. (Scintilla feature 2342)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineScrollUp">
            <summary>Scroll the document up, keeping the caret visible. (Scintilla feature 2343)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DeleteBackNotLine">
            <summary>
            Delete the selection or if no selection, the character before the caret.
            Will not delete the character before at the start of a line.
            (Scintilla feature 2344)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.HomeDisplay">
            <summary>Move caret to first position on display line. (Scintilla feature 2345)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.HomeDisplayExtend">
            <summary>
            Move caret to first position on display line extending selection to
            new caret position.
            (Scintilla feature 2346)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineEndDisplay">
            <summary>Move caret to last position on display line. (Scintilla feature 2347)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineEndDisplayExtend">
            <summary>
            Move caret to last position on display line extending selection to new
            caret position.
            (Scintilla feature 2348)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.HomeWrap">
            <summary>
            Like Home but when word-wrap is enabled goes first to start of display line
            HomeDisplay, then to start of document line Home.
            (Scintilla feature 2349)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.HomeWrapExtend">
            <summary>
            Like HomeExtend but when word-wrap is enabled extends first to start of display line
            HomeDisplayExtend, then to start of document line HomeExtend.
            (Scintilla feature 2450)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineEndWrap">
            <summary>
            Like LineEnd but when word-wrap is enabled goes first to end of display line
            LineEndDisplay, then to start of document line LineEnd.
            (Scintilla feature 2451)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineEndWrapExtend">
            <summary>
            Like LineEndExtend but when word-wrap is enabled extends first to end of display line
            LineEndDisplayExtend, then to start of document line LineEndExtend.
            (Scintilla feature 2452)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VCHomeWrap">
            <summary>
            Like VCHome but when word-wrap is enabled goes first to start of display line
            VCHomeDisplay, then behaves like VCHome.
            (Scintilla feature 2453)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VCHomeWrapExtend">
            <summary>
            Like VCHomeExtend but when word-wrap is enabled extends first to start of display line
            VCHomeDisplayExtend, then behaves like VCHomeExtend.
            (Scintilla feature 2454)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineCopy">
            <summary>Copy the line containing the caret. (Scintilla feature 2455)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MoveCaretInsideView">
            <summary>Move the caret inside current view if it's not there already. (Scintilla feature 2401)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineLength(System.Int32)">
            <summary>How many characters are on a line, including end of line characters? (Scintilla feature 2350)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.BraceHighlight(System.Int32,System.Int32)">
            <summary>Highlight the characters at two positions. (Scintilla feature 2351)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.BraceHighlightIndicator(System.Boolean,System.Int32)">
            <summary>Use specified indicator to highlight matching braces instead of changing their style. (Scintilla feature 2498)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.BraceBadLight(System.Int32)">
            <summary>Highlight the character at a position indicating there is no matching brace. (Scintilla feature 2352)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.BraceBadLightIndicator(System.Boolean,System.Int32)">
            <summary>Use specified indicator to highlight non matching brace instead of changing its style. (Scintilla feature 2499)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.BraceMatch(System.Int32,System.Int32)">
            <summary>
            Find the position of a matching brace or INVALID_POSITION if no match.
            The maxReStyle must be 0 for now. It may be defined in a future release.
            (Scintilla feature 2353)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetViewEOL">
            <summary>Are the end of line characters visible? (Scintilla feature 2355)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetViewEOL(System.Boolean)">
            <summary>Make the end of line characters visible or invisible. (Scintilla feature 2356)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetDocPointer">
            <summary>Retrieve a pointer to the document object. (Scintilla feature 2357)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetDocPointer(System.IntPtr)">
            <summary>Change the document object used. (Scintilla feature 2358)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetModEventMask(Npp.DotNet.Plugin.ModificationFlags)">
            <summary>Set which document modification events are sent to the container. (Scintilla feature 2359)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetEdgeColumn">
            <summary>Retrieve the column number which text should be kept within. (Scintilla feature 2360)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetEdgeColumn(System.Int32)">
            <summary>
            Set the column number of the edge.
            If text goes past the edge then it is highlighted.
            (Scintilla feature 2361)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetEdgeMode">
            <summary>Retrieve the edge highlight mode. (Scintilla feature 2362)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetEdgeMode(Npp.DotNet.Plugin.EdgeVisualStyle)">
            <summary>
            The edge may be displayed by a line (EDGE_LINE/EDGE_MULTILINE) or by highlighting text that
            goes beyond it (EDGE_BACKGROUND) or not displayed at all (EDGE_NONE).
            (Scintilla feature 2363)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetEdgeColour">
            <summary>Retrieve the colour used in edge indication. (Scintilla feature 2364)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetEdgeColour(Npp.DotNet.Plugin.Colour)">
            <summary>Change the colour used in edge indication. (Scintilla feature 2365)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MultiEdgeAddLine(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Add a new vertical edge to the view. (Scintilla feature 2694)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MultiEdgeClearAll">
            <summary>Clear all vertical edges. (Scintilla feature 2695)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SearchAnchor">
            <summary>Sets the current caret position to be the search anchor. (Scintilla feature 2366)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SearchNext(Npp.DotNet.Plugin.FindOption,System.String)">
            <summary>
            Find some text starting at the search anchor.
            Does not ensure the selection is visible.
            (Scintilla feature 2367)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SearchPrev(Npp.DotNet.Plugin.FindOption,System.String)">
            <summary>
            Find some text starting at the search anchor and moving backwards.
            Does not ensure the selection is visible.
            (Scintilla feature 2368)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LinesOnScreen">
            <summary>Retrieves the number of lines completely visible. (Scintilla feature 2370)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.UsePopUp(Npp.DotNet.Plugin.PopUp)">
            <summary>
            Set whether a pop up menu is displayed automatically when the user presses
            the wrong mouse button on certain areas.
            (Scintilla feature 2371)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SelectionIsRectangle">
            <summary>Is the selection rectangular? The alternative is the more common stream selection. (Scintilla feature 2372)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetZoom(System.Int32)">
            <summary>
            Set the zoom level. This number of points is added to the size of all fonts.
            It may be positive to magnify or negative to reduce.
            (Scintilla feature 2373)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetZoom">
            <summary>Retrieve the zoom level. (Scintilla feature 2374)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CreateDocument(System.Int32,Npp.DotNet.Plugin.DocumentOption)">
            <summary>
            Create a new document object.
            Starts with reference count of 1 and not selected into editor.
            (Scintilla feature 2375)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AddRefDocument(System.IntPtr)">
            <summary>Extend life of document. (Scintilla feature 2376)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ReleaseDocument(System.IntPtr)">
            <summary>Release a reference to the document, deleting document if it fades to black. (Scintilla feature 2377)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetDocumentOptions">
            <summary>Get which document options are set. (Scintilla feature 2379)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetModEventMask">
            <summary>Get which document modification events are sent to the container. (Scintilla feature 2378)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCommandEvents(System.Boolean)">
            <summary>Set whether command events are sent to the container. (Scintilla feature 2717)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCommandEvents">
            <summary>Get whether command events are sent to the container. (Scintilla feature 2718)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetFocus(System.Boolean)">
            <summary>Change internal focus flag. (Scintilla feature 2380)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetFocus">
            <summary>Get internal focus flag. (Scintilla feature 2381)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetStatus(Npp.DotNet.Plugin.Status)">
            <summary>Change error status - 0 = OK. (Scintilla feature 2382)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetStatus">
            <summary>Get error status. (Scintilla feature 2383)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMouseDownCaptures(System.Boolean)">
            <summary>Set whether the mouse is captured when its button is pressed. (Scintilla feature 2384)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMouseDownCaptures">
            <summary>Get whether mouse gets captured. (Scintilla feature 2385)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMouseWheelCaptures(System.Boolean)">
            <summary>Set whether the mouse wheel can be active outside the window. (Scintilla feature 2696)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMouseWheelCaptures">
            <summary>Get whether mouse wheel can be active outside the window. (Scintilla feature 2697)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCursor(Npp.DotNet.Plugin.CursorShape)">
            <summary>Sets the cursor to one of the SC_CURSOR* values. (Scintilla feature 2386)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCursor">
            <summary>Get cursor type. (Scintilla feature 2387)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetControlCharSymbol(System.Int32)">
            <summary>
            Change the way control characters are displayed:
            If symbol is &lt; 32, keep the drawn way, else, use the given character.
            (Scintilla feature 2388)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetControlCharSymbol">
            <summary>Get the way control characters are displayed. (Scintilla feature 2389)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordPartLeft">
            <summary>Move to the previous change in capitalisation. (Scintilla feature 2390)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordPartLeftExtend">
            <summary>
            Move to the previous change in capitalisation extending selection
            to new caret position.
            (Scintilla feature 2391)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordPartRight">
            <summary>Move to the change next in capitalisation. (Scintilla feature 2392)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordPartRightExtend">
            <summary>
            Move to the next change in capitalisation extending selection
            to new caret position.
            (Scintilla feature 2393)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetVisiblePolicy(Npp.DotNet.Plugin.VisiblePolicy,System.Int32)">
            <summary>
            Set the way the display area is determined when a particular line
            is to be moved to by Find, FindNext, GotoLine, etc.
            (Scintilla feature 2394)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DelLineLeft">
            <summary>Delete back from the current position to the start of the line. (Scintilla feature 2395)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DelLineRight">
            <summary>Delete forwards from the current position to the end of the line. (Scintilla feature 2396)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetXOffset(System.Int32)">
            <summary>Set the xOffset (ie, horizontal scroll position). (Scintilla feature 2397)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetXOffset">
            <summary>Get the xOffset (ie, horizontal scroll position). (Scintilla feature 2398)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ChooseCaretX">
            <summary>Set the last x chosen value to be the caret x position. (Scintilla feature 2399)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GrabFocus">
            <summary>Set the focus to this Scintilla widget. (Scintilla feature 2400)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetXCaretPolicy(Npp.DotNet.Plugin.CaretPolicy,System.Int32)">
            <summary>
            Set the way the caret is kept visible when going sideways.
            The exclusion zone is given in pixels.
            (Scintilla feature 2402)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetYCaretPolicy(Npp.DotNet.Plugin.CaretPolicy,System.Int32)">
            <summary>
            Set the way the line the caret is on is kept visible.
            The exclusion zone is given in lines.
            (Scintilla feature 2403)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetPrintWrapMode(Npp.DotNet.Plugin.Wrap)">
            <summary>Set printing to line wrapped (SC_WRAP_WORD) or not line wrapped (SC_WRAP_NONE). (Scintilla feature 2406)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPrintWrapMode">
            <summary>Is printing line wrapped? (Scintilla feature 2407)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetHotspotActiveFore(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set a fore colour for active hotspots. (Scintilla feature 2410)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetHotspotActiveFore">
            <summary>Get the fore colour for active hotspots. (Scintilla feature 2494)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetHotspotActiveBack(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set a back colour for active hotspots. (Scintilla feature 2411)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetHotspotActiveBack">
            <summary>Get the back colour for active hotspots. (Scintilla feature 2495)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetHotspotActiveUnderline(System.Boolean)">
            <summary>Enable / Disable underlining active hotspots. (Scintilla feature 2412)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetHotspotActiveUnderline">
            <summary>Get whether underlining for active hotspots. (Scintilla feature 2496)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetHotspotSingleLine(System.Boolean)">
            <summary>Limit hotspots to single line so hotspots on two lines don't merge. (Scintilla feature 2421)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetHotspotSingleLine">
            <summary>Get the HotspotSingleLine property (Scintilla feature 2497)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ParaDown">
            <summary>Move caret down one paragraph (delimited by empty lines). (Scintilla feature 2413)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ParaDownExtend">
            <summary>Extend selection down one paragraph (delimited by empty lines). (Scintilla feature 2414)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ParaUp">
            <summary>Move caret up one paragraph (delimited by empty lines). (Scintilla feature 2415)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ParaUpExtend">
            <summary>Extend selection up one paragraph (delimited by empty lines). (Scintilla feature 2416)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PositionBefore(System.Int32)">
            <summary>
            Given a valid document position, return the previous position taking code
            page into account. Returns 0 if passed 0.
            (Scintilla feature 2417)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PositionAfter(System.Int32)">
            <summary>
            Given a valid document position, return the next position taking code
            page into account. Maximum value returned is the last position in the document.
            (Scintilla feature 2418)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PositionRelative(System.Int32,System.Int32)">
            <summary>
            Given a valid document position, return a position that differs in a number
            of characters. Returned value is always between 0 and last position in document.
            (Scintilla feature 2670)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PositionRelativeCodeUnits(System.Int32,System.Int32)">
            <summary>
            Given a valid document position, return a position that differs in a number
            of UTF-16 code units. Returned value is always between 0 and last position in document.
            The result may point half way (2 bytes) inside a non-BMP character.
            (Scintilla feature 2716)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CopyRange(System.Int32,System.Int32)">
            <summary>Copy a range of text to the clipboard. Positions are clipped into the document. (Scintilla feature 2419)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CopyText(System.Int32,System.String)">
            <summary>Copy argument text to the clipboard. (Scintilla feature 2420)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionMode(Npp.DotNet.Plugin.SelectionMode)">
            <summary>
            Set the selection mode to stream (SC_SEL_STREAM) or rectangular (SC_SEL_RECTANGLE/SC_SEL_THIN) or
            by lines (SC_SEL_LINES).
            (Scintilla feature 2422)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionMode">
            <summary>Get the mode of the current selection. (Scintilla feature 2423)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMoveExtendsSelection">
            <summary>Get whether or not regular caret moves will extend or reduce the selection. (Scintilla feature 2706)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineSelStartPosition(System.Int32)">
            <summary>Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line). (Scintilla feature 2424)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineSelEndPosition(System.Int32)">
            <summary>Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line). (Scintilla feature 2425)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineDownRectExtend">
            <summary>Move caret down one line, extending rectangular selection to new caret position. (Scintilla feature 2426)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineUpRectExtend">
            <summary>Move caret up one line, extending rectangular selection to new caret position. (Scintilla feature 2427)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CharLeftRectExtend">
            <summary>Move caret left one character, extending rectangular selection to new caret position. (Scintilla feature 2428)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CharRightRectExtend">
            <summary>Move caret right one character, extending rectangular selection to new caret position. (Scintilla feature 2429)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.HomeRectExtend">
            <summary>Move caret to first position on line, extending rectangular selection to new caret position. (Scintilla feature 2430)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VCHomeRectExtend">
            <summary>
            Move caret to before first visible character on line.
            If already there move to first character on line.
            In either case, extend rectangular selection to new caret position.
            (Scintilla feature 2431)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineEndRectExtend">
            <summary>Move caret to last position on line, extending rectangular selection to new caret position. (Scintilla feature 2432)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PageUpRectExtend">
            <summary>Move caret one page up, extending rectangular selection to new caret position. (Scintilla feature 2433)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PageDownRectExtend">
            <summary>Move caret one page down, extending rectangular selection to new caret position. (Scintilla feature 2434)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StutteredPageUp">
            <summary>Move caret to top of page, or one page up if already at top of page. (Scintilla feature 2435)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StutteredPageUpExtend">
            <summary>Move caret to top of page, or one page up if already at top of page, extending selection to new caret position. (Scintilla feature 2436)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StutteredPageDown">
            <summary>Move caret to bottom of page, or one page down if already at bottom of page. (Scintilla feature 2437)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StutteredPageDownExtend">
            <summary>Move caret to bottom of page, or one page down if already at bottom of page, extending selection to new caret position. (Scintilla feature 2438)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordLeftEnd">
            <summary>Move caret left one word, position cursor at end of word. (Scintilla feature 2439)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordLeftEndExtend">
            <summary>Move caret left one word, position cursor at end of word, extending selection to new caret position. (Scintilla feature 2440)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordRightEnd">
            <summary>Move caret right one word, position cursor at end of word. (Scintilla feature 2441)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.WordRightEndExtend">
            <summary>Move caret right one word, position cursor at end of word, extending selection to new caret position. (Scintilla feature 2442)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetWhitespaceChars(System.String)">
            <summary>
            Set the set of characters making up whitespace for when moving or selecting by word.
            Should be called after SetWordChars.
            (Scintilla feature 2443)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetWhitespaceChars">
            <summary>Get the set of characters making up whitespace for when moving or selecting by word. (Scintilla feature 2647)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetPunctuationChars(System.String)">
            <summary>
            Set the set of characters making up punctuation characters
            Should be called after SetWordChars.
            (Scintilla feature 2648)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPunctuationChars">
            <summary>Get the set of characters making up punctuation characters (Scintilla feature 2649)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCharsDefault">
            <summary>Reset the set of characters for whitespace and word characters to the defaults. (Scintilla feature 2444)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetCurrent">
            <summary>Get currently selected item position in the auto-completion list (Scintilla feature 2445)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetCurrentText">
            <summary>
            Get currently selected item text in the auto-completion list
            Returns the length of the item text
            Result is NUL-terminated.
            (Scintilla feature 2610)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetCaseInsensitiveBehaviour(Npp.DotNet.Plugin.CaseInsensitiveBehaviour)">
            <summary>Set auto-completion case insensitive behaviour to either prefer case-sensitive matches or have no preference. (Scintilla feature 2634)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetCaseInsensitiveBehaviour">
            <summary>Get auto-completion case insensitive behaviour. (Scintilla feature 2635)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetMulti(Npp.DotNet.Plugin.MultiAutoComplete)">
            <summary>Change the effect of autocompleting when there are multiple selections. (Scintilla feature 2636)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetMulti">
            <summary>Retrieve the effect of autocompleting when there are multiple selections. (Scintilla feature 2637)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCSetOrder(Npp.DotNet.Plugin.Ordering)">
            <summary>Set the way autocompletion lists are ordered. (Scintilla feature 2660)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AutoCGetOrder">
            <summary>Get the way autocompletion lists are ordered. (Scintilla feature 2661)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Allocate(System.Int32)">
            <summary>Enlarge the document to a particular size of text bytes. (Scintilla feature 2446)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.TargetAsUTF8">
            <summary>
            Returns the target converted to UTF8.
            Return the length in bytes.
            (Scintilla feature 2447)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetLengthForEncode(System.Int32)">
            <summary>
            Set the length of the utf8 argument for calling EncodedFromUTF8.
            Set to -1 and the string will be measured to the first nul.
            (Scintilla feature 2448)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.EncodedFromUTF8(System.String)">
            <summary>
            Translates a UTF8 string into the document encoding.
            Return the length of the result in bytes.
            On error return 0.
            (Scintilla feature 2449)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FindColumn(System.Int32,System.Int32)">
            <summary>
            Find the position of a column on a line taking into account tabs and
            multi-byte characters. If beyond end of line, return line end position.
            (Scintilla feature 2456)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretSticky">
            <summary>Can the caret preferred x position only be changed by explicit movement commands? (Scintilla feature 2457)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretSticky(Npp.DotNet.Plugin.CaretSticky)">
            <summary>Stop the caret preferred x position changing when the user types. (Scintilla feature 2458)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ToggleCaretSticky">
            <summary>Switch between sticky and non-sticky: meant to be bound to a key. (Scintilla feature 2459)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetPasteConvertEndings(System.Boolean)">
            <summary>Enable/Disable convert-on-paste for line endings (Scintilla feature 2467)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPasteConvertEndings">
            <summary>Get convert-on-paste setting (Scintilla feature 2468)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SelectionDuplicate">
            <summary>Duplicate the selection. If selection empty duplicate the line containing the caret. (Scintilla feature 2469)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretLineBackAlpha(Npp.DotNet.Plugin.Alpha)">
            <summary>Set background alpha of the caret line. (Scintilla feature 2470)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretLineBackAlpha">
            <summary>Get the background alpha of the caret line. (Scintilla feature 2471)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretStyle(Npp.DotNet.Plugin.CaretStyle)">
            <summary>Set the style of the caret to be drawn. (Scintilla feature 2512)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretStyle">
            <summary>Returns the current style of the caret. (Scintilla feature 2513)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetIndicatorCurrent(System.Int32)">
            <summary>Set the indicator used for IndicatorFillRange and IndicatorClearRange (Scintilla feature 2500)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetIndicatorCurrent">
            <summary>Get the current indicator (Scintilla feature 2501)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetIndicatorValue(System.Int32)">
            <summary>Set the value used for IndicatorFillRange (Scintilla feature 2502)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetIndicatorValue">
            <summary>Get the current indicator value (Scintilla feature 2503)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicatorFillRange(System.Int32,System.Int32)">
            <summary>Turn a indicator on over a range. (Scintilla feature 2504)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicatorClearRange(System.Int32,System.Int32)">
            <summary>Turn a indicator off over a range. (Scintilla feature 2505)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicatorAllOnFor(System.Int32)">
            <summary>Are any indicators present at pos? (Scintilla feature 2506)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicatorValueAt(System.Int32,System.Int32)">
            <summary>What value does a particular indicator have at a position? (Scintilla feature 2507)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicatorStart(System.Int32,System.Int32)">
            <summary>Where does a particular indicator start? (Scintilla feature 2508)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicatorEnd(System.Int32,System.Int32)">
            <summary>Where does a particular indicator end? (Scintilla feature 2509)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetPositionCache(System.Int32)">
            <summary>Set number of entries in position cache (Scintilla feature 2514)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPositionCache">
            <summary>How many entries are allocated to the position cache? (Scintilla feature 2515)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CopyAllowLine">
            <summary>Copy the selection, if selection empty copy the line with the caret (Scintilla feature 2519)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCharacterPointer">
            <summary>
            Compact the document buffer and return a read-only pointer to the
            characters in the document.
            (Scintilla feature 2520)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetRangePointer(System.Int32,System.Int32)">
            <summary>
            Return a read-only pointer to a range of characters in the document.
            May move the gap so that the range is contiguous, but will only move up
            to lengthRange bytes.
            (Scintilla feature 2643)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetGapPosition">
            <summary>
            Return a position which, to avoid performance costs, should not be within
            the range of a call to GetRangePointer.
            (Scintilla feature 2644)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicSetAlpha(System.Int32,Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha fill colour of the given indicator. (Scintilla feature 2523)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicGetAlpha(System.Int32)">
            <summary>Get the alpha fill colour of the given indicator. (Scintilla feature 2524)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicSetOutlineAlpha(System.Int32,Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha outline colour of the given indicator. (Scintilla feature 2558)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndicGetOutlineAlpha(System.Int32)">
            <summary>Get the alpha outline colour of the given indicator. (Scintilla feature 2559)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetExtraAscent(System.Int32)">
            <summary>Set extra ascent for each line (Scintilla feature 2525)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetExtraAscent">
            <summary>Get extra ascent for each line (Scintilla feature 2526)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetExtraDescent(System.Int32)">
            <summary>Set extra descent for each line (Scintilla feature 2527)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetExtraDescent">
            <summary>Get extra descent for each line (Scintilla feature 2528)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerSymbolDefined(System.Int32)">
            <summary>Which symbol was defined for markerNumber with MarkerDefine (Scintilla feature 2529)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginSetText(System.Int32,System.String)">
            <summary>Set the text in the text margin for a line (Scintilla feature 2530)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginGetText(System.Int32)">
            <summary>Get the text in the text margin for a line (Scintilla feature 2531)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginSetStyle(System.Int32,System.Int32)">
            <summary>Set the style number for the text margin for a line (Scintilla feature 2532)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginGetStyle(System.Int32)">
            <summary>Get the style number for the text margin for a line (Scintilla feature 2533)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginSetStyles(System.Int32,System.String)">
            <summary>Set the style in the text margin for a line (Scintilla feature 2534)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginGetStyles(System.Int32)">
            <summary>Get the styles in the text margin for a line (Scintilla feature 2535)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginTextClearAll">
            <summary>Clear the margin text on all lines (Scintilla feature 2536)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginSetStyleOffset(System.Int32)">
            <summary>Get the start of the range of style numbers used for margin text (Scintilla feature 2537)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarginGetStyleOffset">
            <summary>Get the start of the range of style numbers used for margin text (Scintilla feature 2538)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMarginOptions(Npp.DotNet.Plugin.MarginOption)">
            <summary>Set the margin options. (Scintilla feature 2539)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMarginOptions">
            <summary>Get the margin options. (Scintilla feature 2557)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationSetText(System.Int32,System.String)">
            <summary>Set the annotation text for a line (Scintilla feature 2540)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationGetText(System.Int32)">
            <summary>Get the annotation text for a line (Scintilla feature 2541)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationSetStyle(System.Int32,System.Int32)">
            <summary>Set the style number for the annotations for a line (Scintilla feature 2542)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationGetStyle(System.Int32)">
            <summary>Get the style number for the annotations for a line (Scintilla feature 2543)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationSetStyles(System.Int32,System.String)">
            <summary>Set the annotation styles for a line (Scintilla feature 2544)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationGetStyles(System.Int32)">
            <summary>Get the annotation styles for a line (Scintilla feature 2545)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationGetLines(System.Int32)">
            <summary>Get the number of annotation lines for a line (Scintilla feature 2546)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationClearAll">
            <summary>Clear the annotations from all lines (Scintilla feature 2547)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationSetVisible(Npp.DotNet.Plugin.AnnotationVisible)">
            <summary>Set the visibility for the annotations for a view (Scintilla feature 2548)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationGetVisible">
            <summary>Get the visibility for the annotations for a view (Scintilla feature 2549)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationSetStyleOffset(System.Int32)">
            <summary>Get the start of the range of style numbers used for annotations (Scintilla feature 2550)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AnnotationGetStyleOffset">
            <summary>Get the start of the range of style numbers used for annotations (Scintilla feature 2551)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ReleaseAllExtendedStyles">
            <summary>Release all extended (>255) style numbers (Scintilla feature 2552)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AllocateExtendedStyles(System.Int32)">
            <summary>Allocate some extended (>255) style numbers and return the start of the range (Scintilla feature 2553)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AddUndoAction(System.Int32,Npp.DotNet.Plugin.UndoFlags)">
            <summary>Add a container action to the undo stack (Scintilla feature 2560)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CharPositionFromPoint(System.Int32,System.Int32)">
            <summary>Find the position of a character from a point within the window. (Scintilla feature 2561)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CharPositionFromPointClose(System.Int32,System.Int32)">
            <summary>
            Find the position of a character from a point within the window.
            Return INVALID_POSITION if not close to text.
            (Scintilla feature 2562)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMouseSelectionRectangularSwitch(System.Boolean)">
            <summary>Set whether switching to rectangular mode while selecting with the mouse is allowed. (Scintilla feature 2668)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMouseSelectionRectangularSwitch">
            <summary>Whether switching to rectangular mode while selecting with the mouse is allowed. (Scintilla feature 2669)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMultipleSelection(System.Boolean)">
            <summary>Set whether multiple selections can be made (Scintilla feature 2563)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMultipleSelection">
            <summary>Whether multiple selections can be made (Scintilla feature 2564)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAdditionalSelectionTyping(System.Boolean)">
            <summary>Set whether typing can be performed into multiple selections (Scintilla feature 2565)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAdditionalSelectionTyping">
            <summary>Whether typing can be performed into multiple selections (Scintilla feature 2566)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAdditionalCaretsBlink(System.Boolean)">
            <summary>Set whether additional carets will blink (Scintilla feature 2567)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAdditionalCaretsBlink">
            <summary>Whether additional carets will blink (Scintilla feature 2568)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAdditionalCaretsVisible(System.Boolean)">
            <summary>Set whether additional carets are visible (Scintilla feature 2608)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAdditionalCaretsVisible">
            <summary>Whether additional carets are visible (Scintilla feature 2609)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelections">
            <summary>How many selections are there? (Scintilla feature 2570)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionEmpty">
            <summary>Is every selected range empty? (Scintilla feature 2650)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ClearSelections">
            <summary>Clear selections to a single empty stream selection (Scintilla feature 2571)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelection(System.Int32,System.Int32)">
            <summary>Set a simple selection (Scintilla feature 2572)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AddSelection(System.Int32,System.Int32)">
            <summary>Add a selection (Scintilla feature 2573)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DropSelectionN(System.Int32)">
            <summary>Drop one selection (Scintilla feature 2671)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetMainSelection(System.Int32)">
            <summary>Set the main selection (Scintilla feature 2574)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetMainSelection">
            <summary>Which selection is the main selection (Scintilla feature 2575)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionNCaret(System.Int32,System.Int32)">
            <summary>Set the caret position of the nth selection. (Scintilla feature 2576)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionNCaret(System.Int32)">
            <summary>Return the caret position of the nth selection. (Scintilla feature 2577)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionNAnchor(System.Int32,System.Int32)">
            <summary>Set the anchor position of the nth selection. (Scintilla feature 2578)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionNAnchor(System.Int32)">
            <summary>Return the anchor position of the nth selection. (Scintilla feature 2579)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionNCaretVirtualSpace(System.Int32,System.Int32)">
            <summary>Set the virtual space of the caret of the nth selection. (Scintilla feature 2580)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionNCaretVirtualSpace(System.Int32)">
            <summary>Return the virtual space of the caret of the nth selection. (Scintilla feature 2581)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionNAnchorVirtualSpace(System.Int32,System.Int32)">
            <summary>Set the virtual space of the anchor of the nth selection. (Scintilla feature 2582)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionNAnchorVirtualSpace(System.Int32)">
            <summary>Return the virtual space of the anchor of the nth selection. (Scintilla feature 2583)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionNStart(System.Int32,System.Int32)">
            <summary>Sets the position that starts the selection - this becomes the anchor. (Scintilla feature 2584)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionNStart(System.Int32)">
            <summary>Returns the position at the start of the selection. (Scintilla feature 2585)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetSelectionNEnd(System.Int32,System.Int32)">
            <summary>Sets the position that ends the selection - this becomes the currentPosition. (Scintilla feature 2586)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSelectionNEnd(System.Int32)">
            <summary>Returns the position at the end of the selection. (Scintilla feature 2587)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetRectangularSelectionCaret(System.Int32)">
            <summary>Set the caret position of the rectangular selection. (Scintilla feature 2588)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetRectangularSelectionCaret">
            <summary>Return the caret position of the rectangular selection. (Scintilla feature 2589)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetRectangularSelectionAnchor(System.Int32)">
            <summary>Set the anchor position of the rectangular selection. (Scintilla feature 2590)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetRectangularSelectionAnchor">
            <summary>Return the anchor position of the rectangular selection. (Scintilla feature 2591)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetRectangularSelectionCaretVirtualSpace(System.Int32)">
            <summary>Set the virtual space of the caret of the rectangular selection. (Scintilla feature 2592)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetRectangularSelectionCaretVirtualSpace">
            <summary>Return the virtual space of the caret of the rectangular selection. (Scintilla feature 2593)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetRectangularSelectionAnchorVirtualSpace(System.Int32)">
            <summary>Set the virtual space of the anchor of the rectangular selection. (Scintilla feature 2594)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetRectangularSelectionAnchorVirtualSpace">
            <summary>Return the virtual space of the anchor of the rectangular selection. (Scintilla feature 2595)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetVirtualSpaceOptions(Npp.DotNet.Plugin.VirtualSpace)">
            <summary>Set options for virtual space behaviour. (Scintilla feature 2596)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetVirtualSpaceOptions">
            <summary>Return options for virtual space behaviour. (Scintilla feature 2597)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetRectangularSelectionModifier(System.Int32)">
            <summary>
            On GTK, allow selecting the modifier key to use for mouse-based
            rectangular selection. Often the window manager requires Alt+Mouse Drag
            for moving windows.
            Valid values are SCMOD_CTRL(default), SCMOD_ALT, or SCMOD_SUPER.
            (Scintilla feature 2598)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetRectangularSelectionModifier">
            <summary>Get the modifier key used for rectangular selection. (Scintilla feature 2599)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAdditionalSelFore(Npp.DotNet.Plugin.Colour)">
            <summary>
            Set the foreground colour of additional selections.
            Must have previously called SetSelFore with non-zero first argument for this to have an effect.
            (Scintilla feature 2600)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAdditionalSelBack(Npp.DotNet.Plugin.Colour)">
            <summary>
            Set the background colour of additional selections.
            Must have previously called SetSelBack with non-zero first argument for this to have an effect.
            (Scintilla feature 2601)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAdditionalSelAlpha(Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha of the selection. (Scintilla feature 2602)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAdditionalSelAlpha">
            <summary>Get the alpha of the selection. (Scintilla feature 2603)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetAdditionalCaretFore(Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of additional carets. (Scintilla feature 2604)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetAdditionalCaretFore">
            <summary>Get the foreground colour of additional carets. (Scintilla feature 2605)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.RotateSelection">
            <summary>Set the main selection to the next selection. (Scintilla feature 2606)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SwapMainAnchorCaret">
            <summary>Swap that caret and anchor of the main selection. (Scintilla feature 2607)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MultipleSelectAddNext">
            <summary>
            Add the next occurrence of the main selection to the set of selections as main.
            If the current selection is empty then select word around caret.
            (Scintilla feature 2688)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MultipleSelectAddEach">
            <summary>
            Add each occurrence of the main selection in the target to the set of selections.
            If the current selection is empty then select word around caret.
            (Scintilla feature 2689)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ChangeLexerState(System.Int32,System.Int32)">
            <summary>
            Indicate that the internal state of a lexer has changed over a range and therefore
            there may be a need to redraw.
            (Scintilla feature 2617)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ContractedFoldNext(System.Int32)">
            <summary>
            Find the next line at or after lineStart that is a contracted fold header line.
            Return -1 when no more lines.
            (Scintilla feature 2618)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VerticalCentreCaret">
            <summary>Centre current line in window. (Scintilla feature 2619)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MoveSelectedLinesUp">
            <summary>Move the selected lines up one line, shifting the line above after the selection (Scintilla feature 2620)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MoveSelectedLinesDown">
            <summary>Move the selected lines down one line, shifting the line below before the selection (Scintilla feature 2621)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetIdentifier(System.Int32)">
            <summary>Set the identifier reported as idFrom in notification messages. (Scintilla feature 2622)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetIdentifier">
            <summary>Get the identifier. (Scintilla feature 2623)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.RGBAImageSetWidth(System.Int32)">
            <summary>Set the width for future RGBA image data. (Scintilla feature 2624)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.RGBAImageSetHeight(System.Int32)">
            <summary>Set the height for future RGBA image data. (Scintilla feature 2625)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.RGBAImageSetScale(System.Int32)">
            <summary>Set the scale factor in percent for future RGBA image data. (Scintilla feature 2651)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.MarkerDefineRGBAImage(System.Int32,System.String)">
            <summary>
            Define a marker from RGBA data.
            It has the width and height from RGBAImageSetWidth/Height
            (Scintilla feature 2626)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.RegisterRGBAImage(System.Int32,System.String)">
            <summary>
            Register an RGBA image for use in autocompletion lists.
            It has the width and height from RGBAImageSetWidth/Height
            (Scintilla feature 2627)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ScrollToStart">
            <summary>Scroll to start of document. (Scintilla feature 2628)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ScrollToEnd">
            <summary>Scroll to end of document. (Scintilla feature 2629)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetTechnology(Npp.DotNet.Plugin.Technology)">
            <summary>Set the technology used. (Scintilla feature 2630)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTechnology">
            <summary>Get the tech. (Scintilla feature 2631)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.CreateLoader(System.Int32,Npp.DotNet.Plugin.DocumentOption)">
            <summary>Create an ILoader*. (Scintilla feature 2632)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FindIndicatorShow(System.Int32,System.Int32)">
            <summary>On OS X, show a find indicator. (Scintilla feature 2640)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FindIndicatorFlash(System.Int32,System.Int32)">
            <summary>On OS X, flash a find indicator, then fade out. (Scintilla feature 2641)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FindIndicatorHide">
            <summary>On OS X, hide the find indicator. (Scintilla feature 2642)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VCHomeDisplay">
            <summary>
            Move caret to before first visible character on display line.
            If already there move to first character on display line.
            (Scintilla feature 2652)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.VCHomeDisplayExtend">
            <summary>Like VCHomeDisplay but extending selection to new caret position. (Scintilla feature 2653)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetCaretLineVisibleAlways">
            <summary>Is the caret line always visible? (Scintilla feature 2654)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetCaretLineVisibleAlways(System.Boolean)">
            <summary>Sets the caret line to always visible. (Scintilla feature 2655)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetLineEndTypesAllowed(Npp.DotNet.Plugin.LineEndType)">
            <summary>Set the line end types that the application wants to use. May not be used if incompatible with lexer or encoding. (Scintilla feature 2656)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineEndTypesAllowed">
            <summary>Get the line end types currently allowed. (Scintilla feature 2657)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineEndTypesActive">
            <summary>Get the line end types currently recognised. May be a subset of the allowed types due to lexer limitation. (Scintilla feature 2658)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetRepresentation(System.String,System.String)">
            <summary>Set the way a character is drawn. (Scintilla feature 2665)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetRepresentation(System.String)">
            <summary>
            Set the way a character is drawn.
            Result is NUL-terminated.
            (Scintilla feature 2666)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ClearRepresentation(System.String)">
            <summary>Remove a character representation. (Scintilla feature 2667)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StartRecord">
            <summary>Start notifying the container of all key presses and commands. (Scintilla feature 3001)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.StopRecord">
            <summary>Stop notifying the container of all key presses and commands. (Scintilla feature 3002)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetLexer(System.Int32)">
            <summary>Set the lexing language of the document. (Scintilla feature 4001)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLexer">
            <summary>Retrieve the lexing language of the document. (Scintilla feature 4002)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.Colourise(System.Int32,System.Int32)">
            <summary>Colourise a segment of the document using the current lexing language. (Scintilla feature 4003)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetProperty(System.String,System.String)">
            <summary>Set up a value that may be used by a lexer for some optional feature. (Scintilla feature 4004)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetKeyWords(System.Int32,System.String)">
            <summary>Set up the key words used by the lexer. (Scintilla feature 4005)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetLexerLanguage(System.String)">
            <summary>Set the lexing language of the document based on string name. (Scintilla feature 4006)<br></br>
            NOTE! This function does not seem to do anything as of 08/25/2022.<br></br>
            Use INotepadNPPGateWay.SetCurrentLanguage instead.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LoadLexerLibrary(System.String)">
            <summary>Load a lexer library (dll / so). (Scintilla feature 4007)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetProperty(System.String)">
            <summary>
            Retrieve a "property" value previously set with SetProperty.
            Result is NUL-terminated.
            (Scintilla feature 4008)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPropertyExpanded(System.String)">
            <summary>
            Retrieve a "property" value previously set with SetProperty,
            with "$()" variable replacement on returned buffer.
            Result is NUL-terminated.
            (Scintilla feature 4009)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPropertyInt(System.String,System.Int32)">
            <summary>
            Retrieve a "property" value previously set with SetProperty,
            interpreted as an int AFTER any "$()" variable replacement.
            (Scintilla feature 4010)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLexerLanguage">
            <summary>
            Retrieve the name of the lexer.
            Return the length of the text.
            Result is NUL-terminated.
            (Scintilla feature 4012)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PrivateLexerCall(System.Int32,System.IntPtr)">
            <summary>For private communication between an application and a known lexer. (Scintilla feature 4013)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PropertyNames">
            <summary>
            Retrieve a '\n' separated list of properties understood by the current lexer.
            Result is NUL-terminated.
            (Scintilla feature 4014)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.PropertyType(System.String)">
            <summary>Retrieve the type of a property. (Scintilla feature 4015)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DescribeProperty(System.String)">
            <summary>
            Describe a property.
            Result is NUL-terminated.
            (Scintilla feature 4016)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DescribeKeyWordSets">
            <summary>
            Retrieve a '\n' separated list of descriptions of the keyword sets understood by the current lexer.
            Result is NUL-terminated.
            (Scintilla feature 4017)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineEndTypesSupported">
            <summary>
            Bit set of LineEndType enumertion for which line ends beyond the standard
            LF, CR, and CRLF are supported by the lexer.
            (Scintilla feature 4018)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AllocateSubStyles(System.Int32,System.Int32)">
            <summary>Allocate a set of sub styles for a particular base style, returning start of range (Scintilla feature 4020)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSubStylesStart(System.Int32)">
            <summary>The starting style number for the sub styles associated with a base style (Scintilla feature 4021)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSubStylesLength(System.Int32)">
            <summary>The number of sub styles associated with a base style (Scintilla feature 4022)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetStyleFromSubStyle(System.Int32)">
            <summary>For a sub style, return the base style, else return the argument. (Scintilla feature 4027)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetPrimaryStyleFromStyle(System.Int32)">
            <summary>For a secondary style, return the primary style, else return the argument. (Scintilla feature 4028)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.FreeSubStyles">
            <summary>Free allocated sub styles (Scintilla feature 4023)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetIdentifiers(System.Int32,System.String)">
            <summary>Set the identifiers that are shown in a particular style (Scintilla feature 4024)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DistanceToSecondaryStyles">
            <summary>
            Where styles are duplicated by a feature such as active/inactive code
            return the distance between the two types.
            (Scintilla feature 4025)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetSubStyleBases">
            <summary>
            Get the set of base styles that can be extended with sub styles
            Result is NUL-terminated.
            (Scintilla feature 4026)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetNamedStyles">
            <summary>Retrieve the number of named styles for the lexer. (Scintilla feature 4029)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.NameOfStyle(System.Int32)">
            <summary>
            Retrieve the name of a style.
            Result is NUL-terminated.
            (Scintilla feature 4030)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.TagsOfStyle(System.Int32)">
            <summary>
            Retrieve a ' ' separated list of style tags like "literal quoted string".
            Result is NUL-terminated.
            (Scintilla feature 4031)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.DescriptionOfStyle(System.Int32)">
            <summary>
            Retrieve a description of a style.
            Result is NUL-terminated.
            (Scintilla feature 4032)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetBidirectional">
            <summary>Retrieve bidirectional text display state. (Scintilla feature 2708)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetBidirectional(Npp.DotNet.Plugin.Bidirectional)">
            <summary>Set bidirectional text display state. (Scintilla feature 2709)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetLineCharacterIndex">
            <summary>Retrieve line character index state. (Scintilla feature 2710)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.AllocateLineCharacterIndex(Npp.DotNet.Plugin.LineCharacterIndexType)">
            <summary>Request line character index be created or its use count increased. (Scintilla feature 2711)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.ReleaseLineCharacterIndex(Npp.DotNet.Plugin.LineCharacterIndexType)">
            <summary>Decrease use count of line character index and remove if 0. (Scintilla feature 2712)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.LineFromIndexPosition(System.Int32,Npp.DotNet.Plugin.LineCharacterIndexType)">
            <summary>Retrieve the document line containing a position measured in index units. (Scintilla feature 2713)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.IndexPositionFromLine(System.Int32,Npp.DotNet.Plugin.LineCharacterIndexType)">
            <summary>Retrieve the position measured in index units at the start of a document line. (Scintilla feature 2714)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetStyleBits(System.Int32)">
            <summary>
            Divide each styling byte into lexical class bits (default: 5) and indicator
            bits (default: 3). If a lexer requires more than 32 lexical states, then this
            is used to expand the possible states.
            (Scintilla feature 2090)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetStyleBits">
            <summary>Retrieve number of bits in style bytes used to hold the lexical state. (Scintilla feature 2091)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetStyleBitsNeeded">
            <summary>Retrieve the number of bits the current lexer needs for styling. (Scintilla feature 4011)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetKeysUnicode(System.Boolean)">
            <summary>
            Deprecated in 3.5.5
            Always interpret keyboard input as Unicode
            (Scintilla feature 2521)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetKeysUnicode">
            <summary>Are keys always interpreted as Unicode? (Scintilla feature 2522)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.GetTwoPhaseDraw">
            <summary>Is drawing done in two phases with backgrounds drawn before foregrounds? (Scintilla feature 2283)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.IScintillaGateway.SetTwoPhaseDraw(System.Boolean)">
            <summary>
            In twoPhaseDraw mode, drawing is performed in two phases, first the background
            and then the foreground. This avoids chopping off characters that overlap the next run.
            (Scintilla feature 2284)
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTSCINTILLA">
            <summary>
            BOOL NPPM_GETCURRENTSCINTILLA(0, int* iScintillaView)<br/>
            Get current Scintilla view.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: <c>iScintillaView</c> could be <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/> or <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/></para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTLANGTYPE">
            <summary>
            BOOL NPPM_GETCURRENTLANGTYPE(0, int* langType)<br/>
            Get the programming language type from the current used document.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: langType - see <see cref="T:Npp.DotNet.Plugin.LangType"/> for all valid values</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETCURRENTLANGTYPE">
            <summary>
            BOOL NPPM_SETCURRENTLANGTYPE(0, int langType)<br/>
            Set a new programming language type to the current used document.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: langType - see <see cref="T:Npp.DotNet.Plugin.LangType"/> for all valid values</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBOPENFILES">
            <summary>
            int NPPM_GETNBOPENFILES(0, int iViewType)<br/>
            Get the number of files currently open.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: iViewType - could be <see cref="F:Npp.DotNet.Plugin.NppMsg.PRIMARY_VIEW"/>, <see cref="F:Npp.DotNet.Plugin.NppMsg.SECOND_VIEW"/> or <see cref="F:Npp.DotNet.Plugin.NppMsg.ALL_OPEN_FILES"/></para>
            </summary>
            <returns>the number of opened files</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.ALL_OPEN_FILES">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBOPENFILES"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.PRIMARY_VIEW">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBOPENFILES"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.SECOND_VIEW">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBOPENFILES"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETOPENFILENAMES">
            <summary>
            BOOL NPPM_GETOPENFILENAMES(TCHAR** fileNames, int nbFileNames)<br/>
            Get the open files full paths of both views. User is responsible to allocate an big enough fileNames array by using <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBOPENFILES"/>.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [out]: fileNames - array of file path</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: nbFileNames is the number of file path.</para>
            </summary>
            <returns>value: The number of files copied into fileNames array</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_MODELESSDIALOG">
            <summary>
            HWND NPPM_MODELESSDIALOG(int action, HWND hDlg)<br/>
            Register (or unregister) plugin's dialog handle.
            For each created dialog in your plugin, you should register it (and unregister while destroy it) to Notepad++ by using this message.
            If this message is ignored, then your dialog won't react with the key stroke messages such as TAB, Ctrl-C or Ctrl-V key.
            For the good functioning of your plugin dialog, you're recommended to not ignore this message.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: action is <see cref="F:Npp.DotNet.Plugin.NppMsg.MODELESSDIALOGADD"/> (for registering your hDlg) or <see cref="F:Npp.DotNet.Plugin.NppMsg.MODELESSDIALOGREMOVE"/> (for unregistering your hDlg)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: hDlg is the handle of dialog to register/unregister</para>
            </summary>
            <returns>hDlg (HWND) on success, NULL on failure</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.MODELESSDIALOGADD">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_MODELESSDIALOG"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.MODELESSDIALOGREMOVE">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_MODELESSDIALOG"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBSESSIONFILES">
            <summary>
            int NPPM_GETNBSESSIONFILES (BOOL* pbIsValidXML /* added in v8.6 */, TCHAR* sessionFileName)<br/>
            Get the number of files to load in the session sessionFileName. sessionFileName should be a full path name of an xml file.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [out]: pbIsValidXML, if the lParam pointer is null, then this parameter will be ignored. TRUE if XML is valid, otherwise FALSE.</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: sessionFileName is XML session full path</para>
            </summary>
            <returns>value: The number of files in XML session file</returns>
            <remarks>
            Changed in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/72c5175b33cb3a06d0ece2a7700295b0c9647140">8.6</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETSESSIONFILES">
            <summary>
            NPPM_GETSESSIONFILES (TCHAR** sessionFileArray, TCHAR* sessionFileName)<br/>
            the files' full path name from a session file.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [out]: sessionFileArray is the array in which the files' full path of the same group are written. To allocate the array with the proper size, send <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBSESSIONFILES"/>.</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: sessionFileName is XML session full path</para>
            </summary>
            <returns>FALSE on failure, TRUE on success</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SAVESESSION">
            <summary>
            NPPM_SAVESESSION(0, sessionInfo* si)<br/>
            Creates an session file for a defined set of files.
            Unlike <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SAVECURRENTSESSION"/>, which saves the current opened files, this call can be used to freely define any file which should be part of a session.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: si is a pointer to a <see cref="T:Npp.DotNet.Plugin.SessionInfo"/> structure</para>
            </summary>
            <returns>sessionFileName on success, NULL otherwise</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SAVECURRENTSESSION">
            <summary>
            TCHAR* NPPM_SAVECURRENTSESSION(0, TCHAR* sessionFileName)<br/>
            Saves the current opened files in Notepad++ as a group of files (session) as an xml file.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: sessionFileName is the xml full path name</para>
            </summary>
            <returns>sessionFileName on success, NULL otherwise</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETOPENFILENAMESPRIMARY">
            <summary>
            BOOL NPPM_GETOPENFILENAMESPRIMARY(TCHAR** fileNames, int nbFileNames)<br/>
            Get the open files full paths of main view. User is responsible to allocate an big enough fileNames array by using <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBOPENFILES"/>.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [out]: fileNames - array of file path</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: nbFileNames is the number of file path.</para>
            </summary>
            <returns>value: The number of files copied into fileNames array</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETOPENFILENAMESSECOND">
            <summary>
            BOOL NPPM_GETOPENFILENAMESSECOND(TCHAR** fileNames, int nbFileNames)<br/>
            Get the open files full paths of sub-view. User is responsible to allocate an big enough fileNames array by using <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBOPENFILES"/>.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [out]: fileNames - array of file path</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: nbFileNames is the number of file path.</para>
            </summary>
            <returns>value: The number of files copied into fileNames array</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_CREATESCINTILLAHANDLE">
            <summary>
            HWND NPPM_CREATESCINTILLAHANDLE(0, HWND hParent)<br/>
            A plugin can create a Scintilla for its usage by sending this message to Notepad++.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: hParent - If set (non NULL), it will be the parent window of this created Scintilla handle, otherwise the parent window is Notepad++</para>
            </summary>
            <returns>the handle of created Scintilla handle</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DESTROYSCINTILLAHANDLE_DEPRECATED">
            <summary>
            BOOL NPPM_DESTROYSCINTILLAHANDLE_DEPRECATED(0, HWND hScintilla) - DEPRECATED: It is kept for the compatibility.
            Notepad++ will deallocate every createed Scintilla control on exit, this message returns TRUE but does nothing.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: hScintilla is Scintilla handle</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DESTROYSCINTILLAHANDLE">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_DESTROYSCINTILLAHANDLE_DEPRECATED"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNBUSERLANG">
            <summary>
            int NPPM_GETNBUSERLANG(0, int* udlID)<br/>
            Get the number of user defined languages and, optionally, the starting menu id.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: <c>udlID</c> is optional, if not used set it to 0, otherwise an integer pointer is needed to retrieve the menu identifier.</para>
            </summary>
            <returns>the number of user defined languages identified</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTDOCINDEX">
            <summary>
            int NPPM_GETCURRENTDOCINDEX(0, int inView)<br/>
            Get the current index of the given view.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: inView, should be <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/>) or <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/></para>
            </summary>
            <returns>-1 if the view is invisible (hidden), otherwise is the current index.</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETSTATUSBAR">
            <summary>
            BOOL NPPM_SETSTATUSBAR(int whichPart, TCHAR *str2set)<br/>
            Set string in the specified field of a statusbar.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>whichPart</c> for indicating the statusbar part you want to set. It can be only the above value (0 - 5)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>str2set</c> is the string you want to write to the part of statusbar.</para>
            <returns>FALSE on failure, TRUE on success</returns>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.STATUSBAR_DOC_TYPE">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETSTATUSBAR"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.STATUSBAR_DOC_SIZE">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETSTATUSBAR"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.STATUSBAR_CUR_POS">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETSTATUSBAR"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.STATUSBAR_EOF_FORMAT">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETSTATUSBAR"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.STATUSBAR_UNICODE_TYPE">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETSTATUSBAR"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.STATUSBAR_TYPING_MODE">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETSTATUSBAR"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETMENUHANDLE">
            <summary>
            int NPPM_GETMENUHANDLE(int menuChoice, 0)<br/>
            Get menu handle (HMENU) of choice.
            <para>wParam (<see cref="T:System.UIntPtr"/>)b[in]: <c>menuChoice</c> could be main menu (<see cref="F:Npp.DotNet.Plugin.NppMsg.NPPMAINMENU"/>) or Plugin menu (<see cref="F:Npp.DotNet.Plugin.NppMsg.NPPPLUGINMENU"/>)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>menu handle (HMENU) of choice (plugin menu handle or Notepad++ main menu handle)</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPPLUGINMENU">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETMENUHANDLE"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPMAINMENU">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETMENUHANDLE"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ENCODESCI">
            <summary>
            int NPPM_ENCODESCI(int inView, 0)<br/>
            Changes current buffer in view to UTF-8.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>inView</c> - <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/> (0) or <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/> (1)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            0: ANSI<br/>
            1: UTF-8 with BOM<br/>
            2: UTF-16 Big Ending with BOM<br/>
            3: UTF-16 Little Ending with BOM<br/>
            4: UTF-8 without BOM<br/>
            5: uni7Bit<br/>
            6: UTF-16 Big Ending without BOM<br/>
            7: UTF-16 Little Ending without BOM
            </summary>
            <returns>new UniMode, with the following value:</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DECODESCI">
            <summary>
            int NPPM_DECODESCI(int inView, 0)<br/>
            Changes current buffer in view to ANSI.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>inView</c> - <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/> (0) or <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/> (1)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>old UniMode - see <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_ENCODESCI"/></returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ACTIVATEDOC">
            <summary>
            BOOL NPPM_ACTIVATEDOC(int inView, int index2Activate)<br/>
            Switch to the document by the given view and index.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>inView</c> - <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/> (0) or <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/> (1)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>index2Activate</c> - index (in the view indicated above) where is the document to be activated</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_LAUNCHFINDINFILESDLG">
            <summary>
            BOOL NPPM_LAUNCHFINDINFILESDLG(TCHAR * dir2Search, TCHAR * filter)<br/>
            Launch Find in Files dialog and set "Find in" directory and filters with the given arguments.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: if <c>dir2Search</c> is not NULL, it will be set as working directory in which Notepad++ will search</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: if filter is not NULL, filter string will be set into filter field</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DMMSHOW">
            <summary>
            BOOL NPPM_DMMSHOW(0, HWND hDlg)<br/>
            Show the dialog which was previously registered by <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_DMMREGASDCKDLG"/>.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: hDlg is the handle of dialog to show</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DMMHIDE">
            <summary>
            BOOL NPPM_DMMHIDE(0, HWND hDlg)<br/>
            Hide the dialog which was previously regeistered by <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_DMMREGASDCKDLG"/>.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: hDlg is the handle of dialog to hide</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DMMUPDATEDISPINFO">
            <summary>
            BOOL NPPM_DMMUPDATEDISPINFO(0, HWND hDlg)<br/>
            Redraw the dialog.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: hDlg is the handle of dialog to redraw</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DMMREGASDCKDLG">
            <summary>
            BOOL NPPM_DMMREGASDCKDLG(0, tTbData* pData)<br/>
            Pass the necessary dockingData to Notepad++ in order to make your dialog dockable.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: pData is the pointer of tTbData. Please check the <see cref="T:Npp.DotNet.Plugin.NppTbData"/> structure</para>
                        Minimum information which needs to be filled out are hClient, pszName, dlgID, uMask and pszModuleName.
                        Notice that <see cref="F:Npp.DotNet.Plugin.NppTbData.RcFloat"/> and <see cref="F:Npp.DotNet.Plugin.NppTbData.IPrevCont"/>  shouldn't be filled. They are used internally.
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_LOADSESSION">
            <summary>
            BOOL NPPM_LOADSESSION(0, TCHAR* sessionFileName)<br/>
            Open all files of same session in Notepad++ via a xml format session file sessionFileName.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: sessionFileName is the full file path of session file to reload</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DMMVIEWOTHERTAB">
            <summary>
            BOOL WM_DMM_VIEWOTHERTAB(0, TCHAR* name)<br/>
            Show the plugin dialog (switch to plugin tab) with the given name.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: name should be the same value as previously used to register the dialog (pszName of tTbData)</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_RELOADFILE">
            <summary>
            BOOL NPPM_RELOADFILE(BOOL withAlert, TCHAR *filePathName2Reload)<br/>
            Reload the document which matches with the given filePathName2Reload.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: filePathName2Reload is the full file path of document to reload</para>
            <returns>TRUE</returns> if reloading file succeeds, otherwise FALSE
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SWITCHTOFILE">
            <summary>
            BOOL NPPM_SWITCHTOFILE(0, TCHAR* filePathName2switch)<br/>
            Switch to the document which matches with the given filePathName2switch.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: filePathName2switch is the full file path of document to switch</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SAVECURRENTFILE">
            <summary>
            BOOL NPPM_SAVECURRENTFILE(0, 0)<br/>
            Save current activated document.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>TRUE</returns> if file is saved, otherwise FALSE (the file doesn't need to be saved, or other reasons).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SAVEALLFILES">
            <summary>
            BOOL NPPM_SAVEALLFILES(0, 0)<br/>
            Save all opened document.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>FALSE when no file needs to be saved, else TRUE if there is at least one file saved.</returns>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETMENUITEMCHECK">
            <summary>
            BOOL NPPM_SETMENUITEMCHECK(UINT pluginCmdID, BOOL doCheck)<br/>
            Set or remove the check on a item of plugin menu and tool bar (if any).
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>pluginCmdID</c> is the plugin command ID which corresponds to the menu item: <see cref="F:Npp.DotNet.Plugin.FuncItem.CmdID"/></para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: if <c>doCheck</c> value is TRUE, item will be checked, FALSE makes item unchecked.</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ADDTOOLBARICON_DEPRECATED">
            <summary>
            BOOL NPPM_ADDTOOLBARICON_DEPRECATED(UINT pluginCmdID, toolbarIcons* iconHandles) -- DEPRECATED: use NPPM_ADDTOOLBARICON_FORDARKMODE instead
            Add an icon to the toolbar.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>pluginCmdID</c> is the plugin command ID which corresponds to the menu item: <see cref="F:Npp.DotNet.Plugin.FuncItem.CmdID"/></para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>iconHandles</c> of a <see cref="T:Npp.DotNet.Plugin.ToolbarIcon"/> structure. 2 formats ".ico" and ".bmp" are needed</para>
                        Both handles should be set so the icon will be displayed correctly if toolbar icon sets are changed by users
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ADDTOOLBARICON">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_ADDTOOLBARICON_DEPRECATED"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETWINDOWSVERSION">
            <summary>
            winVer NPPM_GETWINDOWSVERSION(0, 0)<br/>
            Get OS (Windows) version.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>a <see cref="T:Npp.DotNet.Plugin.WinVer"/></returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DMMGETPLUGINHWNDBYNAME">
            <summary>
            HWND NPPM_DMMGETPLUGINHWNDBYNAME(const TCHAR *windowName, const TCHAR *moduleName)<br/>
            Retrieve the dialog handle corresponds to the windowName and moduleName. You may need this message if you want to communicate with another plugin "dockable" dialog.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: windowName - if windowName is NULL, then the first found window handle which matches with the moduleName will be returned</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in] : moduleName - if moduleName is NULL, then <returns>value is NULL</returns></para>
            <returns>NULL if moduleName is NULL. If windowName is NULL, then the first found window handle which matches with the moduleName will be returned.</returns>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_MAKECURRENTBUFFERDIRTY">
            <summary>
            BOOL NPPM_MAKECURRENTBUFFERDIRTY(0, 0)<br/>
            Make the current document dirty, aka set the save state to unsaved.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETENABLETHEMETEXTUREFUNC">
            <summary>
            THEMEAPI NPPM_GETENABLETHEMETEXTUREFUNC(0, 0) -- DEPRECATED: plugin can use EnableThemeDialogTexture directly from uxtheme.h instead
            Get "EnableThemeDialogTexture" function address.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>a proc address or NULL</returns>
            </summary>
            <remarks>
            Deprecated since <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/50e95d22675b86b6afeacb6fdc217a0011f9528e">8.4.9</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETPLUGINSCONFIGDIR">
            <summary>
            int NPPM_GETPLUGINSCONFIGDIR(int strLen, TCHAR *str)<br/>
            Get user's plugin config directory path. It's useful if plugins want to save/load parameters for the current user
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: strLen is length of  allocated buffer in which directory path is copied</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out] : str is the allocated buffere. User should call this message twice -</para>
                          The 1st call with "str" be NULL to get the required number of TCHAR (not including the terminating nul character)<br/>
                          The 2nd call to allocate "str" buffer with the 1st call's <returns>value + 1, then call it again to get the path</returns>
            <returns>value: The 1st call - the number of TCHAR to copy.</returns>
                          The 2nd call - FALSE on failure, TRUE on success
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_MSGTOPLUGIN">
            <summary>
            BOOL NPPM_MSGTOPLUGIN(TCHAR *destModuleName, CommunicationInfo *info)<br/>
            Send a private information to a plugin with given plugin name. This message allows the communication between 2 plugins.
            For example, plugin X can execute a command of plugin Y if plugin X knows the command ID and the file name of plugin Y.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: destModuleName is the destination complete module file name (with the file extension ".dll")</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: info - pointer to a <see cref="T:Npp.DotNet.Plugin.CommunicationInfo"/> structure</para>
            </summary>
            <returns>
            TRUE if Notepad++ found the plugin by its module name (destModuleName), and pass the info (communicationInfo) to the module.<br/>
            FALSE if no plugin with such name is found.
            </returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_MENUCOMMAND">
            <summary>
            BOOL NPPM_MENUCOMMAND(0, int cmdID)<br/>
            Run Notepad++ command with the given command ID.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: cmdID - See <see cref="T:Npp.DotNet.Plugin.MenuCmdId"/>for all the Notepad++ menu command items</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_TRIGGERTABBARCONTEXTMENU">
            <summary>
            BOOL NPPM_TRIGGERTABBARCONTEXTMENU(int inView, int index2Activate)<br/>
            Switch to the document by the given view and index and trigger the context menu
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>inView</c> - <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/> or <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/> </para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>index2Activate</c> - index (in the view indicated above) where is the document to have the context menu</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNPPVERSION">
            <summary>
            int NPPM_GETNPPVERSION(BOOL ADD_ZERO_PADDING, 0)<br/>
            Get Notepad++ version.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: ADD_ZERO_PADDING (see below)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>value:</returns>
            HIWORD(returned_value) is major part of version: the 1st number
            LOWORD(returned_value) is minor part of version: the 3 last numbers
            <example>
            ADD_ZERO_PADDING == TRUE
            <code>
                version  | HIWORD | LOWORD
                ------------------------------
                8.9.6.4  | 8      | 964
                9        | 9      | 0
                6.9      | 6      | 900
                6.6.6    | 6      | 660
                13.6.6.6 | 13     | 666
            </code>
            </example>
            <example>
            ADD_ZERO_PADDING == FALSE
            <code>
                version  | HIWORD | LOWORD
                ------------------------------
                8.9.6.4  | 8      | 964
                9        | 9      | 0
                6.9      | 6      | 9
                6.6.6    | 6      | 66
                13.6.6.6 | 13     | 666
            </code>
            </example>
            </summary>
            <remarks>
            Changed in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/ef609c896f209ecffd8130c3e3327ca8a8157e72">8.4.1</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_HIDETABBAR">
            <summary>
            BOOL NPPM_HIDETABBAR(0, BOOL hideOrNot)<br/>
            Hide (or show) tab bar.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: if hideOrNot is set as TRUE then tab bar will be hidden, otherwise it'll be shown.</para>
            </summary>
            <returns>value: the old status value</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ISTABBARHIDDEN">
            <summary>
            BOOL NPPM_ISTABBARHIDDEN(0, 0)<br/>
            Get tab bar status.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>value: TRUE if tool bar is hidden, otherwise FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETPOSFROMBUFFERID">
             <summary>
             int NPPM_GETPOSFROMBUFFERID(UINT_PTR bufferID, int priorityView)<br/>
             Get document position (VIEW and INDEX) from a buffer ID, according priorityView.
             <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: BufferID of document</para>
             <para>lParam (<see cref="T:System.IntPtr"/>) [in]: priorityView is the target VIEW. However, if the given bufferID cannot be found in the target VIEW, the other VIEW will be searched.</para>
            
             VIEW takes 2 highest bits and INDEX (0 based) takes the rest (30 bits).<br/><br/>
             Here's the values for the view:
             <code>
                 MAIN_VIEW 0
                 SUB_VIEW  1
             </code>
             If priorityView set to SUB_VIEW, then SUB_VIEW will be search firstly
             </summary>
             <returns>-1 if the bufferID non existing, else return value contains VIEW and INDEX:</returns>///
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLPATHFROMBUFFERID">
            <summary>
            int NPPM_GETFULLPATHFROMBUFFERID(UINT_PTR bufferID, TCHAR* fullFilePath)<br/>
            Get full path file name from a bufferID (the pointer of buffer).
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>bufferID</c></para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: <c>fullFilePath</c> - User should call it with fullFilePath be NULL to get the number of TCHAR (not including the nul character),</para>
                    allocate fullFilePath with the <returns>values + 1, then call it again to get full path file name</returns>
            </summary>
            <returns>-1 if the bufferID non existing, otherwise the number of TCHAR copied/to copy</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETBUFFERIDFROMPOS">
            <summary>
            UINT_PTR NPPM_GETBUFFERIDFROMPOS(int index, int iView)<br/>
            Get the document bufferID from the given position (iView and index).
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>index</c> (0 based) of document</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>iView</c> <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/> or <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/></para>
            </summary>
            <returns>NULL if invalid, otherwise bufferID</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTBUFFERID">
            <summary>
            UINT_PTR NPPM_GETCURRENTBUFFERID(0, 0)<br/>
            Get active document BufferID.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>active document BufferID</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_RELOADBUFFERID">
            <summary>
            BOOL NPPM_RELOADBUFFERID(UINT_PTR bufferID, BOOL alert)<br/>
            Reloads document with the given BufferID
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: BufferID of document to reload</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: set TRUE to let user confirm or reject the reload; setting FALSE will reload with no alert.</para>
            </summary>
            <returns>TRUE on success, FALSE otherwise</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETBUFFERLANGTYPE">
            <summary>
            int NPPM_GETBUFFERLANGTYPE(UINT_PTR bufferID, 0)<br/>
            Retrieves the language type of the document with the given bufferID.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: BufferID of document to get LangType from</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>as int, see LangType. -1 on error</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETBUFFERLANGTYPE">
            <summary>
            BOOL NPPM_SETBUFFERLANGTYPE(UINT_PTR bufferID, int langType)<br/>
            Set the language type of the document based on the given bufferID.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: BufferID to set LangType of</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: langType as int, <see cref="T:Npp.DotNet.Plugin.LangType"/> for valid values (<see cref="F:Npp.DotNet.Plugin.LangType.L_USER"/> and <see cref="F:Npp.DotNet.Plugin.LangType.L_EXTERNAL"/> are not supported)</para>
            </summary>
            <returns>TRUE on success, FALSE otherwise</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETBUFFERENCODING">
            <summary>
            int NPPM_GETBUFFERENCODING(UINT_PTR bufferID, 0)<br/>
            Get encoding from the document with the given bufferID
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: BufferID to get encoding from</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            0: ANSI<br/>
            1: UTF-8 with BOM<br/>
            2: UTF-16 Big Ending with BOM<br/>
            3: UTF-16 Little Ending with BOM<br/>
            4: UTF-8 without BOM<br/>
            5: uni7Bit<br/>
            6: UTF-16 Big Ending without BOM<br/>
            7: UTF-16 Little Ending without BOM
            </summary>
            <returns>-1 on error, otherwise UniMode, with the following value:</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETBUFFERENCODING">
            <summary>
            BOOL NPPM_SETBUFFERENCODING(UINT_PTR bufferID, int encoding)<br/>
            Set encoding to the document with the given bufferID
            <para>wParam (<see cref="T:System.UIntPtr"/>): BufferID to set encoding of</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : encoding, see UniMode value in <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETBUFFERENCODING"/></para>
            Can only be done on new, unedited files
            </summary>
            <returns>TRUE on success, FALSE otherwise</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETBUFFERFORMAT">
            <summary>
            int NPPM_GETBUFFERFORMAT(UINT_PTR bufferID, 0)<br/>
            Get the EOL format of the document with given bufferID.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: BufferID to get EolType format from</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>
            -1 on error, otherwise EolType format:<br/><br/>
             0: Windows (CRLF)<br/>
             1: Macos (CR)<br/>
             2: Unix (LF)<br/>
             3. Unknown
             </returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETBUFFERFORMAT">
            <summary>
            BOOL NPPM_SETBUFFERFORMAT(UINT_PTR bufferID, int format)<br/>
            Set the EOL format to the document with given bufferID.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: BufferID to set EolType format of</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: EolType format. For EolType format value, see <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETBUFFERFORMAT"/> (above)</para>
            </summary>
            <returns>TRUE on success, FALSE otherwise</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_HIDETOOLBAR">
            <summary>
            BOOL NPPM_HIDETOOLBAR(0, BOOL hideOrNot)<br/>
            Hide (or show) the toolbar.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: if <c>hideOrNot</c> is set as TRUE then tool bar will be hidden, otherwise it'll be shown.</para>
            </summary>
            <returns>value: the old status value</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ISTOOLBARHIDDEN">
            <summary>
            BOOL NPPM_ISTOOLBARHIDDEN(0, 0)<br/>
            Get toolbar status.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>value: TRUE if tool bar is hidden, otherwise FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_HIDEMENU">
            <summary>
            BOOL NPPM_HIDEMENU(0, BOOL hideOrNot)<br/>
            Hide (or show) menu bar.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: if <c>hideOrNot</c> is set as TRUE then menu will be hidden, otherwise it'll be shown.</para>
            </summary>
            <returns>value: the old status value</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ISMENUHIDDEN">
            <summary>
            BOOL NPPM_ISMENUHIDDEN(0, 0)<br/>
            Get menu bar status.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>value: TRUE if menu bar is hidden, otherwise FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_HIDESTATUSBAR">
            <summary>
            BOOL NPPM_HIDESTATUSBAR(0, BOOL hideOrNot)<br/>
            Hide (or show) status bar.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: if <c>hideOrNot</c> is set as TRUE then status bar will be hidden, otherwise it'll be shown.</para>
            </summary>
            <returns>value: the old status value</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ISSTATUSBARHIDDEN">
            <summary>
            BOOL NPPM_ISSTATUSBARHIDDEN(0, 0)<br/>
            Get status bar status.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>value: TRUE if status bar is hidden, otherwise FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETSHORTCUTBYCMDID">
            <summary>
            BOOL NPPM_GETSHORTCUTBYCMDID(int cmdID, ShortcutKey* sk)<br/>
            Get your plugin command current mapped shortcut into sk via cmdID.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: cmdID is your plugin command ID</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: sk is a pointer to a <see cref="T:Npp.DotNet.Plugin.ShortcutKey"/> strcture which will receive the requested CMD shortcut. It should be allocated in the plugin before being used.</para>
            You may need it after getting <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPN_READY"/> notification.
            </summary>
            <returns>TRUE if this function call is successful and shortcut is enable, otherwise FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DOOPEN">
            <summary>
            BOOL NPPM_DOOPEN(0, const TCHAR* fullPathName2Open)<br/>
            Open a file with given <c>fullPathName2Open</c>.
            If <c>fullPathName2Open</c> has been already opened in Notepad++, the it will be activated and becomes the current document.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>fullPathName2Open</c> indicates the full file path name to be opened</para>
            </summary>
            <returns>TRUE if the operation is successful, otherwise FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SAVECURRENTFILEAS">
            <summary>
            BOOL NPPM_SAVECURRENTFILEAS (BOOL saveAsCopy, const TCHAR* filename)<br/>
            Save the current activated document.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: saveAsCopy must be either FALSE to save, or TRUE to save a copy of the current filename ("Save a Copy As..." action)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: filename indicates the full file path name to be saved</para>
            </summary>
            <returns>TRUE if the operation is successful, otherwise FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTNATIVELANGENCODING">
            <summary>
            int NPPM_GETCURRENTNATIVELANGENCODING(0, 0)<br/>
            Get the code page associated with the current localisation of Notepad++.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>the current native language encoding</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ALLOCATESUPPORTED_DEPRECATED">
            <summary>
            DEPRECATED: the message has been made (since 2010 AD) for checking if NPPM_ALLOCATECMDID is supported. This message is no more needed.
            BOOL NPPM_ALLOCATESUPPORTED_DEPRECATED(0, 0)<br/>
            Get NPPM_ALLOCATECMDID supported status. Use to identify if subclassing is necessary
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>TRUE if NPPM_ALLOCATECMDID is supported</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ALLOCATESUPPORTED">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_ALLOCATESUPPORTED_DEPRECATED"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ALLOCATECMDID">
            <summary>
            BOOL NPPM_ALLOCATECMDID(int numberRequested, int* startNumber)<br/>
            Obtain a number of consecutive menu item IDs for creating menus dynamically, with the guarantee of these IDs not clashing with any other plugins.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: numberRequested is the number of ID you request for the reservation</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: startNumber will be set to the initial command ID if successful</para>
            <example>
            Example: If a plugin needs 4 menu item ID, the following code can be used:
            <code>
                int idBegin;
                BOOL isAllocatedSuccessful = ::SendMessage(nppData._nppHandle, NPPM_ALLOCATECMDID, 4, &amp;idBegin);
            </code>
            </example>
            If isAllocatedSuccessful is TRUE, and value of idBegin is 46581,
            then menu iten ID 46581, 46582, 46583 and 46584 are preserved by Notepad++, and they are safe to be used by the plugin.
            </summary>
            <returns>TRUE if successful, FALSE otherwise. startNumber will also be set to 0 if unsuccessful</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ALLOCATEMARKER">
            <summary>
            BOOL NPPM_ALLOCATEMARKER(int numberRequested, int* startNumber)<br/>
            Allocate a number of consecutive marker IDs to a plugin: if a plugin need to add a marker on Notepad++'s Scintilla marker margin,
            it has to use this message to get marker number, in order to prevent from the conflict with the other plugins.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: numberRequested is the number of ID you request for the reservation</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: startNumber will be set to the initial command ID if successful</para>
            <example>
            Example: If a plugin needs 3 marker ID, the following code can be used:
            <code>
                int idBegin;
                BOOL isAllocatedSuccessful = ::SendMessage(nppData._nppHandle, NPPM_ALLOCATEMARKER, 3, &amp;idBegin);
            </code>
            </example>
            if isAllocatedSuccessful is TRUE, and value of idBegin is 16
            then marker ID 16, 17 and 18 are preserved by Notepad++, and they are safe to be used by the plugin.
            </summary>
            <returns>TRUE if successful, FALSE otherwise. startNumber will also be set to 0 if unsuccessful</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETLANGUAGENAME">
            <summary>
            int NPPM_GETLANGUAGENAME(LangType langType, TCHAR* langName)<br/>
            Get programming language name from the given language type (<see cref="T:Npp.DotNet.Plugin.LangType"/> enum).
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: langType is the number of <see cref="T:Npp.DotNet.Plugin.LangType"/></para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: langName is the buffer to receive the language name string</para>
            You should call this function 2 times - the first time you pass langName as NULL to get the number of characters to copy.
            You allocate a buffer of the length of (the number of characters + 1) then send <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETLANGUAGENAME"/> the 2nd time
            by passing allocated buffer as argument langName
            </summary>
            <returns>value is the number of copied character / number of character to copy (0 is not included)</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETLANGUAGEDESC">
             <summary>
             INT NPPM_GETLANGUAGEDESC(int langType, TCHAR *langDesc)<br/>
             Get programming language short description from the given language type (<see cref="T:Npp.DotNet.Plugin.LangType"/> enum).
             <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: langType is the number of <see cref="T:Npp.DotNet.Plugin.LangType"/></para>
             <para>lParam (<see cref="T:System.IntPtr"/>) [out]: langDesc is the buffer to receive the language description string</para>
            
             You should call this function 2 times - the first time you pass langDesc as NULL to get the number of characters to copy.
             You allocate a buffer of the length of (the number of characters + 1) then send <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETLANGUAGENAME"/> the 2nd time
             by passing allocated buffer as argument langDesc
             </summary>
             <returns>value is the number of copied character / number of character to copy (\0 is not included)</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SHOWDOCLIST">
            <summary>
            BOOL NPPM_SHOWDOCLIST(0, BOOL toShowOrNot)<br/>
            Show or hide the Document List panel.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>toShowOrNot</c> - if toShowOrNot is TRUE, the Document List panel is shown otherwise it is hidden.</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ISDOCSWITCHERSHOWN">
            <summary>
            BOOL NPPM_ISDOCLISTSHOWN(0, 0)<br/>
            Checks the visibility of the Document List panel.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>TRUE if the Document List panel is currently shown, FALSE otherwise</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETAPPDATAPLUGINSALLOWED">
            <summary>
            BOOL NPPM_GETAPPDATAPLUGINSALLOWED(0, 0)<br/>
            Check to see if loading plugins from <c>"%APPDATA%\..\Local\Notepad++\plugins"</c> is allowed.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>TRUE if loading plugins from <c>%APPDATA%</c> is allowed, FALSE otherwise</returns>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTVIEW">
            <summary>
            int NPPM_GETCURRENTVIEW(0, 0)<br/>
            Get the current used view.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>current edit view of Notepad++. Only 2 possible values: 0 = <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/>, 1 = <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/></returns>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DOCLISTDISABLEEXTCOLUMN">
            <summary>
            BOOL NPPM_DOCLISTDISABLEEXTCOLUMN(0, BOOL disableOrNot)<br/>
            Disable or enable extension column of Document List
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>disableOrNot</c> - if TRUE, extension column is hidden otherwise it is visible.</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETEDITORDEFAULTFOREGROUNDCOLOR">
            <summary>
            int NPPM_GETEDITORDEFAULTFOREGROUNDCOLOR(0, 0)<br/>
            Get the current editor default foreground color.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>the color as integer with hex format being <c>0x00bbggrr</c></returns>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETEDITORDEFAULTBACKGROUNDCOLOR">
            <summary>
            int NPPM_GETEDITORDEFAULTBACKGROUNDCOLOR(0, 0)<br/>
            Get the current editor default background color.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>the color as integer with hex format being <c>0x00bbggrr</c></returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETSMOOTHFONT">
            <summary>
            BOOL NPPM_SETSMOOTHFONT(0, BOOL setSmoothFontOrNot)<br/>
            Set (or remove) smooth font. The API uses underlying Scintilla command <see cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFONTQUALITY"/> to manage the font quality.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>setSmoothFontOrNot</c> - if TRUE, this message sets <see cref="F:Npp.DotNet.Plugin.SciMsg.SC_EFF_QUALITY_LCD_OPTIMIZED"/> else <see cref="F:Npp.DotNet.Plugin.SciMsg.SC_EFF_QUALITY_DEFAULT"/></para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETEDITORBORDEREDGE">
            <summary>
            BOOL NPPM_SETEDITORBORDEREDGE(0, BOOL withEditorBorderEdgeOrNot)<br/>
            Add (or remove) an additional sunken edge style to the Scintilla window else it removes the extended style from the window.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>withEditorBorderEdgeOrNot</c> - TRUE for adding border edge on Scintilla window, FALSE for removing it</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SAVEFILE">
            <summary>
            BOOL NPPM_SAVEFILE(0, const TCHAR *fileNameToSave)<br/>
            Save the file (opened in Notepad++) with the given full file name path.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>fileNameToSave</c> must be the full file path for the file to be saved.</para>
            </summary>
            <returns>TRUE on success, FALSE if <c>fileNameToSave</c> is not found</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DISABLEAUTOUPDATE">
            <summary>
            BOOL NPPM_DISABLEAUTOUPDATE(0, 0)<br/>
            Disable Notepad++ auto-update.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_REMOVESHORTCUTBYCMDID">
            <summary>
            BOOL NPPM_REMOVESHORTCUTBYCMDID(int pluginCmdID, 0)<br/>
            Remove the assigned shortcut mapped to pluginCmdID
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: pluginCmdID</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>TRUE if function call is successful, otherwise FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETPLUGINHOMEPATH">
            <summary>
            int NPPM_GETPLUGINHOMEPATH(size_t strLen, TCHAR* pluginRootPath)<br/>
            Get plugin home root path. It's useful if plugins want to get its own path by appending <c>pluginFolderName</c> which is the name of plugin without extension part.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>strLen</c> - size of allocated <c>pluginRootPath</c> buffer</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: <c>pluginRootPath</c> - Users should call it with <c>pluginRootPath</c> be NULL to get the required number of TCHAR (not including the terminating nul character),</para>
                         allocate pluginRootPath buffer with the <returns>value + 1, then call it again to get the path.</returns>
            </summary>
            <returns>the number of TCHAR copied/to copy, or 0 on failure</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETSETTINGSONCLOUDPATH">
            <summary>
            int NPPM_GETSETTINGSONCLOUDPATH(size_t strLen, TCHAR *settingsOnCloudPath)<br/>
            Get settings on cloud path. It's useful if plugins want to store its settings on Cloud, if this path is set.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: <c>strLen</c> - size of allocated <c>settingsOnCloudPath</c> buffer</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: <c>settingsOnCloudPath</c> - Users should call it with <c>settingsOnCloudPath</c> be NULL to get the required number of TCHAR (not including the terminating nul character),</para>
                         allocate settingsOnCloudPath buffer with the <returns>value + 1, then call it again to get the path.</returns>
            </summary>
            <returns>the number of TCHAR copied/to copy. If the <returns>value is 0, then this path is not set, or the "strLen" is not enough to copy the path.</returns></returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETLINENUMBERWIDTHMODE">
            <summary>
            BOOL NPPM_SETLINENUMBERWIDTHMODE(0, int widthMode)<br/>
            Set line number margin width in dynamic width mode (<see cref="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_DYNAMIC"/>) or constant width mode (<see cref="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_CONSTANT"/>)<br/>
            It may help some plugins to disable non-dynamic line number margins width to have a smoothly visual effect while vertical scrolling the content in Notepad++
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: widthMode should be <see cref="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_DYNAMIC"/> or <see cref="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_CONSTANT"/></para>
            </summary>
            <returns>TRUE</returns> if calling is successful, otherwise <returns>FALSE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_DYNAMIC">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETLINENUMBERWIDTHMODE"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_CONSTANT">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETLINENUMBERWIDTHMODE"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETLINENUMBERWIDTHMODE">
            <summary>
            int NPPM_GETLINENUMBERWIDTHMODE(0, 0)<br/>
            Get line number margin width in dynamic width mode (<see cref="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_DYNAMIC"/>) or constant width mode (<see cref="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_CONSTANT"/>)<br/>
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            </summary>
            <returns>current line number margin width mode (<see cref="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_DYNAMIC"/> or <see cref="F:Npp.DotNet.Plugin.NppMsg.LINENUMWIDTH_CONSTANT"/>)</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ADDTOOLBARICON_FORDARKMODE">
            <summary>
            BOOL NPPM_ADDTOOLBARICON_FORDARKMODE(UINT pluginCmdID, toolbarIconsWithDarkMode* iconHandles)<br/>
            Use this instead of the obsolete <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_ADDTOOLBARICON"/> (DEPRECATED) which doesn't support the dark mode
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: pluginCmdID</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: iconHandles is the pointer to a <see cref="T:Npp.DotNet.Plugin.ToolbarIconDarkMode"/> structure</para>
                        All 3 handles below should be set so the icon will be displayed correctly if toolbar icon sets are changed by users, also in dark mode
            </summary>
            <remarks>
            Added in <a href="https://community.notepad-plus-plus.org/topic/21652/add-new-api-nppm_addtoolbaricon_fordarkmode-for-dark-mode">8.0</a>
            </remarks>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DOCLISTDISABLEPATHCOLUMN">
            <summary>
            BOOL NPPM_DOCLISTDISABLEPATHCOLUMN(0, BOOL disableOrNot)<br/>
            Disable or enable path column of Document List
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: <c>disableOrNot</c> - if disableOrNot is TRUE, extension column is hidden otherwise it is visible.</para>
            </summary>
            <remarks>See <seealso cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_DOCLISTDISABLEEXTCOLUMN"/>.</remarks>
            <returns>TRUE</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETEXTERNALLEXERAUTOINDENTMODE">
            <summary>
            BOOL NPPM_GETEXTERNALLEXERAUTOINDENTMODE(const TCHAR* languageName, ExternalLexerAutoIndentMode* autoIndentMode)<br/>
            Get ExternalLexerAutoIndentMode for an installed external programming language.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: languageName is external language name to search</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: autoIndentMode could receive one of three following values</para>
                         - Standard (0) means Notepad++ will keep the same TAB indentation between lines;
                         - C_Like (1) means Notepad++ will perform a C-Language style indentation for the selected external language;
                         - Custom (2) means a Plugin will be controlling auto-indentation for the current language.
            returned values: TRUE for successful searches, otherwise FALSE.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETEXTERNALLEXERAUTOINDENTMODE">
            <summary>
            BOOL NPPM_SETEXTERNALLEXERAUTOINDENTMODE(const TCHAR* languageName, ExternalLexerAutoIndentMode autoIndentMode)<br/>
            Set ExternalLexerAutoIndentMode for an installed external programming language.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: languageName is external language name to set</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: autoIndentMode could receive one of three following values</para>
                        - Standard (0) means Notepad++ will keep the same TAB indentation between lines;
                        - C_Like (1) means Notepad++ will perform a C-Language style indentation for the selected external language;
                        - Custom (2) means a Plugin will be controlling auto-indentation for the current language.
            <returns>value: TRUE if function call was successful, otherwise FALSE.</returns>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ISAUTOINDENTON">
            <summary>
            BOOL NPPM_ISAUTOINDENTON(0, 0)<br/>
            Get the current use Auto-Indentation setting in Notepad++ Preferences.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>TRUE</returns> if Auto-Indentation is on, FALSE otherwise
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTMACROSTATUS">
            <summary>
            MacroStatus NPPM_GETCURRENTMACROSTATUS(0, 0)<br/>
            Get current enum class MacroStatus { Idle, RecordInProgress, RecordingStopped, PlayingBack }
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>MacroStatus as int:</returns>
            0: Idle - macro is not in use and it's empty
            1: RecordInProgress - macro is currently being recorded
            2: RecordingStopped - macro recording has been stopped
            3: PlayingBack - macro is currently being played back
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ISDARKMODEENABLED">
            <summary>
            BOOL NPPM_ISDARKMODEENABLED(0, 0)<br/>
            Get Notepad++ Dark Mode status (ON or OFF).
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>TRUE</returns> if Dark Mode is enable, otherwise FALSE
            since 8.4.1
            https://github.com/notepad-plus-plus/notepad-plus-plus/commit/1eb5b10e41d7ab92b60aa32b28d4fe7739d15b53
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETDARKMODECOLORS">
            <summary>
            BOOL NPPM_GETDARKMODECOLORS (size_t cbSize, NppDarkMode::Colors* returnColors)<br/>
            Get the colors used in Dark Mode.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: cbSize must be filled with sizeof(NppDarkMode::Colors).</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: returnColors must be a pre-allocated NppDarkMode::Colors struct.</para>
            <example>
            You need to uncomment the following code to use NppDarkMode::Colors structure:
            <code>
                namespace NppDarkMode
                {
                 struct Colors
                 {
                   COLORREF background = 0;
                   COLORREF softerBackground = 0;
                   COLORREF hotBackground = 0;
                   COLORREF pureBackground = 0;
                   COLORREF errorBackground = 0;
                   COLORREF text = 0;
                   COLORREF darkerText = 0;
                   COLORREF disabledText = 0;
                   COLORREF linkText = 0;
                   COLORREF edge = 0;
                   COLORREF hotEdge = 0;
                   COLORREF disabledEdge = 0;
                 };
                }
            </code>
            </example>
            Note: in the case of calling failure ("false" is returned), you may need to change NppDarkMode::Colors structure to:
            https://github.com/notepad-plus-plus/notepad-plus-plus/blob/master/PowerEditor/src/NppDarkMode.h#L32
            </summary>
            <returns>TRUE when successful, FALSE otherwise.</returns>
            <remarks>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/1eb5b10e41d7ab92b60aa32b28d4fe7739d15b53">8.4.1</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTCMDLINE">
            <summary>
            int NPPM_GETCURRENTCMDLINE(size_t strLen, TCHAR *commandLineStr)<br/>
            Get the Current Command Line string.
            Users should call it with commandLineStr as NULL to get the required number of TCHAR (not including the terminating nul character),
            allocate commandLineStr buffer with the <returns>value + 1, then call it again to get the current command line string.</returns>
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: strLen is "commandLineStr" buffer length</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: commandLineStr receives all copied command line string</para>
            <returns>the number of TCHAR copied/to copy</returns>
            since 8.4.2
            https://github.com/notepad-plus-plus/notepad-plus-plus/commit/0f8d5724afb0a540e8b4024252945ab60bc88c71
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_CREATELEXER">
            <summary>
            void* NPPM_CREATELEXER(0, const TCHAR* lexer_name)<br/>
            Get the ILexer pointer created by Lexilla. Call the lexilla "CreateLexer()" function to allow plugins to set the lexer for a Scintilla instance created by NPPM_CREATESCINTILLAHANDLE.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: lexer_name is the name of the lexer</para>
            <returns>the ILexer pointer</returns>
            since 8.4.3
            https://github.com/notepad-plus-plus/notepad-plus-plus/commit/f1ed4de78dbe8f5d85f4d199bae2970148cca8ed
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETBOOKMARKID">
            <summary>
            int NPPM_GETBOOKMARKID(0, 0)<br/>
            Get the bookmark ID - use this API to get bookmark ID dynamically that garantees you get always the right bookmark ID even it's been changed through the different versions.
            <para>wParam (<see cref="T:System.UIntPtr"/>): 0 (not used)</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) : 0 (not used)</para>
            <returns>bookmark ID</returns>
            since 8.4.7
            https://github.com/notepad-plus-plus/notepad-plus-plus/commit/4d5069280900ee249d358bc2b311bdb4b03f30a9
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_DARKMODESUBCLASSANDTHEME">
            <summary>
            ULONG NPPM_DARKMODESUBCLASSANDTHEME(ULONG dmFlags, HWND hwnd)<br/>
            Add support for generic dark mode to plugin dialog. Subclassing is applied automatically unless DWS_USEOWNDARKMODE flag is used.
            Might not work properly in C# plugins.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: dmFlags has 2 possible value dmfInit (0x0000000BUL) &amp; dmfHandleChange (0x0000000CUL) - see above definition</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: hwnd is the dialog handle of plugin -  Docking panels don't need to call NPPM_DARKMODESUBCLASSANDTHEME</para>
            Examples:
            <example>
            - after controls initializations in WM_INITDIALOG, in WM_CREATE or after CreateWindow:
            <code>
                auto success = static_cast&lt;ULONG&gt;(::SendMessage(nppData._nppHandle, NPPM_DARKMODESUBCLASSANDTHEME, static_cast&lt;WPARAM&gt;(NppDarkMode::dmfInit), reinterpret_cast&lt;LPARAM&gt;(mainHwnd)));
            </code></example><example>
            - handling dark mode change:
            <code>
                extern "C" __declspec(dllexport) void beNotified(SCNotification * notifyCode)
                {
                	switch (notifyCode->nmhdr.code)
                	{
                		case NPPN_DARKMODECHANGED:
                		{
                			::SendMessage(nppData._nppHandle, NPPM_DARKMODESUBCLASSANDTHEME, static_cast&lt;WPARAM&gt;(dmfHandleChange), reinterpret_cast&lt;LPARAM&gt;(mainHwnd));
                			::SetWindowPos(mainHwnd, nullptr, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE | SWP_NOZORDER | SWP_FRAMECHANGED);
                            // to redraw titlebar and window
                			break;
                		}
                	}
                }
            </code>
            </example>
            </summary>
            <returns>succesful combinations of flags.</returns>
            <remarks>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/e7f321f21a2feae3669b286ae2b64e6e033f231f">8.5.4</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_ALLOCATEINDICATOR">
            <summary>
            BOOL NPPM_ALLOCATEINDICATOR(int numberRequested, int* startNumber)<br/>
            Allocates an indicator number to a plugin: if a plugin needs to add an indicator,
            it has to use this message to get the indicator number, in order to prevent a conflict with the other plugins.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: numberRequested is the number of ID you request for the reservation</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [out]: startNumber will be set to the initial command ID if successful</para>
            <example>
            Example: If a plugin needs 1 indicator ID, the following code can be used :
            <code>
                int idBegin;
                BOOL isAllocatedSuccessful = ::SendMessage(nppData._nppHandle, NPPM_ALLOCATEINDICATOR, 1, &amp;idBegin);
            </code>
            </example>
            If isAllocatedSuccessful is TRUE, and value of idBegin is 7,
            then indicator ID 7 is preserved by Notepad++, and it is safe to be used by the plugin.
            </summary>
            <returns>TRUE if successful, FALSE otherwise. startNumber will also be set to 0 if unsuccessful</returns>
            <remarks>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/de25873cb3352ee59d883e95e80c91806944e348">8.5.6</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETTABCOLORID">
            <summary>
            int NPPM_GETTABCOLORID (int view, int tabIndex)<br/>
            Gets the tab color id for the given view and tab index.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: 0 for <see cref="F:Npp.DotNet.Plugin.NppMsg.MAIN_VIEW"/>, 1 for <see cref="F:Npp.DotNet.Plugin.NppMsg.SUB_VIEW"/>, -1 for currently-active view</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: zero-based tab index, i.e., use 0 for first tab, 1 for second tab, etc.; use -1 for active tab</para>
            </summary>
            <returns>the tab color id value</returns>
            <remarks>
            <example>
            The return value is one of:
            <code>
                -1 (no color)
                 0 (yellow)
                 1 (green)
                 2 (blue)
                 3 (orange)
                 4 (pink)
            </code>
            </example>
            <example>
            There is no symmetric plugin command for setting the tab color.
            Plugins can use <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_MENUCOMMAND"/> to set active tab's color
            with the desired tab color using these menu-command ids:
            <code>
                44110 (no color)
                44111 (yellow)
                44112 (green)
                44113 (blue)
                44114 (orange)
                44115 (pink)
            </code>
            </example>
            <para>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/9244cd09430c82ecff805ea862c9133d5cb56ded">8.6.8</a>
            </para>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_SETUNTITLEDNAME">
            <summary>
            int NPPM_SETUNTITLEDNAME(BufferID id, const TCHAR* newName)<br/>
            Rename the tab name for an untitled tab.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: id - BufferID of the tab. -1 for currently active tab</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: newName - the desired new name of the tab</para>
            </summary>
            <returns>TRUE upon success; FALSE upon failure</returns>
            <remarks>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/b3daf0a98220ffc6e206133aa645d5a2d1d63a4f">8.6.9</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNATIVELANGFILENAME">
            <summary>
            int NPPM_GETNATIVELANGFILENAME(size_t strLen, char* nativeLangFileName)<br/>
            Get the Current native language file name string. Use it after getting <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPN_READY"/> notification to find out which native language is used.
            Users should call it with <c>nativeLangFileName</c> as NULL to get the required number of char (not including the terminating nul character),
            allocate language file name string buffer with the return value + 1, then call it again to get the current native language file name string.
            <para>wParam (<see cref="T:System.UIntPtr"/>) [in]: strLen is &quot;language file name string&quot; buffer length</para>
            <para>lParam (<see cref="T:System.IntPtr"/>) [in]: language file name string receives all copied native language file name string</para>
            </summary>
            <returns>The number of chars copied/to copy</returns>
            <remarks>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/446cc980e871d04885f13055bb56acee820636c8">8.7</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH">
            <summary>
            BOOL NPPM_GETXXXXXXXXXXXXXXXX(size_t strLen, TCHAR *str)<br/>
            where:<br/>
            str is the allocated TCHAR array,<br/>
            strLen is the allocated array size
            </summary>
            <returns>TRUE when get generic_string operation success, otherwise FALSE (allocated array size is too small)</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTDIRECTORY">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFILENAME">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNAMEPART">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETEXTPART">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTWORD">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNPPDIRECTORY">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFILENAMEATCURSOR">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTLINESTR">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTLINE">
            <summary>
            INT NPPM_GETCURRENTLINE(0, 0);
            </summary>
            <returns>the caret current position line</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETCURRENTCOLUMN">
            <summary>
            INT NPPM_GETCURRENTCOLUMN(0, 0);
            </summary>
            <returns>the caret current position column</returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNPPFULLFILEPATH">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETFULLCURRENTPATH"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FIRST">
            <summary>Notification code.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_READY">
             <summary>
            scnNotification->nmhdr.code = NPPN_READY;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = 0;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_TBMODIFICATION">
             <summary>
            scnNotification->nmhdr.code = NPPN_TB_MODIFICATION;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = 0;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEBEFORECLOSE">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEBEFORECLOSE;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEOPENED">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEOPENED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILECLOSED">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILECLOSED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEBEFOREOPEN">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEBEFOREOPEN;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEBEFORESAVE">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEBEFOREOPEN;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILESAVED">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILESAVED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_SHUTDOWN">
             <summary>
            scnNotification->nmhdr.code = NPPN_SHUTDOWN;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = 0;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_BUFFERACTIVATED">
             <summary>
            scnNotification->nmhdr.code = NPPN_BUFFERACTIVATED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = activatedBufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_LANGCHANGED">
             <summary>
            scnNotification->nmhdr.code = NPPN_LANGCHANGED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = currentBufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_WORDSTYLESUPDATED">
             <summary>
            scnNotification->nmhdr.code = NPPN_WORDSTYLESUPDATED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = currentBufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_SHORTCUTREMAPPED">
             <summary>
            scnNotification->nmhdr.code = NPPN_SHORTCUTSREMAPPED;
            scnNotification->nmhdr.hwndFrom = ShortcutKeyStructurePointer;
            scnNotification->nmhdr.idFrom = cmdID;
            where ShortcutKeyStructurePointer is pointer of struct ShortcutKey:
            struct ShortcutKey {
            	bool _isCtrl;
            	bool _isAlt;
            	bool _isShift;
            	UCHAR _key;
            };
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEBEFORELOAD">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEBEFOREOPEN;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = NULL;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILELOADFAILED">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEOPENFAILED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_READONLYCHANGED">
             <summary>
            scnNotification->nmhdr.code = NPPN_READONLYCHANGED;
            scnNotification->nmhdr.hwndFrom = bufferID;
            scnNotification->nmhdr.idFrom = docStatus;
             where bufferID is BufferID
                   docStatus can be combined by <see cref="F:Npp.DotNet.Plugin.NppMsg.DOCSTATUS_READONLY"/> and <see cref="F:Npp.DotNet.Plugin.NppMsg.DOCSTATUS_BUFFERDIRTY"/>
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.DOCSTATUS_READONLY">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPN_READONLYCHANGED"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.DOCSTATUS_BUFFERDIRTY">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPN_READONLYCHANGED"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_DOCORDERCHANGED">
             <summary>
            scnNotification->nmhdr.code = NPPN_DOCORDERCHANGED;
            scnNotification->nmhdr.hwndFrom = newIndex;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_SNAPSHOTDIRTYFILELOADED">
             <summary>
            scnNotification->nmhdr.code = NPPN_SNAPSHOTDIRTYFILELOADED;
            scnNotification->nmhdr.hwndFrom = NULL;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_BEFORESHUTDOWN">
             <summary>
            scnNotification->nmhdr.code = NPPN_BEFORESHUTDOWN;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = 0;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_CANCELSHUTDOWN">
             <summary>
            scnNotification->nmhdr.code = NPPN_CANCELSHUTDOWN;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = 0;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEBEFORERENAME">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEBEFORERENAME;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILERENAMECANCEL">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILERENAMECANCEL;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILERENAMED">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILERENAMED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEBEFOREDELETE">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEBEFOREDELETE;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEDELETEFAILED">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEDELETEFAILED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_FILEDELETED">
             <summary>
            scnNotification->nmhdr.code = NPPN_FILEDELETED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = BufferID;
             </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_DARKMODECHANGED">
            <summary>
            To notify plugins that Dark Mode was enabled/disabled
            scnNotification->nmhdr.code = NPPN_DARKMODECHANGED;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = 0;
            </summary>
            <remarks>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/1eb5b10e41d7ab92b60aa32b28d4fe7739d15b53">8.4.1</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_CMDLINEPLUGINMSG">
            <summary>
            To notify plugins that the new argument for plugins (via '-pluginMessage="YOUR_PLUGIN_ARGUMENT"' in command line) is available
            scnNotification->nmhdr.code = NPPN_CMDLINEPLUGINMSG;
            scnNotification->nmhdr.hwndFrom = hwndNpp;
            scnNotification->nmhdr.idFrom = pluginMessage; //where pluginMessage is pointer of type wchar_t
            </summary>
            <remarks>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/0f8d5724afb0a540e8b4024252945ab60bc88c71">8.4.2</a>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_EXTERNALLEXERBUFFER">
            <summary>
             To notify lexer plugins that the buffer (in idFrom) is just applied to a external lexer
             scnNotification->nmhdr.code = NPPN_EXTERNALLEXERBUFFER;
             scnNotification->nmhdr.hwndFrom = hwndNpp;
             scnNotification->nmhdr.idFrom = BufferID; //where pluginMessage is pointer of type wchar_t
            </summary>
             <remarks>
             Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/03a5c4795b764fa5e719092da0c37fc66ec82889">8.5</a>
             </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_GLOBALMODIFIED">
            <summary>
            To notify plugins that the current document is just modified by Replace All action.<br/>
            For solving the performance issue (from v8.6.4), Notepad++ doesn't trigger SCN_MODIFIED during Replace All action anymore.<br/>
            As a result, the plugins which monitor SCN_MODIFIED should also monitor NPPN_GLOBALMODIFIED.<br/>
            scnNotification->nmhdr.code = NPPN_GLOBALMODIFIED;<br/>
            scnNotification->nmhdr.hwndFrom = BufferID;<br/>
            scnNotification->nmhdr.idFrom = 0; // preserved for the future use, must be zero
            </summary>
            <remarks>
            <strong>This notification is implemented in Notepad++
            <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/49e6957d486c360e05ba85ceb1c179a891831779">v8.6.5</a></strong>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.NppMsg.NPPN_NATIVELANGCHANGED">
            <summary>
            To notify plugins that the current native language is just changed to another one.<br/>
            Use <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETNATIVELANGFILENAME"/> to get current native language file name.<br/>
            Use <see cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_GETMENUHANDLE"/>(NPPPLUGINMENU, 0) to get submenu "Plugins" handle (HMENU)<br/>
            scnNotification->nmhdr.code = NPPN_NATIVELANGCHANGED;<br/>
            scnNotification->nmhdr.hwndFrom = hwndNpp;<br/>
            scnNotification->nmhdr.idFrom = 0; // preserved for the future use, must be zero
            </summary>
            <remarks>
            Added in <a href="https://github.com/notepad-plus-plus/notepad-plus-plus/commit/446cc980e871d04885f13055bb56acee820636c8">8.7</a>
            </remarks>
        </member>
        <member name="T:Npp.DotNet.Plugin.NotepadPPGateway">
            <summary>
            This class holds helpers for sending messages defined in the Msgs_h.cs file. It is at the moment
            incomplete. Please help fill in the blanks.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.GetCurrentFilePath">
            <summary>
            Gets the path of the current document.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.GetString(Npp.DotNet.Plugin.NppMsg)">
            <summary>
            This method incapsulates a common pattern in the Notepad++ API: when
            you need to retrieve a string, you can first query the buffer size.
            This method queries the necessary buffer size, allocates the temporary
            memory, then returns the string retrieved through that buffer.
            </summary>
            <param name="message">Message ID of the data string to query.</param>
            <returns>String returned by Notepad++.</returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.GetNppPath">
            <returns>The path to the Notepad++ executable.</returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.GetPluginConfigPath">
            <returns>The path to the Config folder for plugins.</returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.OpenFile(System.String)">
            <summary>
            Open a file for editing in Notepad++, pretty much like using the app's
            File - Open menu.
            </summary>
            <param name="path">The path to the file to open.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.GetFilePath(System.UIntPtr)">
            <summary>
            Gets the path of the current document.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.SaveCurrentFile">
            <summary>
            open a standard save file dialog to save the current file<br></br>
            Returns true if the file was saved
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.GetConfigDirectory">
            <summary>
            Figure out default N++ config file path<br></br>
            Path is usually -&gt; .\Users\&lt;username&gt;\AppData\Roaming\Notepad++\plugins\config\
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.GetNppVersion">
            <returns>
            3-int tuple: (major, minor, bugfix)<br></br>
            Thus GetNppVersion() would return (8, 5, 0) for version 8.5.0
            and (7, 7, 1) for version 7.7.1
            </returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.NotepadPPGateway.SetStatusBarSection(System.String,Npp.DotNet.Plugin.StatusBarSection)">
            <summary>
            the status bar is the bar at the bottom with the document type, EOL type, current position, line, etc.<br></br>
            Set the message for one of the sections of that bar.
            </summary>
            <param name="message"></param>
            <param name="section"></param>
        </member>
        <member name="T:Npp.DotNet.Plugin.NotepadPPGateway.NppResource">
            <summary>
            This class holds helpers for sending messages defined in the Resource_h.cs file. It is at the moment
            incomplete. Please help fill in the blanks.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.MenuCmdId.IDM_FILEMENU_LASTONE">
            <summary>To be updated if new menu item(s) is (are) added in menu "File" </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.NamespaceDoc">
            <summary>
            Most of the types defined here were extracted from <see href="https://github.com/kbilsted/NotepadPlusPlusPluginPack.Net"/>
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.PluginData">
            <summary>
            A container of static, globally visible data.
            </summary>
        </member>
        <member name="P:Npp.DotNet.Plugin.PluginData.PluginNamePtr">
            <summary>
            Provides global access to an allocated pointer to the plugin's name string.
            Plugins can deallocate it by setting this property to <see cref="F:System.IntPtr.Zero"/>.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.ToolbarIconDarkMode">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_ADDTOOLBARICON_FORDARKMODE"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.ToolbarIconDarkMode.HToolbarBmp">
            <summary>
            Standard 16x16 bitmap
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.ToolbarIconDarkMode.HToolbarIcon">
            <summary>
            Fluent UI 32x32 icon for light mode
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.ToolbarIconDarkMode.HToolbarIconDarkMode">
            <summary>
            Fluent UI 32x32 icon for dark mode
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.ToolbarIcon">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_ADDTOOLBARICON_DEPRECATED"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.ToolbarIcon.HToolbarBmp">
            <inheritdoc cref="F:Npp.DotNet.Plugin.ToolbarIconDarkMode.HToolbarBmp"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.ToolbarIcon.HToolbarIcon">
            <inheritdoc cref="F:Npp.DotNet.Plugin.ToolbarIconDarkMode.HToolbarIcon"/>
        </member>
        <member name="T:Npp.DotNet.Plugin.SessionInfo">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_SAVESESSION"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.SessionInfo.SessionFilePathName">
            <summary>
            Full session file path name to be saved
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SessionInfo.NumFiles">
            <summary>
            Size of "files" array - number of files to be saved in session
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SessionInfo.Files">
            <summary>
            Array of file name (full path) to be saved in session
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.CommunicationInfo">
            <inheritdoc cref="F:Npp.DotNet.Plugin.NppMsg.NPPM_MSGTOPLUGIN"/>
        </member>
        <member name="F:Npp.DotNet.Plugin.CommunicationInfo.InternalMsg">
            <summary>
            Integer code defined by plugin Y, known by plugin X, identifying the message being sent.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.CommunicationInfo.SrcModuleName">
            <summary>
            The complete module name (with the extension '.dll') of caller (plugin X).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.CommunicationInfo.Info">
            <summary>
            Defined by the plugin; the information to be exchanged between X and Y.
            It's a void pointer so it should be defined by plugin Y and known by plugin X.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.PluginFunc">
            <summary>
            The general type of a function defined by the plugin and callable by the host application.
            Delegates of this type are associated with a menu item by assigning them to the <see cref="F:Npp.DotNet.Plugin.FuncItem.PFunc"/> member
            of a <see cref="T:Npp.DotNet.Plugin.FuncItem"/> structure.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.SciMsg">
            <summary>Definitions for Scintilla 5.5.2</summary>
            <remarks>Autogenerated 2024-08-22</remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ADDTEXT">
            <summary>
            SCI_ADDTEXT(position length, const char *text)<br/>
            This inserts the first length characters from the string text at the current position. This will
            include any 0's in the string that you might have expected to stop the insert operation. The current position is
            set at the end of the inserted text, but it is not scrolled into view.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ADDSTYLEDTEXT">
            <summary>
            SCI_ADDSTYLEDTEXT(position length, cell *c)<br/>
            This behaves just like SCI_ADDTEXT, but inserts styled text.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INSERTTEXT">
            <summary>
            SCI_INSERTTEXT(position pos, const char *text)<br/>
            This inserts the zero terminated text string at position pos or at the current position if pos is -1. If
            the current position is after the insertion point then it is moved along with its surrounding text but no scrolling
            is performed.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CHANGEINSERTION">
            <summary>
            SCI_CHANGEINSERTION(position length, const char *text)<br/>
            This may only be called from a SC_MOD_INSERTCHECK notification handler and will change the text being inserted to that
            provided.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_DELETERANGE">
            <summary>
            SCI_DELETERANGE(position start, position lengthDelete)<br/>
            Deletes a range of text in the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLENGTH">
            <summary>
            SCI_GETLENGTH -&gt; position<br/>
            Both these messages return the length of the document in bytes.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCHARAT">
            <summary>
            SCI_GETCHARAT(position pos) -&gt; int<br/>
            This returns the character at pos in the document or 0 if pos is negative or past the end of the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCURRENTPOS">
            <summary>
            SCI_GETCURRENTPOS -&gt; position<br/>
            This returns the current position.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETANCHOR">
            <summary>
            SCI_GETANCHOR -&gt; position<br/>
            This returns the current anchor position.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSTYLEAT">
            <summary>
            SCI_GETSTYLEAT(position pos) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSTYLEINDEXAT">
            <summary>
            SCI_GETSTYLEINDEXAT(position pos) -&gt; int<br/>
            This returns the style at pos in the document, or 0 if pos is negative or past the end of the document.
            SCI_GETSTYLEAT may return a negative number for styles over 127 whereas SCI_GETSTYLEINDEXAT will only return
            positive numbers. SCI_GETSTYLEINDEXAT should be preferred as it handles styles more consistently and may avoid
            problems with lexers that define more than 128 styles.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETUNDOCOLLECTION">
            <summary>
            SCI_SETUNDOCOLLECTION(bool collectUndo)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSTYLEDTEXT">
            <summary>
            SCI_GETSTYLEDTEXT(&lt;unused&gt;, Sci_TextRange *tr) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSTYLEDTEXTFULL">
            <summary>
            SCI_GETSTYLEDTEXTFULL(&lt;unused&gt;, Sci_TextRangeFull *tr) -&gt; position<br/>
            This collects styled text into a buffer using two bytes for each cell, with the character at the lower address of
            each pair and the style byte at the upper address. Characters between the positions cpMin and cpMax are
            copied to lpstrText (see struct Sci_TextRange and struct Sci_TextRangeFull in Scintilla.h ). Two 0
            bytes are added to the end of the text, so the buffer that lpstrText points at must be at least
            2*(cpMax-cpMin)+2 bytes long. No check is made for sensible values of cpMin or cpMax. Positions outside
            the document return character codes and style bytes of 0.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CANREDO">
            <summary>
            SCI_CANREDO -&gt; bool<br/>
            SCI_REDO undoes the effect of the last SCI_UNDO operation.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERLINEFROMHANDLE">
            <summary>
            SCI_MARKERLINEFROMHANDLE(int markerHandle) -&gt; line<br/>
            The markerHandle argument is an identifier for a marker returned by SCI_MARKERADD. This function searches
            the document for the marker with this handle and returns the line number that contains it or -1 if it is not found.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERDELETEHANDLE">
            <summary>
            SCI_MARKERDELETEHANDLE(int markerHandle)<br/>
            The markerHandle argument is an identifier for a marker returned by SCI_MARKERADD. This function searches
            the document for the marker with this handle and deletes the marker if it is found.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERHANDLEFROMLINE">
            <summary>
            SCI_MARKERHANDLEFROMLINE(line line, int which) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERNUMBERFROMLINE">
            <summary>
            SCI_MARKERNUMBERFROMLINE(line line, int which) -&gt; int<br/>
            These messages returns the Nth marker handle or marker number in a given line. Handles are returned by
            SCI_MARKERADD. If which is greater or equal to the number of markers on a line, this returns -1;
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETUNDOCOLLECTION">
            <summary>
            SCI_GETUNDOCOLLECTION -&gt; bool<br/>
            You can control whether Scintilla collects undo information with SCI_SETUNDOCOLLECTION. Pass in true (1) to
            collect information and false (0) to stop collecting. If you stop collection, you should also use
            SCI_EMPTYUNDOBUFFER to avoid the undo buffer being unsynchronized with the data in the buffer.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETVIEWWS">
            <summary>
            SCI_GETVIEWWS -&gt; int<br/>
            White space can be made visible which may be useful for languages in which white space is significant, such as
            Python. Space characters appear as small centred dots and tab characters as light arrows pointing to the right.
            There are also ways to control the display of end of line characters. The two messages set and get the white
            space display mode. The viewWS argument can be one of:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETVIEWWS">
            <summary>
            SCI_SETVIEWWS(int viewWS)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTABDRAWMODE">
            <summary>
            SCI_GETTABDRAWMODE -&gt; int<br/>
            These two messages get and set how tab characters are drawn when white space is visible. The tabDrawMode
            argument can be one of:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTABDRAWMODE">
            <summary>
            SCI_SETTABDRAWMODE(int tabDrawMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POSITIONFROMPOINT">
            <summary>
            SCI_POSITIONFROMPOINT(int x, int y) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POSITIONFROMPOINTCLOSE">
            <summary>
            SCI_POSITIONFROMPOINTCLOSE(int x, int y) -&gt; position<br/>
            SCI_POSITIONFROMPOINT finds the closest character position to a point and SCI_POSITIONFROMPOINTCLOSE is
            similar but returns -1 if the point is outside the window or not close to any characters.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GOTOLINE">
            <summary>
            SCI_GOTOLINE(line line)<br/>
            This removes any selection and sets the caret at the start of line number line and scrolls the view (if needed)
            to make it visible. The anchor position is set the same as the current position. If line is outside the lines
            in the document (first line is 0), the line set is the first or last.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GOTOPOS">
            <summary>
            SCI_GOTOPOS(position caret)<br/>
            This removes any selection, sets the caret at caret and scrolls the view to make the caret visible, if
            necessary. It is equivalent to SCI_SETSEL(caret, caret). The anchor position is set the same as the current
            position.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETANCHOR">
            <summary>
            SCI_SETANCHOR(position anchor)<br/>
            This sets the anchor position and creates a selection between the anchor position and the current position. The
            caret is not scrolled into view.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCURLINE">
            <summary>
            SCI_GETCURLINE(position length, char *text NUL-terminated) -&gt; position<br/>
            This retrieves the text of the line containing the caret and returns the position within the line of the caret.
            Pass in char* text pointing at a buffer large enough to hold the text you wish to retrieve and a terminating
            NUL(0) character. Set length to the length of the buffer not including the terminating NUL character.
            If the text argument is NULL(0) then the length that should be allocated to store the entire current line is
            returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETENDSTYLED">
            <summary>
            SCI_GETENDSTYLED -&gt; position<br/>
            Scintilla keeps a record of the last character that is likely to be styled correctly. This is moved forwards when
            characters after it are styled and moved backwards if changes are made to the text of the document before it.
            Before drawing text, this position is checked to see if any styling is needed and, if so, a SCN_STYLENEEDED
            notification message is sent to the container. The container can send SCI_GETENDSTYLED to work out where it
            needs to start styling. Scintilla will always ask to style whole lines.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CONVERTEOLS">
            <summary>
            SCI_CONVERTEOLS(int eolMode)<br/>
            This message changes all the end of line characters in the document to match eolMode. Valid values are: SC_EOL_CRLF
            (0), SC_EOL_CR (1), or SC_EOL_LF (2).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETEOLMODE">
            <summary>
            SCI_GETEOLMODE -&gt; int<br/>
            SCI_SETEOLMODE sets the characters that are added into the document when the user presses the Enter key. You can
            set eolMode to one of SC_EOL_CRLF (0), SC_EOL_CR (1), or SC_EOL_LF (2). The SCI_GETEOLMODE
            message retrieves the current state.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETEOLMODE">
            <summary>
            SCI_SETEOLMODE(int eolMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STARTSTYLING">
            <summary>
            SCI_STARTSTYLING(position start, int unused)<br/>
            This prepares for styling by setting the styling position start to start at. The unused argument was used in
            earlier versions but is now ignored. After SCI_STARTSTYLING, send multiple SCI_SETSTYLING messages
            for each lexical entity to style or send SCI_SETSTYLINGEX to style in blocks.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSTYLING">
            <summary>
            SCI_SETSTYLING(position length, int style)<br/>
            This message sets the style of length characters starting at the styling position and then increases the styling
            position by length, ready for the next call. SCI_STARTSTYLING should be called before the first call to
            this.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETBUFFEREDDRAW">
            <summary>
            SCI_GETBUFFEREDDRAW -&gt; bool<br/>
            These messages turn buffered drawing on or off and report the buffered drawing state. Buffered drawing draws each
            line into a bitmap rather than directly to the screen and then copies the bitmap to the screen. This avoids
            flickering although it does take longer. The default is for drawing to be buffered on Win32 and GTK and to not be
            buffered on Cocoa and Qt. Buffered drawing is not supported on Cocoa.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETBUFFEREDDRAW">
            <summary>
            SCI_SETBUFFEREDDRAW(bool buffered)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTABWIDTH">
            <summary>
            SCI_SETTABWIDTH(int tabWidth)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTABWIDTH">
            <summary>
            SCI_GETTABWIDTH -&gt; int<br/>
            SCI_SETTABWIDTH sets the size of a tab as a multiple of the size of a space character in STYLE_DEFAULT. The
            default tab width is 8 characters. There are no limits on tab sizes, but values less than 1 or large values may
            have undesirable effects.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTABMINIMUMWIDTH">
            <summary>
            SCI_SETTABMINIMUMWIDTH(int pixels)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTABMINIMUMWIDTH">
            <summary>
            SCI_GETTABMINIMUMWIDTH -&gt; int<br/>
            SCI_SETTABMINIMUMWIDTH sets the minimum size of a tab in pixels to ensure that the tab can be seen. The default
            value is 2. This is particularly useful with proportional fonts with fractional widths where the character before
            the tab may end a fraction of a pixel before a tab stop, causing the tab to only be a fraction of a pixel wide
            without this setting. Where displaying a miniaturized version of the document, setting this to 0 may make the
            miniaturized version lay out more like the normal size version.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CLEARTABSTOPS">
            <summary>
            SCI_CLEARTABSTOPS(line line)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ADDTABSTOP">
            <summary>
            SCI_ADDTABSTOP(line line, int x)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETNEXTTABSTOP">
            <summary>
            SCI_GETNEXTTABSTOP(line line, int x) -&gt; int<br/>
            SCI_CLEARTABSTOPS clears explicit tabstops on a line. SCI_ADDTABSTOP adds an explicit tabstop at the
            specified distance from the left (in pixels), and SCI_GETNEXTTABSTOP gets the next explicit tabstop position
            set after the given x position, or zero if there aren't any. Changing tab stops produces a
            SC_MOD_CHANGETABSTOPS notification.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCODEPAGE">
            <summary>
            SCI_SETCODEPAGE(int codePage)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFONTLOCALE">
            <summary>
            SCI_SETFONTLOCALE(&lt;unused&gt;, const char *localeName)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETFONTLOCALE">
            <summary>
            SCI_GETFONTLOCALE(&lt;unused&gt;, char *localeName NUL-terminated) -&gt; int<br/>
            These messages set the locale used for font selection with language-dependent glyphs. It may, depending on
            platform and other circumstances influence the display of text, so setting "zh-Hant" may result in traditional
            Chinese display and "zh-Hans" may result in simplified Chinese display. It is currently only implemented for Win32
            using DirectWrite where the value is passed as the localeName argument to CreateTextFormat. The default value is
            US English "en-us".
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETIMEINTERACTION">
            <summary>
            SCI_GETIMEINTERACTION -&gt; int<br/>
            When entering text in Chinese, Japanese, or Korean an Input Method Editor (IME) may be displayed. The IME may be
            an extra window appearing above Scintilla or may be displayed by Scintilla itself as text. On some platforms there
            is a choice between the two techniques. A windowed IME SC_IME_WINDOWED (0) may be more similar in appearance
            and behaviour to the IME in other applications. An inline IME SC_IME_INLINE (1) may work better with
            some Scintilla features such as rectangular and multiple selection, with IME interactions such as retrieve-
            surrounding or reconversion feature.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETIMEINTERACTION">
            <summary>
            SCI_SETIMEINTERACTION(int imeInteraction)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERDEFINE">
            <summary>
            SCI_MARKERDEFINE(int markerNumber, int markerSymbol)<br/>
            This message associates a marker number in the range 0 to 31 with one of the marker symbols or an ASCII character.
            The general-purpose marker symbols currently available are: SC_MARK_CIRCLE, SC_MARK_ROUNDRECT ,
            SC_MARK_ARROW, SC_MARK_SMALLRECT, SC_MARK_SHORTARROW, SC_MARK_EMPTY ,
            SC_MARK_ARROWDOWN, SC_MARK_MINUS, SC_MARK_PLUS, SC_MARK_ARROWS, SC_MARK_DOTDOTDOT ,
            SC_MARK_BACKGROUND, SC_MARK_LEFTRECT, SC_MARK_FULLRECT, SC_MARK_BOOKMARK ,
            SC_MARK_VERTICALBOOKMARK, SC_MARK_UNDERLINE, and SC_MARK_BAR .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETFORE">
            <summary>
            SCI_MARKERSETFORE(int markerNumber, colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETBACK">
            <summary>
            SCI_MARKERSETBACK(int markerNumber, colour back)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETBACKSELECTED">
            <summary>
            SCI_MARKERSETBACKSELECTED(int markerNumber, colour back)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETFORETRANSLUCENT">
            <summary>
            SCI_MARKERSETFORETRANSLUCENT(int markerNumber, colouralpha fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETBACKTRANSLUCENT">
            <summary>
            SCI_MARKERSETBACKTRANSLUCENT(int markerNumber, colouralpha back)<br/>
            These messages set the foreground and background colour of a marker number. The TRANSLUCENT variants can define
            different degrees of opacity.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETBACKSELECTEDTRANSLUCENT">
            <summary>
            SCI_MARKERSETBACKSELECTEDTRANSLUCENT(int markerNumber, colouralpha back)<br/>
            This message sets the highlight background colour of a marker number when its folding block is selected. The default
            colour is #FF0000.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETSTROKEWIDTH">
            <summary>
            SCI_MARKERSETSTROKEWIDTH(int markerNumber, int hundredths)<br/>
            This message sets the stroke width used to draw the marker in hundredths of a pixel. The default value is 100
            indicating a single pixel wide line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERENABLEHIGHLIGHT">
            <summary>
            SCI_MARKERENABLEHIGHLIGHT(bool enabled)<br/>
            This message allows to enable/disable the highlight folding block when it is selected. (i.e. block that contains the
            caret)
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERADD">
            <summary>
            SCI_MARKERADD(line line, int markerNumber) -&gt; int<br/>
            This message adds marker number markerNumber to a line. The message returns -1 if this fails (illegal line
            number, out of memory) or it returns a marker handle number that identifies the added marker. You can use this
            returned handle with SCI_MARKERLINEFROMHANDLE to find where a marker is after moving or combining lines
            and with SCI_MARKERDELETEHANDLE to delete the marker based on its handle. The message does not check the
            value of markerNumber, nor does it check if the line already contains the marker.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERDELETE">
            <summary>
            SCI_MARKERDELETE(line line, int markerNumber)<br/>
            This searches the given line number for the given marker number and deletes it if it is present. If you added the
            same marker more than once to the line, this will delete one copy each time it is used. If you pass in a marker
            number of -1, all markers are deleted from the line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERDELETEALL">
            <summary>
            SCI_MARKERDELETEALL(int markerNumber)<br/>
            This removes markers of the given number from all lines. If markerNumber is -1, it deletes all markers from all
            lines.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERGET">
            <summary>
            SCI_MARKERGET(line line) -&gt; int<br/>
            This returns a 32-bit integer that indicates which markers were present on the line. Bit 0 is set if marker 0 is
            present, bit 1 for marker 1 and so on.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERNEXT">
            <summary>
            SCI_MARKERNEXT(line lineStart, int markerMask) -&gt; line<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERPREVIOUS">
            <summary>
            SCI_MARKERPREVIOUS(line lineStart, int markerMask) -&gt; line<br/>
            These messages search efficiently for lines that include a given set of markers. The search starts at line number
            lineStart and continues forwards to the end of the file( SCI_MARKERNEXT) or backwards to the start of the
            file( SCI_MARKERPREVIOUS ). The markerMask argument should have one bit set for each marker you wish to
            find. Set bit 0 to find marker 0, bit 1 for marker 1 and so on. The message returns the line number of the first
            line that contains one of the markers in markerMask or -1 if no marker is found.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERDEFINEPIXMAP">
            <summary>
            SCI_MARKERDEFINEPIXMAP(int markerNumber, const char *pixmap)<br/>
            Markers can be set to pixmaps with this message. The XPM format is used for the pixmap. Pixmaps use the
            SC_MARK_PIXMAP marker symbol.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERADDSET">
            <summary>
            SCI_MARKERADDSET(line line, int markerSet)<br/>
            This message can add one or more markers to a line with a single call, specified in the same "one-bit-per-marker" 32-bit
            integer format returned by SCI_MARKERGET (and used by the mask-based marker search functions
            SCI_MARKERNEXT and SCI_MARKERPREVIOUS ). As with SCI_MARKERADD, no check is made to see if
            any of the markers are already present on the targeted line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETALPHA">
            <summary>
            SCI_MARKERSETALPHA(int markerNumber, alpha alpha)<br/>
            When markers are drawn in the content area, either because there is no margin for them or they are of
            SC_MARK_BACKGROUND or SC_MARK_UNDERLINE types, they may be drawn translucently over text or opaquely on the
            base layer. The layer to draw on is defined by SCI_MARKERSETLAYER. The degree of translucency can be
            chosen by setting an alpha value. This is only for the content area- in margins, translucency is achieved through
            the SCI_MARKERSET…TRANSLUCENT methods. The layer argument can be one of:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERGETLAYER">
            <summary>
            SCI_MARKERGETLAYER(int markerNumber) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSETLAYER">
            <summary>
            SCI_MARKERSETLAYER(int markerNumber, int layer)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINTYPEN">
            <summary>
            SCI_SETMARGINTYPEN(int margin, int marginType)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINTYPEN">
            <summary>
            SCI_GETMARGINTYPEN(int margin) -&gt; int<br/>
            These two routines set and get the type of a margin. The margin argument should be 0, 1, 2, 3 or 4. You can use the
            predefined constants SC_MARGIN_SYMBOL (0) and SC_MARGIN_NUMBER (1) to set a margin as either a line number
            or a symbol margin. A margin with application defined text may use SC_MARGIN_TEXT (4) or SC_MARGIN_RTEXT
            (5) to right justify the text. By convention, margin 0 is used for line numbers and the next two are used for
            symbols. You can also use the constants SC_MARGIN_BACK (2), SC_MARGIN_FORE (3), and SC_MARGIN_COLOUR
            (6) for symbol margins that set their background colour to match the STYLE_DEFAULT background and foreground
            colours or a specified colour.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINWIDTHN">
            <summary>
            SCI_SETMARGINWIDTHN(int margin, int pixelWidth)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINWIDTHN">
            <summary>
            SCI_GETMARGINWIDTHN(int margin) -&gt; int<br/>
            These routines set and get the width of a margin in pixels. A margin with zero width is invisible. By default,
            Scintilla sets margin 1 for symbols with a width of 16 pixels, so this is a reasonable guess if you are not sure
            what would be appropriate. Line number margins widths should take into account the number of lines in the document
            and the line number style. You could use something like SCI_TEXTWIDTH(STYLE_LINENUMBER, "_99999") to get a
            suitable width.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINMASKN">
            <summary>
            SCI_SETMARGINMASKN(int margin, int mask)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINMASKN">
            <summary>
            SCI_GETMARGINMASKN(int margin) -&gt; int<br/>
            The mask is a 32-bit value. Each bit corresponds to one of 32 logical symbols that can be displayed in a margin
            that is enabled for symbols. There is a useful constant, SC_MASK_FOLDERS (0xFE000000 or -33554432), that is a mask
            for the 7 logical symbols used to denote folding, and another, SC_MASK_HISTORY (0x01E00000 or 31457280),
            that is a mask for the 4 logical symbols used to denote change history. You can assign a wide range of symbols and
            colours to each of the 32 logical symbols, see Markers for more information. If (mask &amp;
            SC_MASK_FOLDERS)==0, the margin background colour is controlled by style 33( STYLE_LINENUMBER ).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINSENSITIVEN">
            <summary>
            SCI_SETMARGINSENSITIVEN(int margin, bool sensitive)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINSENSITIVEN">
            <summary>
            SCI_GETMARGINSENSITIVEN(int margin) -&gt; bool<br/>
            Each of the five margins can be set sensitive or insensitive to mouse clicks. A click in a sensitive margin sends a
            SCN_MARGINCLICK or SCN_MARGINRIGHTCLICK notification to the container. Margins that are not sensitive act as
            selection margins which make it easy to select ranges of lines. By default, all margins are insensitive.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINCURSORN">
            <summary>
            SCI_SETMARGINCURSORN(int margin, int cursor)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINCURSORN">
            <summary>
            SCI_GETMARGINCURSORN(int margin) -&gt; int<br/>
            A reversed arrow cursor is normally shown over all margins. This may be changed to a normal arrow with
            SCI_SETMARGINCURSORN(margin, SC_CURSORARROW) or restored to a reversed arrow with
            SCI_SETMARGINCURSORN(margin, SC_CURSORREVERSEARROW) .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINBACKN">
            <summary>
            SCI_SETMARGINBACKN(int margin, colour back)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINBACKN">
            <summary>
            SCI_GETMARGINBACKN(int margin) -&gt; colour<br/>
            A margin of type SC_MARGIN_COLOUR may have its colour set with SCI_SETMARGINBACKN .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINS">
            <summary>
            SCI_SETMARGINS(int margins)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINS">
            <summary>
            SCI_GETMARGINS -&gt; int<br/>
            Allocate the number of margins or find the number of margins currently allocated.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETFORE">
            <summary>
            SCI_STYLESETFORE(int style, colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETBACK">
            <summary>
            SCI_STYLESETBACK(int style, colour back)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETBOLD">
            <summary>
            SCI_STYLESETBOLD(int style, bool bold)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETITALIC">
            <summary>
            SCI_STYLESETITALIC(int style, bool italic)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETSIZE">
            <summary>
            SCI_STYLESETSIZE(int style, int sizePoints)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETFONT">
            <summary>
            SCI_STYLESETFONT(int style, const char *fontName)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETEOLFILLED">
            <summary>
            SCI_STYLESETEOLFILLED(int style, bool eolFilled)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETUNDERLINE">
            <summary>
            SCI_STYLESETUNDERLINE(int style, bool underline)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETFORE">
            <summary>
            SCI_STYLEGETFORE(int style) -&gt; colour<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETBACK">
            <summary>
            SCI_STYLEGETBACK(int style) -&gt; colour<br/>
            Text is drawn in the foreground colour. The space in each character cell that is not occupied by the character is
            drawn in the background colour.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETBOLD">
            <summary>
            SCI_STYLEGETBOLD(int style) -&gt; bool<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETITALIC">
            <summary>
            SCI_STYLEGETITALIC(int style) -&gt; bool<br/>
            These messages (plus SCI_STYLESETCHARACTERSET) set the font attributes that are used to match the fonts you
            request to those available.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETSIZE">
            <summary>
            SCI_STYLEGETSIZE(int style) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETFONT">
            <summary>
            SCI_STYLEGETFONT(int style, char *fontName NUL-terminated) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETEOLFILLED">
            <summary>
            SCI_STYLEGETEOLFILLED(int style) -&gt; bool<br/>
            If the last character in the line has a style with this attribute set, the remainder of the line up to the right
            edge of the window is filled with the background colour set for the last character. This is useful when a document
            contains embedded sections in another language such as HTML pages with embedded JavaScript. By setting eolFilled
            to true and a consistent background colour (different from the background colour set for the HTML styles)
            to all JavaScript styles then JavaScript sections will be easily distinguished from HTML.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETUNDERLINE">
            <summary>
            SCI_STYLEGETUNDERLINE(int style) -&gt; bool<br/>
            You can set a style to be underlined. The underline is drawn in the foreground colour. All characters with a style
            that includes the underline attribute are underlined, even if they are white space.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETCASE">
            <summary>
            SCI_STYLEGETCASE(int style) -&gt; int<br/>
            The value of caseVisible determines how text is displayed. You can set upper case( SC_CASE_UPPER, 1) or
            lower case( SC_CASE_LOWER, 2) or camel case( SC_CASE_CAMEL, 3) or display normally( SC_CASE_MIXED, 0).
            This does not change the stored text, only how it is displayed.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETCHARACTERSET">
            <summary>
            SCI_STYLEGETCHARACTERSET(int style) -&gt; int<br/>
            You can set a style to use a different character set than the default. The places where such characters sets are
            likely to be useful are comments and literal strings. For example, SCI_STYLESETCHARACTERSET(SCE_C_STRING,
            SC_CHARSET_RUSSIAN) would ensure that strings in Russian would display correctly in C and C++( SCE_C_STRING
            is the style number used by the C and C++ lexer to display literal strings; it has the value 6). This feature
            works differently on Windows and GTK. The default character set is SC_CHARSET_DEFAULT .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETVISIBLE">
            <summary>
            SCI_STYLEGETVISIBLE(int style) -&gt; bool<br/>
            Text is normally visible. However, you can completely hide it by giving it a style with the visible set to 0. This
            could be used to hide embedded formatting instructions or hypertext keywords in HTML or XML. Invisible text
            may not be deleted by user actions but the application may delete invisible text by calling SCI_DELETERANGE .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETCHANGEABLE">
            <summary>
            SCI_STYLEGETCHANGEABLE(int style) -&gt; bool<br/>
            This is an experimental and incompletely implemented style attribute. The default setting is changeable set true
            but when set false it makes text read-only. The user can not move the caret within not-changeable text and not-
            changeable text may not be deleted by the user. The application may delete not-changeable text by calling
            SCI_DELETERANGE .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETHOTSPOT">
            <summary>
            SCI_STYLEGETHOTSPOT(int style) -&gt; bool<br/>
            This style is used to mark ranges of text that can detect mouse clicks. The cursor changes to a hand over hotspots,
            and the foreground, and background colours may change and an underline appear to indicate that these areas are
            sensitive to clicking. This may be used to allow hyperlinks to other documents.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETCASE">
            <summary>
            SCI_STYLESETCASE(int style, int caseVisible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETSIZEFRACTIONAL">
            <summary>
            SCI_STYLESETSIZEFRACTIONAL(int style, int sizeHundredthPoints)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETSIZEFRACTIONAL">
            <summary>
            SCI_STYLEGETSIZEFRACTIONAL(int style) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETWEIGHT">
            <summary>
            SCI_STYLESETWEIGHT(int style, int weight)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETWEIGHT">
            <summary>
            SCI_STYLEGETWEIGHT(int style) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETCHARACTERSET">
            <summary>
            SCI_STYLESETCHARACTERSET(int style, int characterSet)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETHOTSPOT">
            <summary>
            SCI_STYLESETHOTSPOT(int style, bool hotspot)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETCHECKMONOSPACED">
            <summary>
            SCI_STYLESETCHECKMONOSPACED(int style, bool checkMonospaced)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETCHECKMONOSPACED">
            <summary>
            SCI_STYLEGETCHECKMONOSPACED(int style) -&gt; bool<br/>
            This attribute indicates that the font may be monospaced over the ASCII graphics characters ('' … '~', including
            letters ('a'…'z', 'A'…'Z') and numbers ('0'…'9')). This allows optimizing speed and memory use for some common
            scenarios where documents are mostly composed from ASCII characters.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETSTRETCH">
            <summary>
            SCI_STYLESETSTRETCH(int style, int stretch)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETSTRETCH">
            <summary>
            SCI_STYLEGETSTRETCH(int style) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETINVISIBLEREPRESENTATION">
            <summary>
            SCI_STYLESETINVISIBLEREPRESENTATION(int style, const char *representation)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLEGETINVISIBLEREPRESENTATION">
            <summary>
            SCI_STYLEGETINVISIBLEREPRESENTATION(int style, char *representation NUL-terminated) -&gt; int<br/>
            When a style is made invisible with SCI_STYLESETVISIBLE, text is difficult to edit as the cursor can be at both
            sides of the invisible text segment. With these messages invisible text segements can be made visible with a single
            UTF8 characater giving the user an indication if the cursor is left or right of the invisible text. The character is
            displayed using the current style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_LIST">
            <summary>
            SC_ELEMENT_LIST : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_LIST_BACK">
            <summary>
            SC_ELEMENT_LIST_BACK : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_LIST_SELECTED">
            <summary>
            SC_ELEMENT_LIST_SELECTED : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_LIST_SELECTED_BACK">
            <summary>
            SC_ELEMENT_LIST_SELECTED_BACK : colouralpha<br/>
            The colours used for autocompletion lists may be customised on Win32 using SCI_SETELEMENTCOLOUR .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_TEXT">
            <summary>
            SC_ELEMENT_SELECTION_TEXT : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_BACK">
            <summary>
            SC_ELEMENT_SELECTION_BACK : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_ADDITIONAL_TEXT">
            <summary>
            SC_ELEMENT_SELECTION_ADDITIONAL_TEXT : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_ADDITIONAL_BACK">
            <summary>
            SC_ELEMENT_SELECTION_ADDITIONAL_BACK : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_SECONDARY_TEXT">
            <summary>
            SC_ELEMENT_SELECTION_SECONDARY_TEXT : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_SECONDARY_BACK">
            <summary>
            SC_ELEMENT_SELECTION_SECONDARY_BACK : colouralpha<br/>
            On Unix systems running with the X window system or Wayland there is a 'primary selection' which is the text most
            recently selected in any application and which can be pasted by a middle button click. When working with a
            selection, it is commonly the primary selection so Scintilla draws the primary selection with the main and additional
            colours defined earlier. When another application takes over the primary selection, these _SECONDARY colours are
            used. They are commonly defined as grey to highlight that it is the selection in the other application that is now
            available as primary.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_INACTIVE_TEXT">
            <summary>
            SC_ELEMENT_SELECTION_INACTIVE_TEXT : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_INACTIVE_BACK">
            <summary>
            SC_ELEMENT_SELECTION_INACTIVE_BACK : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_INACTIVE_ADDITIONAL_TEXT">
            <summary>
            SC_ELEMENT_SELECTION_INACTIVE_ADDITIONAL_TEXT : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_SELECTION_INACTIVE_ADDITIONAL_BACK">
            <summary>
            SC_ELEMENT_SELECTION_INACTIVE_ADDITIONAL_BACK : colouralpha<br/>
            When a window no longer has the keyboard focus, it is customary to make its selection less noticeable by colouring it
            grey. These elements define the colours to be used for selections without focus. When the ADDITIONAL elements
            are not set then the standard values are used: SC_ELEMENT_SELECTION_INACTIVE_ADDITIONAL_TEXT -&gt;
            SC_ELEMENT_SELECTION_INACTIVE_TEXT and SC_ELEMENT_SELECTION_INACTIVE_ADDITIONAL_BACK -&gt;
            SC_ELEMENT_SELECTION_INACTIVE_BACK .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_CARET">
            <summary>
            SC_ELEMENT_CARET : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_CARET_ADDITIONAL">
            <summary>
            SC_ELEMENT_CARET_ADDITIONAL : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_CARET_LINE_BACK">
            <summary>
            SC_ELEMENT_CARET_LINE_BACK : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_WHITE_SPACE">
            <summary>
            SC_ELEMENT_WHITE_SPACE : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_WHITE_SPACE_BACK">
            <summary>
            SC_ELEMENT_WHITE_SPACE_BACK : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_HOT_SPOT_ACTIVE">
            <summary>
            SC_ELEMENT_HOT_SPOT_ACTIVE : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_HOT_SPOT_ACTIVE_BACK">
            <summary>
            SC_ELEMENT_HOT_SPOT_ACTIVE_BACK : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_FOLD_LINE">
            <summary>
            SC_ELEMENT_FOLD_LINE : colouralpha<br/>
            In addition to showing markers in the folding margin, you can indicate folds to the user by drawing lines in the
            text area. The lines are drawn in the SC_ELEMENT_FOLD_LINE colour if set. If it is not set then the
            foreground colour set for STYLE_DEFAULT is used. Bits set in flags determine where folding lines are
            drawn:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_ELEMENT_HIDDEN_LINE">
            <summary>
            SC_ELEMENT_HIDDEN_LINE : colouralpha<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETELEMENTCOLOUR">
            <summary>
            SCI_SETELEMENTCOLOUR(int element, colouralpha colourElement)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETELEMENTCOLOUR">
            <summary>
            SCI_GETELEMENTCOLOUR(int element) -&gt; colouralpha<br/>
            This changes the colour of the indicated visual element overriding any current colour. If the element supports
            translucency, then the alpha portion of the value is used. An opaque alpha value (0xff) should always be included
            when an opaque colour is desired as the value 0 is completely transparent and thus invisible.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_RESETELEMENTCOLOUR">
            <summary>
            SCI_RESETELEMENTCOLOUR(int element)<br/>
            This removes the element colour returning to the default colour or set of colours.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETELEMENTISSET">
            <summary>
            SCI_GETELEMENTISSET(int element) -&gt; bool<br/>
            Returns true when an element colour has been set. When false indicates that a default colour or set of colours is
            displayed.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETELEMENTALLOWSTRANSLUCENT">
            <summary>
            SCI_GETELEMENTALLOWSTRANSLUCENT(int element) -&gt; bool<br/>
            Returns true when the element currently allows translucent drawing when an alpha component is included. This may
            change based on circumstances- different platforms or graphics technologies may implement translucency and newer
            versions of Scintilla may implement translucency for elements that did not previously support it.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETELEMENTBASECOLOUR">
            <summary>
            SCI_GETELEMENTBASECOLOUR(int element) -&gt; colouralpha<br/>
            Returns the default colour of an element. This may be a value defined by Scintilla or it may be derived from the
            operating system or platform. Which values are set from the operating system may differ between operating systems
            and operating system versions. When undefined the return value is 0 which is equivalent to completely transparent
            black. These colours may be useful when defining styles with similarities such as synthesizing dark mode
            styles that use the same colours as the system
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELFORE">
            <summary>
            SCI_SETSELFORE(bool useSetting, colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELBACK">
            <summary>
            SCI_SETSELBACK(bool useSetting, colour back)<br/>
            You can choose to override the default selection colouring with these elements and messages. The element APIs
            are now preferred as they handle translucency+ layering and cooperation with defaults better. With the
            messages, the colour you provide is used if you set useSetting to true. If it is set to false, the
            default styled colouring is used and the fore or back argument has no effect.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELALPHA">
            <summary>
            SCI_GETSELALPHA -&gt; int<br/>
            These APIs are now discouraged and should be replaced with a combination of setting the layer with
            SCI_SETSELECTIONLAYER and setting translucency through the SC_ELEMENT_SELECTION_BACK element.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELALPHA">
            <summary>
            SCI_SETSELALPHA( alpha alpha)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELEOLFILLED">
            <summary>
            SCI_GETSELEOLFILLED -&gt; bool<br/>
            The selection can be drawn up to the right hand border by setting this property.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELEOLFILLED">
            <summary>
            SCI_SETSELEOLFILLED(bool filled)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONLAYER">
            <summary>
            SCI_GETSELECTIONLAYER -&gt; int<br/>
            The selection background can be drawn translucently over the text or opaquely on the base layer. The layer
            argument can be one of:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONLAYER">
            <summary>
            SCI_SETSELECTIONLAYER(int layer)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINELAYER">
            <summary>
            SCI_GETCARETLINELAYER -&gt; int<br/>
            You can choose to make the background colour of the line containing the caret different by setting the
            SC_ELEMENT_CARET_LINE_BACK element with SCI_SETELEMENTCOLOUR(SC_ELEMENT_CARET_LINE_BACK). This effect
            may be drawn translucently over the text or opaquely on the base layer with SCI_SETCARETLINELAYER. Background
            colouring has highest priority when a line has markers that would otherwise change the background colour. When
            drawn translucently other background colours can show through. The layer argument can be one of:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINELAYER">
            <summary>
            SCI_SETCARETLINELAYER(int layer)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEHIGHLIGHTSUBLINE">
            <summary>
            SCI_GETCARETLINEHIGHLIGHTSUBLINE -&gt; bool<br/>
            Choose to highlight only the subline containing the caret instead of the whole line. Default behaviour
            SCI_SETCARETLINEHIGHLIGHTSUBLINE(false) the whole caret line is highlighted.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINEHIGHLIGHTSUBLINE">
            <summary>
            SCI_SETCARETLINEHIGHLIGHTSUBLINE(bool subLine)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETFORE">
            <summary>
            SCI_SETCARETFORE( colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ASSIGNCMDKEY">
            <summary>
            SCI_ASSIGNCMDKEY(int keyDefinition , int sciCommand)<br/>
            This assigns the given key definition to a Scintilla command identified by sciCommand. sciCommand can be any
            SCI_* command that has no arguments.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CLEARCMDKEY">
            <summary>
            SCI_CLEARCMDKEY(int keyDefinition )<br/>
            This makes the given key definition do nothing by assigning the action SCI_NULL to it.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSTYLINGEX">
            <summary>
            SCI_SETSTYLINGEX(position length, const char *styles)<br/>
            As an alternative to SCI_SETSTYLING, which applies the same style to each byte, you can use this message which
            specifies the styles for each of length bytes from the styling position and then increases the styling position
            by length, ready for the next call. SCI_STARTSTYLING should be called before the first call to this.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETVISIBLE">
            <summary>
            SCI_STYLESETVISIBLE(int style, bool visible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETPERIOD">
            <summary>
            SCI_GETCARETPERIOD -&gt; int<br/>
            The rate at which the caret blinks can be set with SCI_SETCARETPERIOD which determines the time in milliseconds
            that the caret is visible or invisible before changing state. Setting the period to 0 stops the caret blinking. The
            default value is 500 milliseconds. SCI_GETCARETPERIOD returns the current setting.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETPERIOD">
            <summary>
            SCI_SETCARETPERIOD(int periodMilliseconds)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWORDCHARS">
            <summary>
            SCI_SETWORDCHARS(&lt;unused&gt;, const char *characters)<br/>
            This message defines which characters are members of the word category. The character categories are set to
            default values before processing this function. For example, if you don't allow '_' in your set of characters
            use: SCI_SETWORDCHARS(0, "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") ;
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETWORDCHARS">
            <summary>
            SCI_GETWORDCHARS(&lt;unused&gt;, char *characters) -&gt; int<br/>
            This fills the characters parameter with all the characters included in words. The characters parameter
            must be large enough to hold all of the characters. If the characters parameter is 0 then the length that
            should be allocated to store the entire set is returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCHARACTERCATEGORYOPTIMIZATION">
            <summary>
            SCI_SETCHARACTERCATEGORYOPTIMIZATION(int countCharacters)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCHARACTERCATEGORYOPTIMIZATION">
            <summary>
            SCI_GETCHARACTERCATEGORYOPTIMIZATION -&gt; int<br/>
            Optimize speed of character category features like determining whether a character is a space or number at the expense
            of memory. Mostly used for Unicode documents. The countCharacters parameter determines how many
            character starting from 0 are added to a look-up table with one byte used for each character. It is reasonable to
            cover the set of characters likely to be used in a document so 0x100 for simple Roman text, 0x1000 to cover most
            simple alphabets, 0x10000 to cover most of East Asian languages, and 0x110000 to cover all possible characters.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETUNDOSEQUENCE">
            <summary>
            SCI_GETUNDOSEQUENCE -&gt; int<br/>
            Determine if an undo sequence is active with a positive value indicating that a sequence is active and 0 that there is
            no current sequence. The value returned is the nesting depth of the sequence, that is, the number of times
            SCI_BEGINUNDOACTION was called without a correspnding SCI_ENDUNDOACTION. A negative value indicates an
            error.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETSTYLE">
            <summary>
            SCI_INDICSETSTYLE(int indicator, int indicatorStyle)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETSTYLE">
            <summary>
            SCI_INDICGETSTYLE(int indicator) -&gt; int<br/>
            These two messages set and get the style for a particular indicator. The indicator styles currently available are:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETFORE">
            <summary>
            SCI_INDICSETFORE(int indicator, colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETFORE">
            <summary>
            SCI_INDICGETFORE(int indicator) -&gt; colour<br/>
            These two messages set and get the colour used to draw an indicator. The default indicator colours are equivalent
            to: SCI_INDICSETFORE(0, 0x007f00); (dark green) SCI_INDICSETFORE(1, 0xff0000); (light blue)
            SCI_INDICSETFORE(2, 0x0000ff); (light red)
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETUNDER">
            <summary>
            SCI_INDICSETUNDER(int indicator, bool under)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETUNDER">
            <summary>
            SCI_INDICGETUNDER(int indicator) -&gt; bool<br/>
            These two messages set and get whether an indicator is drawn under text or over(default). Drawing under text does
            not work with the deprecated single phase drawing mode.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETHOVERSTYLE">
            <summary>
            SCI_INDICSETHOVERSTYLE(int indicator, int indicatorStyle)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETHOVERSTYLE">
            <summary>
            SCI_INDICGETHOVERSTYLE(int indicator) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETHOVERFORE">
            <summary>
            SCI_INDICSETHOVERFORE(int indicator, colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETHOVERFORE">
            <summary>
            SCI_INDICGETHOVERFORE(int indicator) -&gt; colour<br/>
            These messages set and get the colour and style used to draw indicators when the mouse is over them or the caret moved
            into them. The mouse cursor also changes when an indicator is drawn in hover style. The default is for the
            hover appearance to be the same as the normal appearance and calling SCI_INDICSETFORE or SCI_INDICSETSTYLE will
            also reset the hover attribute.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETFLAGS">
            <summary>
            SCI_INDICSETFLAGS(int indicator, int flags)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETFLAGS">
            <summary>
            SCI_INDICGETFLAGS(int indicator) -&gt; int<br/>
            These messages set and get the flags associated with an indicator. There is currently one flag defined,
            SC_INDICFLAG_VALUEFORE: when this flag is set the colour used by the indicator is not from the indicator's fore
            setting but instead from the value of the indicator at that point in the file. SC_INDICFLAG_NONE is the
            default. This allows many colours to be displayed for a single indicator. The value is an RGB integer colour
            that has been ored with SC_INDICVALUEBIT (0x1000000) when calling SCI_SETINDICATORVALUE. To find the
            colour from the value, and the value with SC_INDICVALUEMASK (0xFFFFFF).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETSTROKEWIDTH">
            <summary>
            SCI_INDICSETSTROKEWIDTH(int indicator, int hundredths)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETSTROKEWIDTH">
            <summary>
            SCI_INDICGETSTROKEWIDTH(int indicator) -&gt; int<br/>
            These two messages set and get the stroke width used to draw an indicator in hundredths of a pixel. The default
            value is 100 indicating a width of one pixel. Some indicator styles do not support setting stroke width, generally
            where it makes no sense( INDIC_POINT) or wasn't simple( INDIC_SQUIGGLEPIXMAP ). The indicators
            supporting stroke width are: INDIC_PLAIN, INDIC_SQUIGGLE, INDIC_TT, INDIC_DIAGONAL ,
            INDIC_STRIKE, INDIC_BOX, INDIC_ROUNDBOX, INDIC_STRAIGHTBOX, INDIC_FULLBOX, INDIC_DASH ,
            INDIC_DOTS, INDIC_SQUIGGLELOW .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWHITESPACEFORE">
            <summary>
            SCI_SETWHITESPACEFORE(bool useSetting, colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWHITESPACEBACK">
            <summary>
            SCI_SETWHITESPACEBACK(bool useSetting, colour back)<br/>
            By default, the colour of visible white space is determined by the lexer in use. The foreground and/or background
            colour of all visible white space can be set globally, overriding the lexer's colours with SC_ELEMENT_WHITE_SPACE
            and SC_ELEMENT_WHITE_SPACE_BACK. . SCI_SETWHITESPACEFORE and SCI_SETWHITESPACEBACK also change the
            white space colours but the element APIs are preferred with SC_ELEMENT_WHITE_SPACE allowing translucency.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWHITESPACESIZE">
            <summary>
            SCI_SETWHITESPACESIZE(int size)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETWHITESPACESIZE">
            <summary>
            SCI_GETWHITESPACESIZE -&gt; int<br/>
            SCI_SETWHITESPACESIZE sets the size of the dots used for mark space characters. The SCI_GETWHITESPACESIZE
            message retrieves the current size. The value 0 is valid and makes the dots invisible.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETLINESTATE">
            <summary>
            SCI_SETLINESTATE(line line, int state)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINESTATE">
            <summary>
            SCI_GETLINESTATE(line line) -&gt; int<br/>
            As well as the 8 bits of lexical state stored for each character there is also an integer stored for each line.
            This can be used for longer lived parse states such as what the current scripting language is in an ASP page. Use
            SCI_SETLINESTATE to set the integer value and SCI_GETLINESTATE to get the value. Changing the value
            produces a SC_MOD_CHANGELINESTATE notification.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMAXLINESTATE">
            <summary>
            SCI_GETMAXLINESTATE -&gt; int<br/>
            This returns the last line that has any line state. This has been made less useful by an optimization that always
            allocates for all lines if any line's state was set. It can still distinguish cases where line state was never set
            for any lines.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEVISIBLE">
            <summary>
            SCI_GETCARETLINEVISIBLE -&gt; bool<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINEVISIBLE">
            <summary>
            SCI_SETCARETLINEVISIBLE(bool show)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEBACK">
            <summary>
            SCI_GETCARETLINEBACK -&gt; colour<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINEBACK">
            <summary>
            SCI_SETCARETLINEBACK( colour back)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEFRAME">
            <summary>
            SCI_GETCARETLINEFRAME -&gt; int<br/>
            SCI_SETCARETLINEFRAME can be used to display the caret line framed instead of filling the whole
            background. Set width != 0 to enable this option and width= 0 to disable it.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINEFRAME">
            <summary>
            SCI_SETCARETLINEFRAME(int width)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_STYLESETCHANGEABLE">
            <summary>
            SCI_STYLESETCHANGEABLE(int style, bool changeable)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSHOW">
            <summary>
            SCI_AUTOCSHOW(position lengthEntered, const char *itemList)<br/>
            This message causes a list to be displayed. lengthEntered is the number of characters of the word already
            entered and itemList is the list of words separated by separator characters. The initial separator character is
            a space but this can be set or got with SCI_AUTOCSETSEPARATOR and SCI_AUTOCGETSEPARATOR .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCACTIVE">
            <summary>
            SCI_AUTOCACTIVE -&gt; bool<br/>
            This message returns non-zero if there is an active autocompletion list and zero if there is not.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCPOSSTART">
            <summary>
            SCI_AUTOCPOSSTART -&gt; position<br/>
            This returns the value of the current position when SCI_AUTOCSHOW started display of the list.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSTOPS">
            <summary>
            SCI_AUTOCSTOPS(&lt;unused&gt;, const char *characterSet)<br/>
            The characterSet argument is a string containing a list of characters that will automatically cancel the
            autocompletion list. When you start the editor, this list is empty.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETSEPARATOR">
            <summary>
            SCI_AUTOCSETSEPARATOR(int separatorCharacter)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETSEPARATOR">
            <summary>
            SCI_AUTOCGETSEPARATOR -&gt; int<br/>
            These two messages set and get the separator character used to separate words in the SCI_AUTOCSHOW list. The default
            is the space character.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSELECT">
            <summary>
            SCI_AUTOCSELECT(&lt;unused&gt;, const char *select)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETCANCELATSTART">
            <summary>
            SCI_AUTOCSETCANCELATSTART(bool cancel)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETCANCELATSTART">
            <summary>
            SCI_AUTOCGETCANCELATSTART -&gt; bool<br/>
            The default behaviour is for the list to be cancelled if the caret moves to the location it was at when the list
            was displayed. By calling this message with a false argument, the list is not cancelled until the caret moves at
            least one character before the word being completed.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETFILLUPS">
            <summary>
            SCI_AUTOCSETFILLUPS(&lt;unused&gt;, const char *characterSet)<br/>
            If a fillup character is typed with an autocompletion list active, the currently selected item in the list is added
            into the document, then the fillup character is added. Common fillup characters are '(', '[' and '.' but others are
            possible depending on the language. By default, no fillup characters are set.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETCHOOSESINGLE">
            <summary>
            SCI_AUTOCSETCHOOSESINGLE(bool chooseSingle)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETCHOOSESINGLE">
            <summary>
            SCI_AUTOCGETCHOOSESINGLE -&gt; bool<br/>
            If you use SCI_AUTOCSETCHOOSESINGLE(1) and a list has only one item, it is automatically added and no list is
            displayed. The default is to display the list even if there is only a single item.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETIGNORECASE">
            <summary>
            SCI_AUTOCSETIGNORECASE(bool ignoreCase)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETIGNORECASE">
            <summary>
            SCI_AUTOCGETIGNORECASE -&gt; bool<br/>
            By default, matching of characters to list members is case sensitive. These messages let you set and get case
            sensitivity.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_USERLISTSHOW">
            <summary>
            SCI_USERLISTSHOW(int listType, const char *itemList)<br/>
            The listType parameter is returned to the container as the wParam field of the SCNotification
            structure. It must be greater than 0 as this is how Scintilla tells the difference between an autocompletion list
            and a user list. If you have different types of list, for example a list of buffers and a list of macros, you can
            use listType to tell which one has returned a selection.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETAUTOHIDE">
            <summary>
            SCI_AUTOCSETAUTOHIDE(bool autoHide)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETAUTOHIDE">
            <summary>
            SCI_AUTOCGETAUTOHIDE -&gt; bool<br/>
            By default, the list is cancelled if there are no viable matches (the user has typed characters that no longer
            match a list entry). If you want to keep displaying the original list, set autoHide to false. This also
            effects SCI_AUTOCSELECT .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETOPTIONS">
            <summary>
            SCI_AUTOCSETOPTIONS(int options)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETOPTIONS">
            <summary>
            SCI_AUTOCGETOPTIONS -&gt; int<br/>
            Set options for autocompletion from the following list.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETDROPRESTOFWORD">
            <summary>
            SCI_AUTOCSETDROPRESTOFWORD(bool dropRestOfWord)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETDROPRESTOFWORD">
            <summary>
            SCI_AUTOCGETDROPRESTOFWORD -&gt; bool<br/>
            When an item is selected, any word characters following the caret are first erased if dropRestOfWord is set true .
            The default is false .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_REGISTERIMAGE">
            <summary>
            SCI_REGISTERIMAGE(int type, const char *xpmData)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETTYPESEPARATOR">
            <summary>
            SCI_AUTOCGETTYPESEPARATOR -&gt; int<br/>
            Autocompletion list items may display an image as well as text. Each image is first registered with an integer
            type. Then this integer is included in the text of the list separated by a '?' from the text. For example,
            "fclose?2 fopen" displays image 2 before the string "fclose" and no image before "fopen". The images are in
            either the XPM format( SCI_REGISTERIMAGE) or RGBA format( SCI_REGISTERRGBAIMAGE ). For
            SCI_REGISTERRGBAIMAGE the width and height must previously been set with the SCI_RGBAIMAGESETWIDTH and
            SCI_RGBAIMAGESETHEIGHT messages. The set of registered images can be cleared with SCI_CLEARREGISTEREDIMAGES
            and the '?' separator changed with SCI_AUTOCSETTYPESEPARATOR .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETTYPESEPARATOR">
            <summary>
            SCI_AUTOCSETTYPESEPARATOR(int separatorCharacter)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETMAXWIDTH">
            <summary>
            SCI_AUTOCSETMAXWIDTH(int characterCount)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETMAXWIDTH">
            <summary>
            SCI_AUTOCGETMAXWIDTH -&gt; int<br/>
            Get or set the maximum width of an autocompletion list expressed as the number of characters in the longest item that
            will be totally visible. If zero (the default) then the list's width is calculated to fit the item with the most
            characters. Any items that cannot be fully displayed within the available width are indicated by the presence of
            ellipsis.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETMAXHEIGHT">
            <summary>
            SCI_AUTOCSETMAXHEIGHT(int rowCount)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETMAXHEIGHT">
            <summary>
            SCI_AUTOCGETMAXHEIGHT -&gt; int<br/>
            Get or set the maximum number of rows that will be visible in an autocompletion list. If there are more rows in the
            list, then a vertical scrollbar is shown. The default is 5.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETSTYLE">
            <summary>
            SCI_AUTOCSETSTYLE(int style)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETSTYLE">
            <summary>
            SCI_AUTOCGETSTYLE -&gt; int<br/>
            Get or set the style used by autocompletion lists to determine the font facename, size and character set used to display
            characters. Defaults to STYLE_DEFAULT. Always call SCI_ALLOCATEEXTENDEDSTYLES(1) before SCI_AUTOCSETSTYLE
            and use the result as the argument to SCI_AUTOCSETSTYLE and SCI_STYLESETFONT and others.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETINDENT">
            <summary>
            SCI_SETINDENT(int indentSize)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETINDENT">
            <summary>
            SCI_GETINDENT -&gt; int<br/>
            SCI_SETINDENT sets the size of indentation in terms of the width of a space in STYLE_DEFAULT. If you set a width
            of 0, the indent size is the same as the tab size. There are no limits on indent sizes, but values less than 0
            or large values may have undesirable effects.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETUSETABS">
            <summary>
            SCI_SETUSETABS(bool useTabs)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETUSETABS">
            <summary>
            SCI_GETUSETABS -&gt; bool<br/>
            SCI_SETUSETABS determines whether indentation should be created out of a mixture of tabs and spaces or be based
            purely on spaces. Set useTabs to false (0) to create all tabs and indents out of spaces. The default is
            true. You can use SCI_GETCOLUMN to get the column of a position taking the width of a tab into account.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETLINEINDENTATION">
            <summary>
            SCI_SETLINEINDENTATION(line line, int indentation)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINEINDENTATION">
            <summary>
            SCI_GETLINEINDENTATION(line line) -&gt; int<br/>
            The amount of indentation on a line can be discovered and set with SCI_GETLINEINDENTATION and
            SCI_SETLINEINDENTATION. The indentation is measured in character columns, which correspond to the width of space
            characters.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINEINDENTPOSITION">
            <summary>
            SCI_GETLINEINDENTPOSITION(line line) -&gt; position<br/>
            This returns the position at the end of indentation of a line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCOLUMN">
            <summary>
            SCI_GETCOLUMN(position pos) -&gt; position<br/>
            This message returns the column number of a position pos within the document taking the width of tabs into
            account. This returns the column number of the last tab on the line before pos, plus the number of characters
            between the last tab and pos. If there are no tab characters on the line, the return value is the number of
            characters up to the position on the line. In both cases, double byte characters count as a single character. This
            is probably only useful with monospaced fonts.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_COUNTCHARACTERS">
            <summary>
            SCI_COUNTCHARACTERS(position start, position end) -&gt; position<br/>
            Returns the number of whole characters between two positions.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_COUNTCODEUNITS">
            <summary>
            SCI_COUNTCODEUNITS(position start, position end) -&gt; position<br/>
            These are the UTF-16 versions of SCI_POSITIONRELATIVE and SCI_COUNTCHARACTERS working in terms of UTF-16
            code units.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETHSCROLLBAR">
            <summary>
            SCI_SETHSCROLLBAR(bool visible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETHSCROLLBAR">
            <summary>
            SCI_GETHSCROLLBAR -&gt; bool<br/>
            The horizontal scroll bar is only displayed if it is needed for the assumed width. If you never wish to see it,
            call SCI_SETHSCROLLBAR(0). Use SCI_SETHSCROLLBAR(1) to enable it again. SCI_GETHSCROLLBAR returns the
            current state. The default state is to display it when needed.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETINDENTATIONGUIDES">
            <summary>
            SCI_SETINDENTATIONGUIDES(int indentView)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETINDENTATIONGUIDES">
            <summary>
            SCI_GETINDENTATIONGUIDES -&gt; int<br/>
            Indentation guides are dotted vertical lines that appear within indentation white space every indent size columns.
            They make it easy to see which constructs line up especially when they extend over multiple pages. Style
            STYLE_INDENTGUIDE (37) is used to specify the foreground and background colour of the indentation guides.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETHIGHLIGHTGUIDE">
            <summary>
            SCI_SETHIGHLIGHTGUIDE(position column)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETHIGHLIGHTGUIDE">
            <summary>
            SCI_GETHIGHLIGHTGUIDE -&gt; position<br/>
            When brace highlighting occurs, the indentation guide corresponding to the braces may be highlighted with the brace
            highlighting style, STYLE_BRACELIGHT (34). Set column to 0 to cancel this highlight.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINEENDPOSITION">
            <summary>
            SCI_GETLINEENDPOSITION(line line) -&gt; position<br/>
            This returns the position at the end of the line, before any line end characters. If line is the last line in
            the document (which does not have any end of line characters) or greater, the result is the size of the document.
            If line is negative the result is undefined.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCODEPAGE">
            <summary>
            SCI_GETCODEPAGE -&gt; int<br/>
            Scintilla supports UTF-8, Japanese, Chinese and Korean DBCS along with single byte encodings like Latin-1. UTF-8 (
            SC_CP_UTF8) is the default. Use this message with codePage set to the code page number to set Scintilla to
            use code page information to ensure multiple byte characters are treated as one character rather than multiple.
            This also stops the caret from moving between the bytes in a multi-byte character. Do not use this message to
            choose between different single byte character sets- use SCI_STYLESETCHARACTERSET. Call with codePage
            set to zero to disable multi-byte support.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETFORE">
            <summary>
            SCI_GETCARETFORE -&gt; colour<br/>
            The colour of the caret can be set with SCI_SETELEMENTCOLOUR(SC_ELEMENT_CARET) or SCI_SETCARETFORE and
            retrieved with SCI_GETELEMENTCOLOUR(SC_ELEMENT_CARET) or SCI_GETCARETFORE. The element APIs
            are preferred and allow setting the translucency of carets.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETREADONLY">
            <summary>
            SCI_GETREADONLY -&gt; bool<br/>
            These messages set and get the read-only flag for the document. If you mark a document as read only, attempts to
            modify the text cause the SCN_MODIFYATTEMPTRO notification.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCURRENTPOS">
            <summary>
            SCI_SETCURRENTPOS(position caret)<br/>
            This sets the current position and creates a selection between the anchor and the current position. The caret is
            not scrolled into view.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONSTART">
            <summary>
            SCI_SETSELECTIONSTART(position anchor)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONSTART">
            <summary>
            SCI_GETSELECTIONSTART -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONEND">
            <summary>
            SCI_SETSELECTIONEND(position caret)<br/>
            These set the selection based on the assumption that the anchor position is less than the current position. They do
            not make the caret visible. The table shows the positions of the anchor and the current position after using these
            messages.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONEND">
            <summary>
            SCI_GETSELECTIONEND -&gt; position<br/>
            These return the start and end of the selection without regard to which end is the current position and which is
            the anchor. SCI_GETSELECTIONSTART returns the smaller of the current position or the anchor position.
            SCI_GETSELECTIONEND returns the larger of the two values.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETEMPTYSELECTION">
            <summary>
            SCI_SETEMPTYSELECTION(position caret)<br/>
            This removes any selection and sets the caret at caret. The caret is not scrolled into view.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETPRINTMAGNIFICATION">
            <summary>
            SCI_SETPRINTMAGNIFICATION(int magnification)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPRINTMAGNIFICATION">
            <summary>
            SCI_GETPRINTMAGNIFICATION -&gt; int<br/>
            SCI_GETPRINTMAGNIFICATION lets you to print at a different size than the screen font. magnification is the
            number of points to add to the size of each screen font. A value of -3 or -4 gives reasonably small print. You can
            get this value with SCI_GETPRINTMAGNIFICATION .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETPRINTCOLOURMODE">
            <summary>
            SCI_SETPRINTCOLOURMODE(int mode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPRINTCOLOURMODE">
            <summary>
            SCI_GETPRINTCOLOURMODE -&gt; int<br/>
            These two messages set and get the method used to render coloured text on a printer that is probably using white
            paper. It is especially important to consider the treatment of colour if you use a dark or black screen background.
            Printing white on black uses up toner and ink very many times faster than the other way around. You can set the
            mode to one of:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FINDTEXT">
            <summary>
            SCI_FINDTEXT(int searchFlags, Sci_TextToFind *ft) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FINDTEXTFULL">
            <summary>
            SCI_FINDTEXTFULL(int searchFlags, Sci_TextToFindFull *ft) -&gt; position<br/>
            These messages search for text in the document. They do not use or move the current selection. The searchFlags
            argument controls the search type, which includes regular expression searches.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FORMATRANGE">
            <summary>
            SCI_FORMATRANGE(bool draw, Sci_RangeToFormat *fr) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FORMATRANGEFULL">
            <summary>
            SCI_FORMATRANGEFULL(bool draw, Sci_RangeToFormatFull *fr) -&gt; position<br/>
            This call renders a range of text into a device context. If you use this for printing, you will probably want to
            arrange a page header and footer; Scintilla does not do this for you. See SciTEWin::Print() in SciTEWinDlg.cxx
            for an example. Each use of this message renders a range of text into a rectangular area and returns the
            position in the document of the next character to print.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCHANGEHISTORY">
            <summary>
            SCI_SETCHANGEHISTORY(int changeHistory)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCHANGEHISTORY">
            <summary>
            SCI_GETCHANGEHISTORY -&gt; int<br/>
            SCI_SETCHANGEHISTORY turns this feature on and off and determines whether changes are visible in the margin or
            text or both.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETFIRSTVISIBLELINE">
            <summary>
            SCI_GETFIRSTVISIBLELINE -&gt; line<br/>
            These messages retrieve and set the line number of the first visible line in the Scintilla view. The first line in
            the document is numbered 0. The value is a visible line rather than a document line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINE">
            <summary>
            SCI_GETLINE(line line, char *text) -&gt; position<br/>
            This fills the buffer defined by text with the contents of the nominated line (lines start at 0). The buffer is not
            terminated by a NUL(0) character. It is up to you to make sure that the buffer is long enough for the text, use
            SCI_LINELENGTH(line line). The returned value is the number of characters copied to the buffer. The returned text
            includes any end of line characters. If you ask for a line number outside the range of lines in the document, 0
            characters are copied. If the text argument is 0 then the length that should be allocated to store the entire line
            is returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINECOUNT">
            <summary>
            SCI_GETLINECOUNT -&gt; line<br/>
            This returns the number of lines in the document. An empty document contains 1 line. A document holding only an end
            of line sequence has 2 lines.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ALLOCATELINES">
            <summary>
            SCI_ALLOCATELINES(line lines)<br/>
            Allocate line indices to match the lines argument. This is an optimization that can prevent multiple
            reallocations of the indices as text is inserted if the application can estimate the number of lines in the
            document. The number of lines will not be reduced by this call.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINLEFT">
            <summary>
            SCI_SETMARGINLEFT(&lt;unused&gt;, int pixelWidth)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINLEFT">
            <summary>
            SCI_GETMARGINLEFT -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINRIGHT">
            <summary>
            SCI_SETMARGINRIGHT(&lt;unused&gt;, int pixelWidth)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINRIGHT">
            <summary>
            SCI_GETMARGINRIGHT -&gt; int<br/>
            These messages set and get the width of the blank margin on both sides of the text in pixels. The default is to one
            pixel on each side.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMODIFY">
            <summary>
            SCI_GETMODIFY -&gt; bool<br/>
            This returns non-zero if the document is modified and 0 if it is unmodified. The modified status of a document is
            determined by the undo position relative to the save point. The save point is set by SCI_SETSAVEPOINT ,
            usually when you have saved data to a file.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSEL">
            <summary>
            SCI_SETSEL(position anchor, position caret)<br/>
            This message sets both the anchor and the current position. If caret is negative, it means the end of the
            document. If anchor is negative, it means remove any selection (i.e. set the anchor to the same position as
            caret ). The caret is scrolled into view after this operation.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELTEXT">
            <summary>
            SCI_GETSELTEXT(&lt;unused&gt;, char *text NUL-terminated) -&gt; position<br/>
            This copies the currently selected text and a terminating NUL(0) byte to the text buffer. The buffer size should
            be determined by calling with a NULL pointer for the text argument: 1+ SCI_GETSELTEXT(0, NULL). This
            allows for rectangular and discontiguous selections as well as simple selections. See Multiple Selection for
            information on how multiple and rectangular selections and virtual space are copied.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTEXTRANGE">
            <summary>
            SCI_GETTEXTRANGE(&lt;unused&gt;, Sci_TextRange *tr) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTEXTRANGEFULL">
            <summary>
            SCI_GETTEXTRANGEFULL(&lt;unused&gt;, Sci_TextRangeFull *tr) -&gt; position<br/>
            This collects the text between the positions cpMin and cpMax and copies it to lpstrText (see struct
            Sci_TextRange in Scintilla.h ). If cpMax is -1, text is returned to the end of the document. The text
            is 0 terminated, so you must supply a buffer that is at least 1 character longer than the number of characters you
            wish to read. The return value is the length of the returned text not including the terminating 0.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_HIDESELECTION">
            <summary>
            SCI_HIDESELECTION(bool hide)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONHIDDEN">
            <summary>
            SCI_GETSELECTIONHIDDEN -&gt; bool<br/>
            The normal state is to make the selection visible by drawing it as set by SCI_SETSELFORE, SCI_SETSELBACK, and
            related calls. However, if you hide the selection, it is drawn as normal text.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POINTXFROMPOSITION">
            <summary>
            SCI_POINTXFROMPOSITION(&lt;unused&gt;, position pos) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POINTYFROMPOSITION">
            <summary>
            SCI_POINTYFROMPOSITION(&lt;unused&gt;, position pos) -&gt; int<br/>
            These messages return the x and y display pixel location of text at position pos in the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_LINEFROMPOSITION">
            <summary>
            SCI_LINEFROMPOSITION(position pos) -&gt; line<br/>
            This message returns the line that contains the position pos in the document. The return value is 0 if pos
            &lt;= 0. The return value is the last line if pos is beyond the end of the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POSITIONFROMLINE">
            <summary>
            SCI_POSITIONFROMLINE(line line) -&gt; position<br/>
            This returns the document position that corresponds with the start of the line. If line is negative, the position of
            the line holding the start of the selection is returned. If line is greater than the lines in the document, the
            return value is -1. If line is equal to the number of lines in the document (i.e. 1 line past the last
            line), the return value is the end of the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_LINESCROLL">
            <summary>
            SCI_LINESCROLL(position columns, line lines)<br/>
            This will attempt to scroll the display by the number of columns and lines that you specify. Positive line values
            increase the line number at the top of the screen (i.e. they move the text upwards as far as the user is
            concerned), Negative line values do the reverse.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SCROLLRANGE">
            <summary>
            SCI_SCROLLRANGE(position secondary, position primary)<br/>
            Scroll the argument positions and the range between them into view giving priority to the primary position then
            the secondary position. The behaviour is similar to SCI_SCROLLCARET with the primary position used
            instead of the caret. An effort is then made to ensure that the secondary position and range between are also
            visible. This may be used to make a search match visible.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_REPLACESEL">
            <summary>
            SCI_REPLACESEL(&lt;unused&gt;, const char *text)<br/>
            The currently selected text between the anchor and the current position is replaced by the 0 terminated text
            string. If the anchor and current position are the same, the text is inserted at the caret position. The caret is
            positioned after the inserted text and the caret is scrolled into view.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETREADONLY">
            <summary>
            SCI_SETREADONLY(bool readOnly)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CANPASTE">
            <summary>
            SCI_CANPASTE -&gt; bool<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CANUNDO">
            <summary>
            SCI_CANUNDO -&gt; bool<br/>
            SCI_UNDO undoes one action, or if the undo buffer has reached a SCI_ENDUNDOACTION point, all the actions back
            to the corresponding SCI_BEGINUNDOACTION .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTEXT">
            <summary>
            SCI_SETTEXT(&lt;unused&gt;, const char *text)<br/>
            This replaces all the text in the document with the zero terminated text string you pass in.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTEXT">
            <summary>
            SCI_GETTEXT(position length, char *text NUL-terminated) -&gt; position<br/>
            This returns at most length characters of text from the start of the document plus one terminating 0 character.
            When length is beyond document length, it returns document length. To collect all the text in a document, use
            SCI_GETLENGTH to get the number of characters in the document( nLen ), allocate a character buffer of
            length nLen+1 bytes, then call SCI_GETTEXT(nLen, char *text). If the text argument is NULL(0) then the
            length that should be allocated to store the entire document is returned. If you then save the text, you
            should use SCI_SETSAVEPOINT to mark the text as unmodified.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTEXTLENGTH">
            <summary>
            SCI_GETTEXTLENGTH -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETDIRECTFUNCTION">
            <summary>
            SCI_GETDIRECTFUNCTION -&gt; pointer<br/>
            This message returns the address of the function to call to handle Scintilla messages without the overhead of
            passing through the Windows messaging system. You need only call this once, regardless of the number of Scintilla
            windows you create.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETDIRECTSTATUSFUNCTION">
            <summary>
            SCI_GETDIRECTSTATUSFUNCTION -&gt; pointer<br/>
            This is similar to SCI_GETDIRECTFUNCTION but the returned function is of type SciFnDirectStatus which also
            returns the status to the caller through a pointer to an int. This saves performing an extra call to
            retrieve the status in many situations so can be faster.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETDIRECTPOINTER">
            <summary>
            SCI_GETDIRECTPOINTER -&gt; pointer<br/>
            This returns a pointer to data that identifies which Scintilla window is in use. You must call this once for each
            Scintilla window you create. When you call the direct function, you must pass in the direct pointer associated with
            the target window.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETOVERTYPE">
            <summary>
            SCI_SETOVERTYPE(bool overType)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETOVERTYPE">
            <summary>
            SCI_GETOVERTYPE -&gt; bool<br/>
            When overtype is enabled, each typed character replaces the character to the right of the text caret. When overtype
            is disabled, characters are inserted at the caret. SCI_GETOVERTYPE returns true (1) if overtyping is active,
            otherwise false (0) will be returned. Use SCI_SETOVERTYPE to set the overtype mode.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETWIDTH">
            <summary>
            SCI_SETCARETWIDTH(int pixelWidth)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETWIDTH">
            <summary>
            SCI_GETCARETWIDTH -&gt; int<br/>
            The width of the line caret can be set with SCI_SETCARETWIDTH to a value of between 0 and 20 pixels. The default
            width is 1 pixel. You can read back the current width with SCI_GETCARETWIDTH. A width of 0 makes the caret
            invisible, similar to setting the caret style to CARETSTYLE_INVISIBLE (though not interchangeable). This
            setting only affects the width of the cursor when the cursor style is set to line caret mode, it does not affect
            the width for a block caret.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTARGETSTART">
            <summary>
            SCI_SETTARGETSTART(position start)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTARGETSTART">
            <summary>
            SCI_GETTARGETSTART -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTARGETSTARTVIRTUALSPACE">
            <summary>
            SCI_SETTARGETSTARTVIRTUALSPACE(position space)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTARGETSTARTVIRTUALSPACE">
            <summary>
            SCI_GETTARGETSTARTVIRTUALSPACE -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTARGETEND">
            <summary>
            SCI_SETTARGETEND(position end)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTARGETEND">
            <summary>
            SCI_GETTARGETEND -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTARGETENDVIRTUALSPACE">
            <summary>
            SCI_SETTARGETENDVIRTUALSPACE(position space)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTARGETENDVIRTUALSPACE">
            <summary>
            SCI_GETTARGETENDVIRTUALSPACE -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTARGETRANGE">
            <summary>
            SCI_SETTARGETRANGE(position start, position end)<br/>
            These functions set and return the start and end of the target. When searching you can set start greater than end
            to find the last matching text in the target rather than the first matching text. Setting a target position
            with SCI_SETTARGETSTART, SCI_SETTARGETEND, or SCI_SETTARGETRANGE sets the virtual space to 0. The
            target is also set by a successful SCI_SEARCHINTARGET .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTARGETTEXT">
            <summary>
            SCI_GETTARGETTEXT(&lt;unused&gt;, char *text) -&gt; position<br/>
            Retrieve the value in the target.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_REPLACETARGET">
            <summary>
            SCI_REPLACETARGET(position length, const char *text) -&gt; position<br/>
            If length is -1, text is a zero terminated string, otherwise length sets the number of character to
            replace the target with. After replacement, the target range refers to the replacement text. The return value
            is the length of the replacement string. Note that the recommended way to delete text in the document is to set the
            target to the text to be removed, and to perform a replace target with an empty string.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_REPLACETARGETRE">
            <summary>
            SCI_REPLACETARGETRE(position length, const char *text) -&gt; position<br/>
            This replaces the target using regular expressions. If length is -1, text is a zero terminated string,
            otherwise length is the number of characters to use. The replacement string is formed from the text string with
            any sequences of \1 through \9 replaced by tagged matches from the most recent regular expression
            search. \0 is replaced with all the matched text from the most recent search. After replacement, the target
            range refers to the replacement text. The return value is the length of the replacement string.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_REPLACETARGETMINIMAL">
            <summary>
            SCI_REPLACETARGETMINIMAL(position length, const char *text) -&gt; position<br/>
            This is similar to SCI_REPLACETARGET but tries to minimize change history when the current target text shares a
            common prefix or suffix with the replacement. Only the text that is actually different is marked as changed.
            This might be used when automatically reformatting some text so that the whole area formatted doesn't show change
            marks. If length is -1, text is a zero terminated string, otherwise length sets the number of
            character to replace the target with. After replacement, the target range refers to the replacement text. The
            return value is the length of the replacement string. Note that the recommended way to delete text in the document is
            to set the target to the text to be removed, and to perform a replace target with an empty string.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SEARCHINTARGET">
            <summary>
            SCI_SEARCHINTARGET(position length, const char *text) -&gt; position<br/>
            This searches for the first occurrence of a text string in the target defined by SCI_SETTARGETSTART and
            SCI_SETTARGETEND. The text string is not zero terminated; the size is set by length. The search is modified
            by the search flags set by SCI_SETSEARCHFLAGS. If the search succeeds, the target is set to the found text
            and the return value is the position of the start of the matching text. If the search fails, the result is -1.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSEARCHFLAGS">
            <summary>
            SCI_SETSEARCHFLAGS(int searchFlags)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSEARCHFLAGS">
            <summary>
            SCI_GETSEARCHFLAGS -&gt; int<br/>
            These get and set the searchFlags used by SCI_SEARCHINTARGET. There are several option flags including a
            simple regular expression search.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPSHOW">
            <summary>
            SCI_CALLTIPSHOW(position pos, const char *definition)<br/>
            This message starts the process by displaying the call tip window. If a call tip is already active, this has no
            effect. pos is the position in the document at which to align the call tip. The call tip text is aligned to
            start 1 line below this character unless you have included up and/or down arrows in the call tip text in which case
            the tip is aligned to the right-hand edge of the rightmost arrow. The assumption is that you will start the text
            with something like "\001 1 of 3 \002". definition is the call tip text. This can contain multiple lines
            separated by '\n' (Line Feed, ASCII code 10) characters. Do not include '\r' (Carriage Return, ASCII code
            13), as this will most likely print as an empty box. '\t' (Tab, ASCII code 9) is supported if you set a tabsize
            with SCI_CALLTIPUSESTYLE. The position of the caret is remembered here so that the call tip can be cancelled
            automatically if subsequent deletion moves the caret before this position.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPACTIVE">
            <summary>
            SCI_CALLTIPACTIVE -&gt; bool<br/>
            This returns 1 if a call tip is active and 0 if it is not active.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPPOSSTART">
            <summary>
            SCI_CALLTIPPOSSTART -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPSETPOSSTART">
            <summary>
            SCI_CALLTIPSETPOSSTART(position posStart)<br/>
            This message returns or sets the value of the current position when SCI_CALLTIPSHOW started to display the tip.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPSETHLT">
            <summary>
            SCI_CALLTIPSETHLT(position highlightStart, position highlightEnd)<br/>
            This sets the region of the call tips text to display in a highlighted style. highlightStart is the zero-based index
            into the string of the first character to highlight and highlightEnd is the index of the first character after
            the highlight. highlightEnd must be greater than highlightStart; highlightEnd-highlightStart is
            the number of characters to highlight. Highlights can extend over line ends if this is required.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPSETBACK">
            <summary>
            SCI_CALLTIPSETBACK( colour back)<br/>
            The background colour of call tips can be set with this message; the default colour is white. It is not a good idea
            to set a dark colour as the background as the default colour for normal calltip text is mid grey and the default
            colour for highlighted text is dark blue. This also sets the background colour of STYLE_CALLTIP .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPSETFORE">
            <summary>
            SCI_CALLTIPSETFORE( colour fore)<br/>
            The colour of call tip text can be set with this message; the default colour is mid grey. This also sets the
            foreground colour of STYLE_CALLTIP .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPSETFOREHLT">
            <summary>
            SCI_CALLTIPSETFOREHLT( colour fore)<br/>
            The colour of highlighted call tip text can be set with this message; the default colour is dark blue.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPUSESTYLE">
            <summary>
            SCI_CALLTIPUSESTYLE(int tabSize)<br/>
            This message changes the style used for call tips from STYLE_DEFAULT to STYLE_CALLTIP and sets a tab size in
            screen pixels. If tabsize is less than 1, Tab characters are not treated specially. Once this call has been
            used, the call tip foreground and background colours are also taken from the style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CALLTIPSETPOSITION">
            <summary>
            SCI_CALLTIPSETPOSITION(bool above)<br/>
            By default the calltip is displayed below the text, setting above to true (1) will display it above the text.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_VISIBLEFROMDOCLINE">
            <summary>
            SCI_VISIBLEFROMDOCLINE(line docLine) -&gt; line<br/>
            When some lines are hidden and/or annotations are displayed, then a particular line in the document may be
            displayed at a different position to its document position. If no lines are hidden and there are no annotations,
            this message returns docLine. Otherwise, this returns the display line (counting the very first visible line as
            0). The display line of an invisible line is the same as the previous visible line. The display line number of the
            first line in the document is 0. If lines are hidden and docLine is outside the range of lines in the document,
            the return value is -1. Lines can occupy more than one display line if they wrap.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_DOCLINEFROMVISIBLE">
            <summary>
            SCI_DOCLINEFROMVISIBLE(line displayLine) -&gt; line<br/>
            When some lines are hidden and/or annotations are displayed, then a particular line in the document may be
            displayed at a different position to its document position. This message returns the document line number that
            corresponds to a display line (counting the display line of the first line in the document as 0). If displayLine
            is less than or equal to 0, the result is 0. If displayLine is greater than or equal to the number of displayed
            lines, the result is the number of lines in the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_WRAPCOUNT">
            <summary>
            SCI_WRAPCOUNT(line docLine) -&gt; line<br/>
            Document lines can occupy more than one display line if they wrap and this returns the number of display lines
            needed to wrap a document line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFOLDLEVEL">
            <summary>
            SCI_SETFOLDLEVEL(line line, int level)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETFOLDLEVEL">
            <summary>
            SCI_GETFOLDLEVEL(line line) -&gt; int<br/>
            These two messages set and get a 32-bit value that contains the fold level of a line and some flags associated with
            folding. The fold level is a number in the range 0 to SC_FOLDLEVELNUMBERMASK (0x0FFF). However, the initial fold
            level is set to SC_FOLDLEVELBASE (0x400) to allow unsigned arithmetic on folding levels. There are two
            addition flag bits. SC_FOLDLEVELWHITEFLAG indicates that the line is blank and allows it to be treated slightly
            different then its level may indicate. For example, blank lines should generally not be fold points and will be
            considered part of the preceding section even though they may have a lesser fold level.
            SC_FOLDLEVELHEADERFLAG indicates that the line is a header (fold point). SC_FOLDLEVELNONE is a default level
            that may occur before folding.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLASTCHILD">
            <summary>
            SCI_GETLASTCHILD(line line, int level) -&gt; line<br/>
            This message searches for the next line after line, that has a folding level that is less than or equal to
            level and then returns the previous line number. If you set level to -1, level is set to the folding
            level of line line. If from is a fold point, SCI_GETLASTCHILD(from, -1) returns the last line that
            would be in made visible or hidden by toggling the fold state.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETFOLDPARENT">
            <summary>
            SCI_GETFOLDPARENT(line line) -&gt; line<br/>
            This message returns the line number of the first line before line that is marked as a fold point with
            SC_FOLDLEVELHEADERFLAG and has a fold level less than the line. If no line is found, or if the header flags
            and fold levels are inconsistent, the return value is -1.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SHOWLINES">
            <summary>
            SCI_SHOWLINES(line lineStart, line lineEnd)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_HIDELINES">
            <summary>
            SCI_HIDELINES(line lineStart, line lineEnd)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINEVISIBLE">
            <summary>
            SCI_GETLINEVISIBLE(line line) -&gt; bool<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETALLLINESVISIBLE">
            <summary>
            SCI_GETALLLINESVISIBLE -&gt; bool<br/>
            The first two messages mark a range of lines as visible or invisible and then redraw the display. If
            SC_ELEMENT_HIDDEN_LINE is set then a horizontal line is drawn in that colour to indicate that there are hidden
            lines. A fold line drawn in that position overrides the hidden line indicator. SCI_GETLINEVISIBLE reports
            on the visible state of a line and returns 1 if it is visible and 0 if it is not visible.
            SCI_GETALLLINESVISIBLE returns 1 if all lines are visible and 0 if some lines are hidden. These messages
            have no effect on fold levels or fold flags.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFOLDEXPANDED">
            <summary>
            SCI_SETFOLDEXPANDED(line line, bool expanded)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETFOLDEXPANDED">
            <summary>
            SCI_GETFOLDEXPANDED(line line) -&gt; bool<br/>
            These messages set and get the expanded state of a single line. The set message has no effect on the visible state
            of the line or any lines that depend on it. It does change the markers in the folding margin. If you ask for the
            expansion state of a line that is outside the document, the result is false (0).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_TOGGLEFOLD">
            <summary>
            SCI_TOGGLEFOLD(line line)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_TOGGLEFOLDSHOWTEXT">
            <summary>
            SCI_TOGGLEFOLDSHOWTEXT(line line, const char *text)<br/>
            Each fold point may be either expanded, displaying all its child lines, or contracted, hiding all the child lines.
            These messages toggle the folding state of the given line as long as it has the SC_FOLDLEVELHEADERFLAG set.
            These messages take care of folding or expanding all the lines that depend on the line. The display updates after
            this message.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FOLDDISPLAYTEXTSETSTYLE">
            <summary>
            SCI_FOLDDISPLAYTEXTSETSTYLE(int style)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FOLDDISPLAYTEXTGETSTYLE">
            <summary>
            SCI_FOLDDISPLAYTEXTGETSTYLE -&gt; int<br/>
            These message changes the appearance of fold text tags.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETDEFAULTFOLDDISPLAYTEXT">
            <summary>
            SCI_SETDEFAULTFOLDDISPLAYTEXT(&lt;unused&gt;, const char *text)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETDEFAULTFOLDDISPLAYTEXT">
            <summary>
            SCI_GETDEFAULTFOLDDISPLAYTEXT(&lt;unused&gt;, char *text) -&gt; int<br/>
            These messages set and get the default text displayed at the right of the folded text.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FOLDLINE">
            <summary>
            SCI_FOLDLINE(line line, int action)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FOLDCHILDREN">
            <summary>
            SCI_FOLDCHILDREN(line line, int action)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EXPANDCHILDREN">
            <summary>
            SCI_EXPANDCHILDREN(line line, int level)<br/>
            This is used to respond to a change to a line causing its fold level or whether it is a header to change, perhaps
            when adding or removing a '{'.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FOLDALL">
            <summary>
            SCI_FOLDALL(int action)<br/>
            These messages provide a higher-level approach to folding instead of setting expanded flags and showing or hiding
            individual lines.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ENSUREVISIBLE">
            <summary>
            SCI_ENSUREVISIBLE(line line)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETAUTOMATICFOLD">
            <summary>
            SCI_SETAUTOMATICFOLD(int automaticFold)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETAUTOMATICFOLD">
            <summary>
            SCI_GETAUTOMATICFOLD -&gt; int<br/>
            Instead of implementing all the logic for handling folding in the container, Scintilla can provide behaviour that
            is adequate for many applications. The automaticFold argument is a bit set defining which of the 3 pieces of
            folding implementation should be enabled. Most applications should be able to use the SC_AUTOMATICFOLD_SHOW and
            SC_AUTOMATICFOLD_CHANGE flags unless they wish to implement quite different behaviour such as defining their own
            fold structure. SC_AUTOMATICFOLD_CLICK is more likely to be set off when an application would like to add
            or change click behaviour such as showing method headers only when Shift+Alt is used in conjunction with a click.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFOLDFLAGS">
            <summary>
            SCI_SETFOLDFLAGS(int flags)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ENSUREVISIBLEENFORCEPOLICY">
            <summary>
            SCI_ENSUREVISIBLEENFORCEPOLICY(line line)<br/>
            A line may be hidden because more than one of its parent lines is contracted. Both these message travels up the
            fold hierarchy, expanding any contracted folds until they reach the top level. The line will then be visible. If
            you use SCI_ENSUREVISIBLEENFORCEPOLICY, the vertical caret policy set by SCI_SETVISIBLEPOLICY is then
            applied.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTABINDENTS">
            <summary>
            SCI_SETTABINDENTS(bool tabIndents)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTABINDENTS">
            <summary>
            SCI_GETTABINDENTS -&gt; bool<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETBACKSPACEUNINDENTS">
            <summary>
            SCI_SETBACKSPACEUNINDENTS(bool bsUnIndents)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETBACKSPACEUNINDENTS">
            <summary>
            SCI_GETBACKSPACEUNINDENTS -&gt; bool<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMOUSEDWELLTIME">
            <summary>
            SCI_SETMOUSEDWELLTIME(int periodMilliseconds)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMOUSEDWELLTIME">
            <summary>
            SCI_GETMOUSEDWELLTIME -&gt; int<br/>
            These two messages set and get the time the mouse must sit still, in milliseconds, to generate a SCN_DWELLSTART
            notification. If set to SC_TIME_FOREVER, the default, no dwell events are generated.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_WORDSTARTPOSITION">
            <summary>
            SCI_WORDSTARTPOSITION(position pos, bool onlyWordCharacters) -&gt; position<br/>
            These messages return the start and end of words using the same definition of words as used internally within
            Scintilla. You can set your own list of characters that count as words with SCI_SETWORDCHARS. The position sets
            the start or the search, which is forwards when searching for the end and backwards when searching for the start.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_WORDENDPOSITION">
            <summary>
            SCI_WORDENDPOSITION(position pos, bool onlyWordCharacters) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ISRANGEWORD">
            <summary>
            SCI_ISRANGEWORD(position start, position end) -&gt; bool<br/>
            Is the range start..end a word or set of words? This message checks that start is at a word start transition and that
            end is at a word end transition. It does not check whether there are any spaces inside the range.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETIDLESTYLING">
            <summary>
            SCI_SETIDLESTYLING(int idleStyling)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETIDLESTYLING">
            <summary>
            SCI_GETIDLESTYLING -&gt; int<br/>
            By default, SC_IDLESTYLING_NONE (0), syntax styling is performed for all the currently visible text before
            displaying it. On very large files, this may make scrolling down slow. With SC_IDLESTYLING_TOVISIBLE
            (1), a small amount of styling is performed before display and then further styling is performed
            incrementally in the background as an idle-time task. This may result in the text initially appearing uncoloured
            and then, some time later, it is coloured. Text after the currently visible portion may be styled in the
            background with SC_IDLESTYLING_AFTERVISIBLE (2). To style both before and after the visible text in the
            background use SC_IDLESTYLING_ALL (3).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWRAPMODE">
            <summary>
            SCI_SETWRAPMODE(int wrapMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETWRAPMODE">
            <summary>
            SCI_GETWRAPMODE -&gt; int<br/>
            Set wrapMode to SC_WRAP_WORD (1) to enable wrapping on word or style boundaries, SC_WRAP_CHAR (2) to enable
            wrapping between any characters, SC_WRAP_WHITESPACE (3) to enable wrapping on whitespace, and
            SC_WRAP_NONE (0) to disable line wrapping. SC_WRAP_CHAR is preferred for Asian languages where there
            is no white space between words.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWRAPVISUALFLAGS">
            <summary>
            SCI_SETWRAPVISUALFLAGS(int wrapVisualFlags)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETWRAPVISUALFLAGS">
            <summary>
            SCI_GETWRAPVISUALFLAGS -&gt; int<br/>
            You can enable the drawing of visual flags to indicate a line is wrapped. Bits set in wrapVisualFlags
            determine which visual flags are drawn.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWRAPVISUALFLAGSLOCATION">
            <summary>
            SCI_SETWRAPVISUALFLAGSLOCATION(int wrapVisualFlagsLocation)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETWRAPVISUALFLAGSLOCATION">
            <summary>
            SCI_GETWRAPVISUALFLAGSLOCATION -&gt; int<br/>
            You can set whether the visual flags to indicate a line is wrapped are drawn near the border or near the text.
            Bits set in wrapVisualFlagsLocation set the location to near the text for the corresponding visual flag.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWRAPSTARTINDENT">
            <summary>
            SCI_SETWRAPSTARTINDENT(int indent)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETWRAPSTARTINDENT">
            <summary>
            SCI_GETWRAPSTARTINDENT -&gt; int<br/>
            SCI_SETWRAPSTARTINDENT sets the size of indentation of sublines for wrapped lines in terms of the
            average character width in STYLE_DEFAULT. There are no limits on indent sizes, but
            values less than 0 or large values may have undesirable effects. The indention of sublines is
            independent of visual flags, but if SC_WRAPVISUALFLAG_START is set an indent of at least 1 is used.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWRAPINDENTMODE">
            <summary>
            SCI_SETWRAPINDENTMODE(int wrapIndentMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETWRAPINDENTMODE">
            <summary>
            SCI_GETWRAPINDENTMODE -&gt; int<br/>
            Wrapped sublines can be indented to the position of their first subline or one more indent level. The default
            is SC_WRAPINDENT_FIXED. The modes are:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETLAYOUTCACHE">
            <summary>
            SCI_SETLAYOUTCACHE(int cacheMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLAYOUTCACHE">
            <summary>
            SCI_GETLAYOUTCACHE -&gt; int<br/>
            You can set cacheMode to one of the symbols in the table:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSCROLLWIDTH">
            <summary>
            SCI_SETSCROLLWIDTH(int pixelWidth)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSCROLLWIDTH">
            <summary>
            SCI_GETSCROLLWIDTH -&gt; int<br/>
            For performance, Scintilla does not measure the display width of the document to determine the properties of the
            horizontal scroll bar. Instead, an assumed width is used. These messages set and get the document width in pixels
            assumed by Scintilla. The default value is 2000. To ensure the width of the currently visible lines can be
            scrolled use SCI_SETSCROLLWIDTHTRACKING
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSCROLLWIDTHTRACKING">
            <summary>
            SCI_SETSCROLLWIDTHTRACKING(bool tracking)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSCROLLWIDTHTRACKING">
            <summary>
            SCI_GETSCROLLWIDTHTRACKING -&gt; bool<br/>
            If scroll width tracking is enabled then the scroll width is adjusted to ensure that all of the lines currently
            displayed can be completely scrolled. This mode never adjusts the scroll width to be narrower.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_TEXTWIDTH">
            <summary>
            SCI_TEXTWIDTH(int style, const char *text) -&gt; int<br/>
            This returns the pixel width of a string drawn in the given style which can be used, for example, to decide how
            wide to make the line number margin in order to display a given number of numerals.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETENDATLASTLINE">
            <summary>
            SCI_SETENDATLASTLINE(bool endAtLastLine)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETENDATLASTLINE">
            <summary>
            SCI_GETENDATLASTLINE -&gt; bool<br/>
            SCI_SETENDATLASTLINE sets the scroll range so that maximum scroll position has the last line at the bottom of the
            view (default). Setting this to false allows scrolling one page below the last line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_TEXTHEIGHT">
            <summary>
            SCI_TEXTHEIGHT(line line) -&gt; int<br/>
            This returns the height in pixels of a particular line. Currently all lines are the same height.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETVSCROLLBAR">
            <summary>
            SCI_SETVSCROLLBAR(bool visible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETVSCROLLBAR">
            <summary>
            SCI_GETVSCROLLBAR -&gt; bool<br/>
            By default, the vertical scroll bar is always displayed when required. You can choose to hide or show it with
            SCI_SETVSCROLLBAR and get the current state with SCI_GETVSCROLLBAR .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_APPENDTEXT">
            <summary>
            SCI_APPENDTEXT(position length, const char *text)<br/>
            This adds the first length characters from the string text to the end of the document. This will
            include any 0's in the string that you might have expected to stop the operation. The current selection is not
            changed and the new text is not scrolled into view.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPHASESDRAW">
            <summary>
            SCI_GETPHASESDRAW -&gt; int<br/>
            There are several orders in which the text area may be drawn offering a trade-off between speed and allowing all
            pixels of text to be seen even when they overlap other elements.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETPHASESDRAW">
            <summary>
            SCI_SETPHASESDRAW(int phases)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFONTQUALITY">
            <summary>
            SCI_SETFONTQUALITY(int fontQuality)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETFONTQUALITY">
            <summary>
            SCI_GETFONTQUALITY -&gt; int<br/>
            Manage font quality (antialiasing method). Currently, the following values are available on Windows:
            SC_EFF_QUALITY_DEFAULT (backward compatible), SC_EFF_QUALITY_NON_ANTIALIASED ,
            SC_EFF_QUALITY_ANTIALIASED, SC_EFF_QUALITY_LCD_OPTIMIZED .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFIRSTVISIBLELINE">
            <summary>
            SCI_SETFIRSTVISIBLELINE(line displayLine)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMULTIPASTE">
            <summary>
            SCI_SETMULTIPASTE(int multiPaste)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMULTIPASTE">
            <summary>
            SCI_GETMULTIPASTE -&gt; int<br/>
            When pasting into multiple selections, the pasted text can go into just the main selection with SC_MULTIPASTE_ONCE =0
            or into each selection with SC_MULTIPASTE_EACH =1. SC_MULTIPASTE_ONCE is the default.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTAG">
            <summary>
            SCI_GETTAG(int tagNumber, char *tagValue NUL-terminated) -&gt; int<br/>
            Discover what text was matched by tagged expressions in a regular expression search. This is useful if the
            application wants to interpret the replacement string itself.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_LINESSPLIT">
            <summary>
            SCI_LINESSPLIT(int pixelWidth)<br/>
            Split a range of lines indicated by the target into lines that are at most pixelWidth wide. Splitting occurs on
            word boundaries wherever possible in a similar manner to line wrapping. When pixelWidth is 0 then the width of
            the window is used.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFOLDMARGINCOLOUR">
            <summary>
            SCI_SETFOLDMARGINCOLOUR(bool useSetting, colour back)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFOLDMARGINHICOLOUR">
            <summary>
            SCI_SETFOLDMARGINHICOLOUR(bool useSetting, colour fore)<br/>
            These messages allow changing the colour of the fold margin and fold margin highlight. On Windows the fold margin
            colour defaults to ::GetSysColor(COLOR_3DFACE) and the fold margin highlight colour to
            ::GetSysColor(COLOR_3DHIGHLIGHT).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETACCESSIBILITY">
            <summary>
            SCI_SETACCESSIBILITY(int accessibility)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETACCESSIBILITY">
            <summary>
            SCI_GETACCESSIBILITY -&gt; int<br/>
            These messages may enable or disable accessibility and report its current status.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_LINELENGTH">
            <summary>
            SCI_LINELENGTH(line line) -&gt; position<br/>
            This returns the length of the line, including any line end characters. If line is negative or beyond the last
            line in the document, the result is 0. If you want the length of the line not including any end of line characters,
            use SCI_GETLINEENDPOSITION(line)- SCI_POSITIONFROMLINE(line) .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_BRACEHIGHLIGHT">
            <summary>
            SCI_BRACEHIGHLIGHT(position posA, position posB)<br/>
            Up to two characters can be highlighted in a 'brace highlighting style', which is defined as style number
            STYLE_BRACELIGHT (34). If you have enabled indent guides, you may also wish to highlight the indent that
            corresponds with the brace. You can locate the column with SCI_GETCOLUMN and highlight the indent with
            SCI_SETHIGHLIGHTGUIDE .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_BRACEHIGHLIGHTINDICATOR">
            <summary>
            SCI_BRACEHIGHLIGHTINDICATOR(bool useSetting, int indicator)<br/>
            Use specified indicator to highlight matching braces instead of changing their style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_BRACEBADLIGHT">
            <summary>
            SCI_BRACEBADLIGHT(position pos)<br/>
            If there is no matching brace then the brace badlighting style, style STYLE_BRACEBAD (35), can be used to
            show the brace that is unmatched. Using a position of INVALID_POSITION (-1) removes the highlight.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_BRACEBADLIGHTINDICATOR">
            <summary>
            SCI_BRACEBADLIGHTINDICATOR(bool useSetting, int indicator)<br/>
            Use specified indicator to highlight non matching brace instead of changing its style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_BRACEMATCH">
            <summary>
            SCI_BRACEMATCH(position pos, int maxReStyle) -&gt; position<br/>
            The SCI_BRACEMATCH message finds a corresponding matching brace given pos, the position of one brace. The
            brace characters handled are '(', ')', '[', ']', '{', '}', '&lt;', and '&gt;'. The search is forwards from an opening
            brace and backwards from a closing brace. If the character at position is not a brace character, or a matching
            brace cannot be found, the return value is -1. Otherwise, the return value is the position of the matching brace.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_BRACEMATCHNEXT">
            <summary>
            SCI_BRACEMATCHNEXT(position pos, position startPos) -&gt; position<br/>
            Similar to SCI_BRACEMATCH, but matching starts at the explicit start position startPos instead of the
            implicitly next position pos± 1 .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETVIEWEOL">
            <summary>
            SCI_GETVIEWEOL -&gt; bool<br/>
            Normally, the end of line characters are hidden, but SCI_SETVIEWEOL allows you to display (or hide) them by
            setting visible true (or false ). The visible rendering of the end of line characters is similar to
            (CR), (LF), or (CR)(LF). SCI_GETVIEWEOL returns the current state.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETVIEWEOL">
            <summary>
            SCI_SETVIEWEOL(bool visible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETDOCPOINTER">
            <summary>
            SCI_GETDOCPOINTER -&gt; pointer<br/>
            This returns a pointer to the document currently in use by the window. It has no other effect.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETDOCPOINTER">
            <summary>
            SCI_SETDOCPOINTER(&lt;unused&gt;, pointer doc)<br/>
            This message does the following: 1. It removes the current window from the list held by the current document. 2. It
            reduces the reference count of the current document by 1. 3. If the reference count reaches 0, the document is
            deleted. 4. doc is set as the new document for the window. 5. If doc was 0, a new, empty document is created
            and attached to the window. 6. If doc was not 0, its reference count is increased by 1.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMODEVENTMASK">
            <summary>
            SCI_SETMODEVENTMASK(int eventMask)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETEDGECOLUMN">
            <summary>
            SCI_GETEDGECOLUMN -&gt; position<br/>
            These messages set and get the column number at which to display the long line marker. When drawing lines, the
            column sets a position in units of the width of a space character in STYLE_DEFAULT. When setting the background
            colour, the column is a character count (allowing for tabs) into the line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETEDGECOLUMN">
            <summary>
            SCI_SETEDGECOLUMN(position column)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETEDGEMODE">
            <summary>
            SCI_GETEDGEMODE -&gt; int<br/>
            These two messages set and get the mode used to display long lines. You can set one of the values in the table:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETEDGEMODE">
            <summary>
            SCI_SETEDGEMODE(int edgeMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETEDGECOLOUR">
            <summary>
            SCI_GETEDGECOLOUR -&gt; colour<br/>
            These messages set and get the colour of the marker used to show that a line has exceeded the length set by
            SCI_SETEDGECOLUMN .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETEDGECOLOUR">
            <summary>
            SCI_SETEDGECOLOUR( colour edgeColour)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MULTIEDGEADDLINE">
            <summary>
            SCI_MULTIEDGEADDLINE(position column, colour edgeColour)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMULTIEDGECOLUMN">
            <summary>
            SCI_GETMULTIEDGECOLUMN(int which) -&gt; position<br/>
            SCI_MULTIEDGEADDLINE adds a new vertical edge to the view. The edge will be displayed at the given column number.
            The resulting edge position depends on the metric of a space character in STYLE_DEFAULT. All the edges can be
            cleared with SCI_MULTIEDGECLEARALL. SCI_GETMULTIEDGECOLUMN returns the column of the Nth vertical edge
            (indexed from 0). If which is greater or equal to the number of vertical edges, this returns -1.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SEARCHNEXT">
            <summary>
            SCI_SEARCHNEXT(int searchFlags, const char *text) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SEARCHPREV">
            <summary>
            SCI_SEARCHPREV(int searchFlags, const char *text) -&gt; position<br/>
            These messages provide relocatable search support. This allows multiple incremental interactive searches to be
            macro recorded while still setting the selection to found text so the find/select operation is self-contained.
            These three messages send SCN_MACRORECORD notifications if macro recording is enabled.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_LINESONSCREEN">
            <summary>
            SCI_LINESONSCREEN -&gt; line<br/>
            This returns the number of complete lines visible on the screen. With a constant line height, this is the vertical
            space available divided by the line separation. Unless you arrange to size your window to an integral number of
            lines, there may be a partial line visible at the bottom of the view.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_USEPOPUP">
            <summary>
            SCI_USEPOPUP(int popUpMode)<br/>
            Clicking the wrong button on the mouse pops up a short default editing menu. This may be turned off with
            SCI_USEPOPUP(SC_POPUP_NEVER). If you turn it off, context menu commands (in Windows, WM_CONTEXTMENU) will not
            be handled by Scintilla, so the parent of the Scintilla window will have the opportunity to handle the message.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SELECTIONISRECTANGLE">
            <summary>
            SCI_SELECTIONISRECTANGLE -&gt; bool<br/>
            This returns 1 if the current selection is in rectangle mode, 0 if not.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETZOOM">
            <summary>
            SCI_SETZOOM(int zoomInPoints)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETZOOM">
            <summary>
            SCI_GETZOOM -&gt; int<br/>
            These messages let you set and get the zoom factor directly. There is no limit set on the factors you can set, so
            limiting yourself to -10 to +60 to match the incremental zoom functions is a good idea.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CREATEDOCUMENT">
            <summary>
            SCI_CREATEDOCUMENT(position bytes, int documentOptions) -&gt; pointer<br/>
            This message creates a new, empty document and returns a pointer to it. This document is not selected into the
            editor and starts with a reference count of 1. This means that you have ownership of it and must either reduce its
            reference count by 1 after using SCI_SETDOCPOINTER so that the Scintilla window owns it or you must make sure that
            you reduce the reference count by 1 with SCI_RELEASEDOCUMENT before you close the application to avoid memory
            leaks. The bytes argument determines the initial memory allocation for the document as it is more efficient
            to allocate once rather than rely on the buffer growing as data is added. If SCI_CREATEDOCUMENT fails then 0
            is returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ADDREFDOCUMENT">
            <summary>
            SCI_ADDREFDOCUMENT(&lt;unused&gt;, pointer doc)<br/>
            This increases the reference count of a document by 1. If you want to replace the current document in the Scintilla
            window and take ownership of the current document, for example if you are editing many documents in one window, do
            the following: 1. Use SCI_GETDOCPOINTER to get a pointer to the document, doc. 2. Use
            SCI_ADDREFDOCUMENT(0, doc) to increment the reference count. 3. Use SCI_SETDOCPOINTER(0, docNew) to set a
            different document or SCI_SETDOCPOINTER(0, 0) to set a new, empty document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_RELEASEDOCUMENT">
            <summary>
            SCI_RELEASEDOCUMENT(&lt;unused&gt;, pointer doc)<br/>
            This message reduces the reference count of the document identified by doc. doc must be the result of
            SCI_GETDOCPOINTER or SCI_CREATEDOCUMENT and must point at a document that still exists. If you call this on a
            document with a reference count of 1 that is still attached to a Scintilla window, bad things will happen. To keep
            the world spinning in its orbit you must balance each call to SCI_CREATEDOCUMENT or SCI_ADDREFDOCUMENT
            with a call to SCI_RELEASEDOCUMENT .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETDOCUMENTOPTIONS">
            <summary>
            SCI_GETDOCUMENTOPTIONS -&gt; int<br/>
            Returns the options that were used to create the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMODEVENTMASK">
            <summary>
            SCI_GETMODEVENTMASK -&gt; int<br/>
            These messages set and get an event mask that determines which document change events are notified to the container
            with SCN_MODIFIED and SCEN_CHANGE. For example, a container may decide to see only notifications about
            changes to text and not styling changes by calling SCI_SETMODEVENTMASK(SC_MOD_INSERTTEXT|SC_MOD_DELETETEXT) .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCOMMANDEVENTS">
            <summary>
            SCI_SETCOMMANDEVENTS(bool commandEvents)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCOMMANDEVENTS">
            <summary>
            SCI_GETCOMMANDEVENTS -&gt; bool<br/>
            These messages set and get whether SCEN_* command events are sent to the container. For SCEN_CHANGE this
            acts as an additional filter over SCI_SETMODEVENTMASK. Most applications should set this off to avoid
            overhead and only use SCN_MODIFIED .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETFOCUS">
            <summary>
            SCI_SETFOCUS(bool focus)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETFOCUS">
            <summary>
            SCI_GETFOCUS -&gt; bool<br/>
            Scintilla can be told to grab the focus with SCI_GRABFOCUS. This is needed more on GTK where focus handling is
            more complicated than on Windows.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSTATUS">
            <summary>
            SCI_SETSTATUS(int status)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSTATUS">
            <summary>
            SCI_GETSTATUS -&gt; int<br/>
            If an error occurs, Scintilla may set an internal error number that can be retrieved with SCI_GETSTATUS. To
            clear the error status call SCI_SETSTATUS(0). Status values from 1 to 999 are errors and status
            SC_STATUS_WARN_START (1000) and above are warnings. The currently defined statuses are:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMOUSEDOWNCAPTURES">
            <summary>
            SCI_SETMOUSEDOWNCAPTURES(bool captures)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMOUSEDOWNCAPTURES">
            <summary>
            SCI_GETMOUSEDOWNCAPTURES -&gt; bool<br/>
            When the mouse is pressed inside Scintilla, it is captured so future mouse movement events are sent to Scintilla.
            This behaviour may be turned off with SCI_SETMOUSEDOWNCAPTURES(0) .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMOUSEWHEELCAPTURES">
            <summary>
            SCI_SETMOUSEWHEELCAPTURES(bool captures)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMOUSEWHEELCAPTURES">
            <summary>
            SCI_GETMOUSEWHEELCAPTURES -&gt; bool<br/>
            On Windows, Scintilla captures all WM_MOUSEWHEEL messages if it has the focus, even if the mouse pointer is
            nowhere near the Scintilla editor window. This behaviour can be changed with SCI_SETMOUSEWHEELCAPTURES(0) so
            that Scintilla passes the WM_MOUSEWHEEL messages to its parent window. Scintilla will still react to the
            mouse wheel if the mouse pointer is over the editor window.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCURSOR">
            <summary>
            SCI_SETCURSOR(int cursorType)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCURSOR">
            <summary>
            SCI_GETCURSOR -&gt; int<br/>
            The cursor is normally chosen in a context sensitive way, so it will be different over the margin than when over
            the text. When performing a slow action, you may wish to change to a wait cursor. You set the cursor type with
            SCI_SETCURSOR. The cursorType argument can be:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCONTROLCHARSYMBOL">
            <summary>
            SCI_SETCONTROLCHARSYMBOL(int symbol)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCONTROLCHARSYMBOL">
            <summary>
            SCI_GETCONTROLCHARSYMBOL -&gt; int<br/>
            The mnemonics may be replaced by a nominated symbol with an ASCII code in the range 32 to 255. If you set a symbol
            value less than 32, all control characters are displayed as mnemonics. The symbol you set is rendered in the font
            of the style set for the character. You can read back the current symbol with the SCI_GETCONTROLCHARSYMBOL
            message. The default symbol value is 0.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETVISIBLEPOLICY">
            <summary>
            SCI_SETVISIBLEPOLICY(int visiblePolicy, int visibleSlop)<br/>
            This determines how the vertical positioning is determined when SCI_ENSUREVISIBLEENFORCEPOLICY is called. It
            takes VISIBLE_SLOP and VISIBLE_STRICT flags for the visiblePolicy parameter. It is similar in operation
            to SCI_SETYCARETPOLICY(int caretPolicy, int caretSlop) .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETXOFFSET">
            <summary>
            SCI_SETXOFFSET(int xOffset)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETXOFFSET">
            <summary>
            SCI_GETXOFFSET -&gt; int<br/>
            The xOffset is the horizontal scroll position in pixels of the start of the text view. A value of 0 is the
            normal position with the first text column visible at the left of the view.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETXCARETPOLICY">
            <summary>
            SCI_SETXCARETPOLICY(int caretPolicy, int caretSlop)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETYCARETPOLICY">
            <summary>
            SCI_SETYCARETPOLICY(int caretPolicy, int caretSlop)<br/>
            These set the caret policy. The value of caretPolicy is a combination of CARET_SLOP, CARET_STRICT ,
            CARET_JUMPS and CARET_EVEN .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETPRINTWRAPMODE">
            <summary>
            SCI_SETPRINTWRAPMODE(int wrapMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPRINTWRAPMODE">
            <summary>
            SCI_GETPRINTWRAPMODE -&gt; int<br/>
            These two functions get and set the printer wrap mode. wrapMode can be set to SC_WRAP_NONE (0) or
            SC_WRAP_WORD (1). The default is SC_WRAP_WORD, which wraps printed output so that all characters fit
            into the print rectangle. If you set SC_WRAP_NONE, each line of text generates one line of output and the line
            is truncated if it is too long to fit into the print area. SC_WRAP_WORD tries to wrap only between words as
            indicated by white space or style changes although if a word is longer than a line, it will be wrapped before
            the line end. SC_WRAP_CHAR is not supported for printing.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETHOTSPOTACTIVEFORE">
            <summary>
            SCI_SETHOTSPOTACTIVEFORE(bool useSetting, colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETHOTSPOTACTIVEFORE">
            <summary>
            SCI_GETHOTSPOTACTIVEFORE -&gt; colour<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETHOTSPOTACTIVEBACK">
            <summary>
            SCI_SETHOTSPOTACTIVEBACK(bool useSetting, colour back)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETHOTSPOTACTIVEBACK">
            <summary>
            SCI_GETHOTSPOTACTIVEBACK -&gt; colour<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETHOTSPOTACTIVEUNDERLINE">
            <summary>
            SCI_SETHOTSPOTACTIVEUNDERLINE(bool underline)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETHOTSPOTACTIVEUNDERLINE">
            <summary>
            SCI_GETHOTSPOTACTIVEUNDERLINE -&gt; bool<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETHOTSPOTSINGLELINE">
            <summary>
            SCI_SETHOTSPOTSINGLELINE(bool singleLine)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETHOTSPOTSINGLELINE">
            <summary>
            SCI_GETHOTSPOTSINGLELINE -&gt; bool<br/>
            While the cursor hovers over text in a style with the hotspot attribute set, the default colouring can be modified
            and an underline drawn with these settings. Single line mode stops a hotspot from wrapping onto next line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POSITIONBEFORE">
            <summary>
            SCI_POSITIONBEFORE(position pos) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POSITIONAFTER">
            <summary>
            SCI_POSITIONAFTER(position pos) -&gt; position<br/>
            These messages return the position before and after another position in the document taking into account the
            current code page. The minimum position returned is 0 and the maximum is the last position in the document.
            If called with a position within a multi byte character will return the position of the start/end of that
            character.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POSITIONRELATIVE">
            <summary>
            SCI_POSITIONRELATIVE(position pos, position relative) -&gt; position<br/>
            Count a number of whole characters before or after the argument position and return that position. The minimum
            position returned is 0 and the maximum is the last position in the document. If the position goes past the
            document end then 0 is returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_POSITIONRELATIVECODEUNITS">
            <summary>
            SCI_POSITIONRELATIVECODEUNITS(position pos, position relative) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_COPYRANGE">
            <summary>
            SCI_COPYRANGE(position start, position end)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_COPYTEXT">
            <summary>
            SCI_COPYTEXT(position length, const char *text)<br/>
            SCI_COPYRANGE copies a range of text from the document to the system clipboard and SCI_COPYTEXT copies a
            supplied piece of text to the system clipboard.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONMODE">
            <summary>
            SCI_SETSELECTIONMODE(int selectionMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CHANGESELECTIONMODE">
            <summary>
            SCI_CHANGESELECTIONMODE(int selectionMode)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONMODE">
            <summary>
            SCI_GETSELECTIONMODE -&gt; int<br/>
            The functions set, change, and get the selection mode, which can be stream( SC_SEL_STREAM =0) or
            rectangular( SC_SEL_RECTANGLE =1) or by lines( SC_SEL_LINES =2) or thin rectangular( SC_SEL_THIN
            =3). When SCI_SETSELECTIONMODE sets these modes, regular caret moves will extend or reduce the selection,
            until the mode is cancelled by a call with same value, or with SCI_CANCEL, or with SCI_SETMOVEEXTENDSSELECTION .
            SCI_CHANGESELECTIONMODE sets the mode but does not make regular caret moves extend or reduce the selection.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMOVEEXTENDSSELECTION">
            <summary>
            SCI_SETMOVEEXTENDSSELECTION(bool moveExtendsSelection)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMOVEEXTENDSSELECTION">
            <summary>
            SCI_GETMOVEEXTENDSSELECTION -&gt; bool<br/>
            This controls whether regular caret moves extends the selection leaving the anchor unchanged. It is 1 if regular
            caret moves will extend or reduce the selection, 0 if not. SCI_SETSELECTIONMODE toggles this setting between on and
            off.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINESELSTARTPOSITION">
            <summary>
            SCI_GETLINESELSTARTPOSITION(line line) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINESELENDPOSITION">
            <summary>
            SCI_GETLINESELENDPOSITION(line line) -&gt; position<br/>
            Retrieve the position of the start and end of the selection at the given line with INVALID_POSITION returned if no
            selection on this line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETWHITESPACECHARS">
            <summary>
            SCI_SETWHITESPACECHARS(&lt;unused&gt;, const char *characters)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETWHITESPACECHARS">
            <summary>
            SCI_GETWHITESPACECHARS(&lt;unused&gt;, char *characters) -&gt; int<br/>
            Similar to SCI_SETWORDCHARS, this message allows the user to define which chars Scintilla considers as
            whitespace. Setting the whitespace chars allows the user to fine-tune Scintilla's behaviour doing such
            things as moving the cursor to the start or end of a word; for example, by defining punctuation chars as
            whitespace, they will be skipped over when the user presses ctrl+left or ctrl+right. This function should be
            called after SCI_SETWORDCHARS as it will reset the whitespace characters to the default set.
            SCI_GETWHITESPACECHARS behaves similarly to SCI_GETWORDCHARS .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETPUNCTUATIONCHARS">
            <summary>
            SCI_SETPUNCTUATIONCHARS(&lt;unused&gt;, const char *characters)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPUNCTUATIONCHARS">
            <summary>
            SCI_GETPUNCTUATIONCHARS(&lt;unused&gt;, char *characters) -&gt; int<br/>
            Similar to SCI_SETWORDCHARS and SCI_SETWHITESPACECHARS, this message allows the user to define which chars
            Scintilla considers as punctuation. SCI_GETPUNCTUATIONCHARS behaves similarly to SCI_GETWORDCHARS .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETCURRENT">
            <summary>
            SCI_AUTOCGETCURRENT -&gt; int<br/>
            This message selects an item in the autocompletion list. It searches the list of words for the first that matches
            select. By default, comparisons are case sensitive, but you can change this with SCI_AUTOCSETIGNORECASE. The
            match is character by character for the length of the select string. That is, if select is "Fred" it will
            match "Frederick" if this is the first item in the list that begins with "Fred". If an item is found, it is
            selected. If the item is not found, the autocompletion list closes if auto-hide is true (see SCI_AUTOCSETAUTOHIDE
            ). The current selection index can be retrieved with SCI_AUTOCGETCURRENT .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETCURRENTTEXT">
            <summary>
            SCI_AUTOCGETCURRENTTEXT(&lt;unused&gt;, char *text NUL-terminated) -&gt; int<br/>
            This message retrieves the current selected text in the autocompletion list. Normally the SCN_AUTOCSELECTION
            notification is used instead.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR">
            <summary>
            SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR(int behaviour)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR">
            <summary>
            SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR -&gt; int<br/>
            When autocompletion is set to ignore case( SCI_AUTOCSETIGNORECASE ), by default it will nonetheless select the
            first list member that matches in a case sensitive way to entered characters. This corresponds to a behaviour
            property of SC_CASEINSENSITIVEBEHAVIOUR_RESPECTCASE (0). If you want autocompletion to ignore case at all,
            choose SC_CASEINSENSITIVEBEHAVIOUR_IGNORECASE (1).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETMULTI">
            <summary>
            SCI_AUTOCSETMULTI(int multi)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETMULTI">
            <summary>
            SCI_AUTOCGETMULTI -&gt; int<br/>
            When autocompleting with multiple selections present, the autocompleted text can go into just the main selection with
            SC_MULTIAUTOC_ONCE (0) or into each selection with SC_MULTIAUTOC_EACH (1). The default is
            SC_MULTIAUTOC_ONCE .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCSETORDER">
            <summary>
            SCI_AUTOCSETORDER(int order)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_AUTOCGETORDER">
            <summary>
            SCI_AUTOCGETORDER -&gt; int<br/>
            The default setting SC_ORDER_PRESORTED (0) requires that the list be provided in alphabetical sorted order.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ALLOCATE">
            <summary>
            SCI_ALLOCATE(position bytes)<br/>
            Allocate a document buffer large enough to store a given number of bytes. The document will not be made smaller
            than its current contents.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_TARGETASUTF8">
            <summary>
            SCI_TARGETASUTF8(&lt;unused&gt;, char *s) -&gt; position<br/>
            This method retrieves the value of the target encoded as UTF-8 which is the default encoding of GTK so is useful
            for retrieving text for use in other parts of the user interface, such as find and replace dialogs. The length of
            the encoded text in bytes is returned. Cocoa uses UTF-16 which is easily converted from UTF-8 so this method can
            be used to perform the more complex work of transcoding from the various encodings supported.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETLENGTHFORENCODE">
            <summary>
            SCI_SETLENGTHFORENCODE(position bytes)<br/>
            SCI_ENCODEDFROMUTF8 converts a UTF-8 string into the document's encoding which is useful for taking the results
            of a find dialog, for example, and receiving a string of bytes that can be searched for in the document. Since the
            text can contain nul bytes, the SCI_SETLENGTHFORENCODE method can be used to set the length that will be
            converted. If set to -1, the length is determined by finding a nul byte. The length of the converted string is
            returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ENCODEDFROMUTF8">
            <summary>
            SCI_ENCODEDFROMUTF8(const char *utf8, char *encoded) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FINDCOLUMN">
            <summary>
            SCI_FINDCOLUMN(line line, position column) -&gt; position<br/>
            This message returns the position of a column on a line taking the width of tabs into account. It treats a
            multi-byte character as a single column. Column numbers, like lines start at 0.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETSTICKY">
            <summary>
            SCI_GETCARETSTICKY -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETSTICKY">
            <summary>
            SCI_SETCARETSTICKY(int useCaretStickyBehaviour)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETPASTECONVERTENDINGS">
            <summary>
            SCI_SETPASTECONVERTENDINGS(bool convert)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPASTECONVERTENDINGS">
            <summary>
            SCI_GETPASTECONVERTENDINGS -&gt; bool<br/>
            If this property is set then when text is pasted any line ends are converted to match the document's end of line
            mode as set with SCI_SETEOLMODE. Defaults to true.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_REPLACERECTANGULAR">
            <summary>
            SCI_REPLACERECTANGULAR(position length, const char *text)<br/>
            Replaces the selected text or empty selection with the given text. The insertion is performed similarly to
            rectangular pastes: new lines in the given text are interpreted as moving to the next line without inserting new
            lines unless at the end of the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINEBACKALPHA">
            <summary>
            SCI_SETCARETLINEBACKALPHA( alpha alpha)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEBACKALPHA">
            <summary>
            SCI_GETCARETLINEBACKALPHA -&gt; int<br/>
            These APIs are discouraged. It is better to use the SC_ELEMENT_CARET_LINE_BACK element mentioned in the
            previous section. You can choose to make the background colour of the line containing the caret different with
            these messages. To do this, set the desired background colour with SCI_SETCARETLINEBACK, then use
            SCI_SETCARETLINEVISIBLE(true) to enable the effect. You can cancel the effect with
            SCI_SETCARETLINEVISIBLE(false). The two SCI_GETCARET* functions return the state and the colour. This form of
            background colouring has highest priority when a line has markers that would otherwise change the background
            colour. The caret line may also be drawn translucently which allows other background colours to show
            through. This is done by setting the alpha (translucency) value by calling SCI_SETCARETLINEBACKALPHA. When
            the alpha is not SC_ALPHA_NOALPHA, the caret line is drawn after all other features so will affect the
            colour of all other features.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETSTYLE">
            <summary>
            SCI_SETCARETSTYLE(int caretStyle)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETSTYLE">
            <summary>
            SCI_GETCARETSTYLE -&gt; int<br/>
            The style of the caret can be set with SCI_SETCARETSTYLE. There are separate styles for insert mode (lower
            4-bits, CARETSTYLE_INS_MASK ), overtype mode (bit 4), and curses mode (bit 5).
            CARETSTYLE_INVISIBLE CARETSTYLE_LINE CARETSTYLE_BLOCK
            CARETSTYLE_OVERSTRIKE_BAR CARETSTYLE_OVERSTRIKE_BLOCK
            CARETSTYLE_CURSES CARETSTYLE_BLOCK_AFTER CARETSTYLE_BLOCK or
            CARETSTYLE_CURSES. The block caret draws most combining and multibyte
            character sequences successfully, though some fonts like Thai Fonts (and possibly others) can sometimes appear
            strange when the cursor is positioned at these characters, which may result in only drawing a part of the
            cursor character sequence. This is most notable on Windows platforms.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETINDICATORCURRENT">
            <summary>
            SCI_SETINDICATORCURRENT(int indicator)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETINDICATORCURRENT">
            <summary>
            SCI_GETINDICATORCURRENT -&gt; int<br/>
            These two messages set and get the indicator that will be affected by calls to SCI_INDICATORFILLRANGE(position start,
            position lengthFill) and SCI_INDICATORCLEARRANGE(position start, position lengthClear) .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETINDICATORVALUE">
            <summary>
            SCI_SETINDICATORVALUE(int value)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETINDICATORVALUE">
            <summary>
            SCI_GETINDICATORVALUE -&gt; int<br/>
            These two messages set and get the value that will be set by calls to SCI_INDICATORFILLRANGE .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICATORFILLRANGE">
            <summary>
            SCI_INDICATORFILLRANGE(position start, position lengthFill)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICATORCLEARRANGE">
            <summary>
            SCI_INDICATORCLEARRANGE(position start, position lengthClear)<br/>
            These two messages fill or clear a range for the current indicator. SCI_INDICATORFILLRANGE fills with the current
            value.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICATORALLONFOR">
            <summary>
            SCI_INDICATORALLONFOR(position pos) -&gt; int<br/>
            Retrieve a bitmap value representing which indicators are non-zero at a position. Only the first 32 indicators are
            represented in the result so no IME indicators are included.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICATORVALUEAT">
            <summary>
            SCI_INDICATORVALUEAT(int indicator, position pos) -&gt; int<br/>
            Retrieve the value of a particular indicator at a position.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICATORSTART">
            <summary>
            SCI_INDICATORSTART(int indicator, position pos) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICATOREND">
            <summary>
            SCI_INDICATOREND(int indicator, position pos) -&gt; position<br/>
            Find the start or end of a range with one value from a position within the range. Can be used to iterate through
            the document to discover all the indicator positions.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETPOSITIONCACHE">
            <summary>
            SCI_SETPOSITIONCACHE(int size)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPOSITIONCACHE">
            <summary>
            SCI_GETPOSITIONCACHE -&gt; int<br/>
            The position cache stores position information for short runs of text so that their layout can be determined more
            quickly if the run recurs. The size in entries of this cache can be set with SCI_SETPOSITIONCACHE .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETLAYOUTTHREADS">
            <summary>
            SCI_SETLAYOUTTHREADS(int threads)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLAYOUTTHREADS">
            <summary>
            SCI_GETLAYOUTTHREADS -&gt; int<br/>
            The time taken to measure text runs on wide lines or when wrapping can be improved by performing the task
            concurrently on multiple threads when SCI_SUPPORTSFEATURE(SC_SUPPORTS_THREAD_SAFE_MEASURE_WIDTHS) is available.
            This can be a dramatic improvement- a 4 core processor is often able to reduce text layout time to just over one
            quarter of the single-threaded time.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCOPYSEPARATOR">
            <summary>
            SCI_SETCOPYSEPARATOR(&lt;unused&gt;, const char *separator)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCOPYSEPARATOR">
            <summary>
            SCI_GETCOPYSEPARATOR(&lt;unused&gt;, char *separator) -&gt; int<br/>
            When a multiple selection is copied, this string property is added between each part. Defaults to empty.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCHARACTERPOINTER">
            <summary>
            SCI_GETCHARACTERPOINTER -&gt; pointer<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETRANGEPOINTER">
            <summary>
            SCI_GETRANGEPOINTER(position start, position lengthRange) -&gt; pointer<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETGAPPOSITION">
            <summary>
            SCI_GETGAPPOSITION -&gt; position<br/>
            Grant temporary direct read-only access to the memory used by Scintilla to store the document.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETALPHA">
            <summary>
            SCI_INDICSETALPHA(int indicator, alpha alpha)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETALPHA">
            <summary>
            SCI_INDICGETALPHA(int indicator) -&gt; int<br/>
            These two messages set and get the alpha transparency used for drawing the fill colour of the INDIC_ROUNDBOX and
            INDIC_STRAIGHTBOX rectangle. The alpha value can range from 0 (completely transparent) to 255 (no transparency).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICSETOUTLINEALPHA">
            <summary>
            SCI_INDICSETOUTLINEALPHA(int indicator, alpha alpha)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDICGETOUTLINEALPHA">
            <summary>
            SCI_INDICGETOUTLINEALPHA(int indicator) -&gt; int<br/>
            These two messages set and get the alpha transparency used for drawing the outline colour of the INDIC_ROUNDBOX
            and INDIC_STRAIGHTBOX rectangle. The alpha value can range from 0 (completely transparent) to 255 (no
            transparency).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETEXTRAASCENT">
            <summary>
            SCI_SETEXTRAASCENT(int extraAscent)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETEXTRAASCENT">
            <summary>
            SCI_GETEXTRAASCENT -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETEXTRADESCENT">
            <summary>
            SCI_SETEXTRADESCENT(int extraDescent)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETEXTRADESCENT">
            <summary>
            SCI_GETEXTRADESCENT -&gt; int<br/>
            Text is drawn with the base of each character on a 'baseline'. The height of a line is found from the maximum that
            any style extends above the baseline (its 'ascent'), added to the maximum that any style extends below the
            baseline (its 'descent'). Space may be added to the maximum ascent( SCI_SETEXTRAASCENT) and the maximum
            descent( SCI_SETEXTRADESCENT) to allow for more space between lines. This may done to make the text easier to
            read or to accommodate underlines or highlights.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERSYMBOLDEFINED">
            <summary>
            SCI_MARKERSYMBOLDEFINED(int markerNumber) -&gt; int<br/>
            Returns the symbol defined for a markerNumber with SCI_MARKERDEFINE or SC_MARK_PIXMAP if defined with
            SCI_MARKERDEFINEPIXMAP or SC_MARK_RGBAIMAGE if defined with SCI_MARKERDEFINERGBAIMAGE .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARGINSETTEXT">
            <summary>
            SCI_MARGINSETTEXT(line line, const char *text)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARGINGETTEXT">
            <summary>
            SCI_MARGINGETTEXT(line line, char *text) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARGINSETSTYLE">
            <summary>
            SCI_MARGINSETSTYLE(line line, int style)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARGINGETSTYLE">
            <summary>
            SCI_MARGINGETSTYLE(line line) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARGINSETSTYLES">
            <summary>
            SCI_MARGINSETSTYLES(line line, const char *styles)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARGINGETSTYLES">
            <summary>
            SCI_MARGINGETSTYLES(line line, char *styles) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARGINSETSTYLEOFFSET">
            <summary>
            SCI_MARGINSETSTYLEOFFSET(int style)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARGINGETSTYLEOFFSET">
            <summary>
            SCI_MARGINGETSTYLEOFFSET -&gt; int<br/>
            Margin styles may be completely separated from standard text styles by setting a style offset. For example,
            SCI_MARGINSETSTYLEOFFSET(256) would allow the margin styles to be numbered from 256 up to 511 so they do not
            overlap styles set by lexers. Each style number set with SCI_MARGINSETSTYLE or SCI_MARGINSETSTYLES has the
            offset added before looking up the style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMARGINOPTIONS">
            <summary>
            SCI_SETMARGINOPTIONS(int marginOptions)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMARGINOPTIONS">
            <summary>
            SCI_GETMARGINOPTIONS -&gt; int<br/>
            Define margin options by enabling appropriate bit flags. At the moment, only one flag is available
            SC_MARGINOPTION_SUBLINESELECT =1, which controls how wrapped lines are selected when clicking on margin in front
            of them. If SC_MARGINOPTION_SUBLINESELECT is set only sub line of wrapped line is selected, otherwise whole
            wrapped line is selected. Margin options are set to SC_MARGINOPTION_NONE =0 by default.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONSETTEXT">
            <summary>
            SCI_ANNOTATIONSETTEXT(line line, const char *text)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONGETTEXT">
            <summary>
            SCI_ANNOTATIONGETTEXT(line line, char *text) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONSETSTYLE">
            <summary>
            SCI_ANNOTATIONSETSTYLE(line line, int style)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONGETSTYLE">
            <summary>
            SCI_ANNOTATIONGETSTYLE(line line) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONSETSTYLES">
            <summary>
            SCI_ANNOTATIONSETSTYLES(line line, const char *styles)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONGETSTYLES">
            <summary>
            SCI_ANNOTATIONGETSTYLES(line line, char *styles) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONGETLINES">
            <summary>
            SCI_ANNOTATIONGETLINES(line line) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONSETVISIBLE">
            <summary>
            SCI_ANNOTATIONSETVISIBLE(int visible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONGETVISIBLE">
            <summary>
            SCI_ANNOTATIONGETVISIBLE -&gt; int<br/>
            Annotations can be made visible in a view and there is a choice of display style when visible. The two messages
            set and get the annotation display mode. The visible argument can be one of:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONSETSTYLEOFFSET">
            <summary>
            SCI_ANNOTATIONSETSTYLEOFFSET(int style)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ANNOTATIONGETSTYLEOFFSET">
            <summary>
            SCI_ANNOTATIONGETSTYLEOFFSET -&gt; int<br/>
            Annotation styles may be completely separated from standard text styles by setting a style offset. For example,
            SCI_ANNOTATIONSETSTYLEOFFSET(512) would allow the annotation styles to be numbered from 512 up to 767 so they do
            not overlap styles set by lexers (or margins if margins offset is 256). Each style number set with
            SCI_ANNOTATIONSETSTYLE or SCI_ANNOTATIONSETSTYLES has the offset added before looking up the style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ALLOCATEEXTENDEDSTYLES">
            <summary>
            SCI_ALLOCATEEXTENDEDSTYLES(int numberStyles) -&gt; int<br/>
            Extended styles are used for features like textual margins and annotations and autocompletion lists as well as
            internally by Scintilla. They are outside the range 0..255 used for the styles bytes associated with document
            bytes. These functions manage the use of extended styles to ensures that components cooperate in defining styles.
            SCI_RELEASEALLEXTENDEDSTYLES releases any extended styles allocated by the container.
            SCI_ALLOCATEEXTENDEDSTYLES allocates a range of style numbers after the byte style values and returns the number
            of the first allocated style. Ranges for margin, annotation, and autocompletion list styles should be allocated
            before calling SCI_MARGINSETSTYLEOFFSET or SCI_ANNOTATIONSETSTYLEOFFSET or SCI_AUTOCSETSTYLE .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ADDUNDOACTION">
            <summary>
            SCI_ADDUNDOACTION(int token, int flags)<br/>
            The container can add its own actions into the undo stack by calling SCI_ADDUNDOACTION and an SCN_MODIFIED
            notification will be sent to the container with the SC_MOD_CONTAINER flag when it is time to undo (
            SC_PERFORMED_UNDO) or redo( SC_PERFORMED_REDO) the action. The token argument supplied is returned in
            the token field of the notification.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CHARPOSITIONFROMPOINT">
            <summary>
            SCI_CHARPOSITIONFROMPOINT(int x, int y) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CHARPOSITIONFROMPOINTCLOSE">
            <summary>
            SCI_CHARPOSITIONFROMPOINTCLOSE(int x, int y) -&gt; position<br/>
            SCI_CHARPOSITIONFROMPOINT finds the closest character to a point and SCI_CHARPOSITIONFROMPOINTCLOSE is
            similar but returns -1 if the point is outside the window or not close to any characters. This is similar to the
            previous methods but finds characters rather than inter-character positions.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMOUSESELECTIONRECTANGULARSWITCH">
            <summary>
            SCI_SETMOUSESELECTIONRECTANGULARSWITCH(bool mouseSelectionRectangularSwitch)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMOUSESELECTIONRECTANGULARSWITCH">
            <summary>
            SCI_GETMOUSESELECTIONRECTANGULARSWITCH -&gt; bool<br/>
            Enable or disable the ability to switch to rectangular selection mode while making a selection with the mouse.
            When this option is turned on, mouse selections in stream mode can be switched to rectangular mode by pressing the
            corresponding modifier key. They then stick to rectangular mode even when the modifier key is released again. When
            this option is turned off, mouse selections will always stick to the mode the selection was started in. It is off
            by default.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMULTIPLESELECTION">
            <summary>
            SCI_SETMULTIPLESELECTION(bool multipleSelection)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMULTIPLESELECTION">
            <summary>
            SCI_GETMULTIPLESELECTION -&gt; bool<br/>
            Enable or disable multiple selection. When multiple selection is disabled, it is not possible to select multiple
            ranges by holding down the Ctrl key while dragging with the mouse.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETADDITIONALSELECTIONTYPING">
            <summary>
            SCI_SETADDITIONALSELECTIONTYPING(bool additionalSelectionTyping)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETADDITIONALSELECTIONTYPING">
            <summary>
            SCI_GETADDITIONALSELECTIONTYPING -&gt; bool<br/>
            Whether typing, new line, cursor left/right/up/down, backspace, delete, home, and end work with multiple
            selections simultaneously. Also allows selection and word and line deletion commands.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETADDITIONALCARETSBLINK">
            <summary>
            SCI_SETADDITIONALCARETSBLINK(bool additionalCaretsBlink)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETADDITIONALCARETSBLINK">
            <summary>
            SCI_GETADDITIONALCARETSBLINK -&gt; bool<br/>
            Modify the appearance of additional carets so that they can be differentiated from the main caret which has its
            appearance set with SC_ELEMENT_CARET, SCI_SETCARETFORE, SCI_GETCARETFORE ,
            SCI_SETCARETPERIOD, and SCI_GETCARETPERIOD .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETADDITIONALCARETSVISIBLE">
            <summary>
            SCI_SETADDITIONALCARETSVISIBLE(bool additionalCaretsVisible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETADDITIONALCARETSVISIBLE">
            <summary>
            SCI_GETADDITIONALCARETSVISIBLE -&gt; bool<br/>
            Determine whether to show additional carets (defaults to true ).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONS">
            <summary>
            SCI_GETSELECTIONS -&gt; int<br/>
            Return the number of selections currently active. There is always at least one selection.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONEMPTY">
            <summary>
            SCI_GETSELECTIONEMPTY -&gt; bool<br/>
            Return 1 if every selected range is empty else 0.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTION">
            <summary>
            SCI_SETSELECTION(position caret, position anchor)<br/>
            Set a single selection from anchor to caret as the only selection.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ADDSELECTION">
            <summary>
            SCI_ADDSELECTION(position caret, position anchor)<br/>
            Add a new selection from anchor to caret as the main selection retaining all other selections as additional
            selections. Since there is always at least one selection, to set a list of selections, the first selection should
            be added with SCI_SETSELECTION and later selections added with SCI_ADDSELECTION
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SELECTIONFROMPOINT">
            <summary>
            SCI_SELECTIONFROMPOINT(int x, int y) -&gt; int<br/>
            Return the index of the selection at the point. If there is no selection at the point, return -1. This can be used
            to drop a selection or make it the main selection.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_DROPSELECTIONN">
            <summary>
            SCI_DROPSELECTIONN(int selection)<br/>
            If there are multiple selections, remove the indicated selection. If this was the main selection then make the
            previous selection the main and if it was the first then the last selection becomes main. If there is only one
            selection, or there is no selection selection, then there is no effect.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETMAINSELECTION">
            <summary>
            SCI_SETMAINSELECTION(int selection)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETMAINSELECTION">
            <summary>
            SCI_GETMAINSELECTION -&gt; int<br/>
            One of the selections is the main selection which is used to determine what range of text is automatically visible.
            The main selection may be displayed in different colours or with a differently styled caret. Only an already
            existing selection can be made main.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONNCARET">
            <summary>
            SCI_SETSELECTIONNCARET(int selection, position caret)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONNCARET">
            <summary>
            SCI_GETSELECTIONNCARET(int selection) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONNANCHOR">
            <summary>
            SCI_SETSELECTIONNANCHOR(int selection, position anchor)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONNANCHOR">
            <summary>
            SCI_GETSELECTIONNANCHOR(int selection) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONNCARETVIRTUALSPACE">
            <summary>
            SCI_SETSELECTIONNCARETVIRTUALSPACE(int selection, position space)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONNCARETVIRTUALSPACE">
            <summary>
            SCI_GETSELECTIONNCARETVIRTUALSPACE(int selection) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONNANCHORVIRTUALSPACE">
            <summary>
            SCI_SETSELECTIONNANCHORVIRTUALSPACE(int selection, position space)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONNANCHORVIRTUALSPACE">
            <summary>
            SCI_GETSELECTIONNANCHORVIRTUALSPACE(int selection) -&gt; position<br/>
            Set or query the position and amount of virtual space for the caret and anchor of each already existing selection.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONNSTART">
            <summary>
            SCI_SETSELECTIONNSTART(int selection, position anchor)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONNSTART">
            <summary>
            SCI_GETSELECTIONNSTART(int selection) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONNSTARTVIRTUALSPACE">
            <summary>
            SCI_GETSELECTIONNSTARTVIRTUALSPACE(int selection) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELECTIONNEND">
            <summary>
            SCI_SETSELECTIONNEND(int selection, position caret)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONNENDVIRTUALSPACE">
            <summary>
            SCI_GETSELECTIONNENDVIRTUALSPACE(int selection) -&gt; position<br/>
            Set or query the start and end position of each already existing selection. Query the virtual space at start and
            end of each selection. Mostly of use to query each range for its text. The selection parameter is zero-based.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELECTIONNEND">
            <summary>
            SCI_GETSELECTIONNEND(int selection) -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETRECTANGULARSELECTIONCARET">
            <summary>
            SCI_SETRECTANGULARSELECTIONCARET(position caret)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETRECTANGULARSELECTIONCARET">
            <summary>
            SCI_GETRECTANGULARSELECTIONCARET -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETRECTANGULARSELECTIONANCHOR">
            <summary>
            SCI_SETRECTANGULARSELECTIONANCHOR(position anchor)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETRECTANGULARSELECTIONANCHOR">
            <summary>
            SCI_GETRECTANGULARSELECTIONANCHOR -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE">
            <summary>
            SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE(position space)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE">
            <summary>
            SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE -&gt; position<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE">
            <summary>
            SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE(position space)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE">
            <summary>
            SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE -&gt; position<br/>
            Set or query the position and amount of virtual space for the caret and anchor of the rectangular selection. After
            setting the rectangular selection, this is broken down into multiple selections, one for each line.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETVIRTUALSPACEOPTIONS">
            <summary>
            SCI_SETVIRTUALSPACEOPTIONS(int virtualSpaceOptions)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETVIRTUALSPACEOPTIONS">
            <summary>
            SCI_GETVIRTUALSPACEOPTIONS -&gt; int<br/>
            Virtual space can be enabled or disabled for rectangular selections or in other circumstances or in both. There
            are three bit flags SCVS_RECTANGULARSELECTION =1, SCVS_USERACCESSIBLE =2, and SCVS_NOWRAPLINESTART
            =4 which can be set independently. SCVS_NONE =0, the default, disables all use of virtual space.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETRECTANGULARSELECTIONMODIFIER">
            <summary>
            SCI_SETRECTANGULARSELECTIONMODIFIER(int modifier)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETRECTANGULARSELECTIONMODIFIER">
            <summary>
            SCI_GETRECTANGULARSELECTIONMODIFIER -&gt; int<br/>
            On GTK and Qt, the key used to indicate that a rectangular selection should be created when combined with a mouse drag
            can be set. The three possible values are SCMOD_CTRL =2, SCMOD_ALT =4 (default) or SCMOD_SUPER =8.
            Since SCMOD_ALT may already be used by a window manager, the window manager may need configuring to allow this
            choice. SCMOD_SUPER is often a system dependent modifier key such as the Left Windows key on a Windows
            keyboard or the Command key on a Mac.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETADDITIONALSELFORE">
            <summary>
            SCI_SETADDITIONALSELFORE( colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETADDITIONALSELBACK">
            <summary>
            SCI_SETADDITIONALSELBACK( colour back)<br/>
            Modify the appearance of additional selections so that they can be differentiated from the main selection which has its
            appearance set with SC_ELEMENT_SELECTION_TEXT, SC_ELEMENT_SELECTION_BACK, SCI_SETSELALPHA ,
            SCI_GETSELALPHA, SCI_SETSELFORE, and SCI_SETSELBACK. The element APIs are preferred and the
            following messages discouraged. The additional selection background is drawn on the layer defined for all
            selection backgrounds by SCI_SETSELECTIONLAYER. SCI_SETADDITIONALSELFORE and
            SCI_SETADDITIONALSELBACK calls have no effect until SCI_SETSELFORE and SCI_SETSELBACK are
            called with useSetting value set to true. Subsequent calls to SCI_SETSELFORE, and SCI_SETSELBACK
            will overwrite the values set by SCI_SETADDITIONALSEL* functions.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETADDITIONALSELALPHA">
            <summary>
            SCI_SETADDITIONALSELALPHA( alpha alpha)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETADDITIONALSELALPHA">
            <summary>
            SCI_GETADDITIONALSELALPHA -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETADDITIONALCARETFORE">
            <summary>
            SCI_SETADDITIONALCARETFORE( colour fore)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETADDITIONALCARETFORE">
            <summary>
            SCI_GETADDITIONALCARETFORE -&gt; colour<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CHANGELEXERSTATE">
            <summary>
            SCI_CHANGELEXERSTATE(position start, position end) -&gt; int<br/>
            Indicate that the internal state of a lexer has changed over a range and therefore there may be a need to redraw.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CONTRACTEDFOLDNEXT">
            <summary>
            SCI_CONTRACTEDFOLDNEXT(line lineStart) -&gt; line<br/>
            Search efficiently for lines that are contracted fold headers. This is useful when saving the user's folding when
            switching documents or saving folding with a file. The search starts at line number lineStart and continues
            forwards to the end of the file. lineStart is returned if it is a contracted fold header otherwise the next
            contracted fold header is returned. If there are no more contracted fold headers then -1 is returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETIDENTIFIER">
            <summary>
            SCI_SETIDENTIFIER(int identifier)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETIDENTIFIER">
            <summary>
            SCI_GETIDENTIFIER -&gt; int<br/>
            These two messages set and get the identifier of the Scintilla instance which is included in notifications as the
            idFrom field. When an application creates multiple Scintilla widgets, this allows the source of each
            notification to be found. On Windows, this value is initialised in the CreateWindow call and stored as the
            GWLP_ID attribute of the window. The value should be small, preferably less than 16 bits, rather than a
            pointer as some of the functions will only transmit 16 or 32 bits.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_RGBAIMAGESETWIDTH">
            <summary>
            SCI_RGBAIMAGESETWIDTH(int width)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_RGBAIMAGESETHEIGHT">
            <summary>
            SCI_RGBAIMAGESETHEIGHT(int height)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_RGBAIMAGESETSCALE">
            <summary>
            SCI_RGBAIMAGESETSCALE(int scalePercent)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_MARKERDEFINERGBAIMAGE">
            <summary>
            SCI_MARKERDEFINERGBAIMAGE(int markerNumber, const char *pixels)<br/>
            Markers can be set to translucent pixmaps with this message. The RGBA format is used for the pixmap. The width
            and height must previously been set with the SCI_RGBAIMAGESETWIDTH and SCI_RGBAIMAGESETHEIGHT messages.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_REGISTERRGBAIMAGE">
            <summary>
            SCI_REGISTERRGBAIMAGE(int type, const char *pixels)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETTECHNOLOGY">
            <summary>
            SCI_SETTECHNOLOGY(int technology)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETTECHNOLOGY">
            <summary>
            SCI_GETTECHNOLOGY -&gt; int<br/>
            The technology property allows choosing between different drawing APIs and options. On most platforms, the only
            choice is SC_TECHNOLOGY_DEFAULT (0). On Windows Vista or later, SC_TECHNOLOGY_DIRECTWRITE (1),
            SC_TECHNOLOGY_DIRECTWRITERETAIN (2), or SC_TECHNOLOGY_DIRECTWRITEDC (3) can be chosen to use the
            Direct2D and DirectWrite APIs for higher quality antialiased drawing. SC_TECHNOLOGY_DIRECTWRITERETAIN differs
            from SC_TECHNOLOGY_DIRECTWRITE by requesting that the frame is retained after being presented which may
            prevent drawing failures on some cards and drivers. SC_TECHNOLOGY_DIRECTWRITEDC differs from
            SC_TECHNOLOGY_DIRECTWRITE by using DirectWrite to draw into a GDI DC.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CREATELOADER">
            <summary>
            SCI_CREATELOADER(position bytes, int documentOptions) -&gt; pointer<br/>
            Create an object that supports the ILoader interface which can be used to load data and then be turned into a
            Scintilla document object for attachment to a view object. The bytes argument determines the initial memory
            allocation for the document as it is more efficient to allocate once rather than rely on the buffer growing as
            data is added. If SCI_CREATELOADER fails then 0 is returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FINDINDICATORSHOW">
            <summary>
            SCI_FINDINDICATORSHOW(position start, position end)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_FINDINDICATORFLASH">
            <summary>
            SCI_FINDINDICATORFLASH(position start, position end)<br/>
            These two messages show and animate the find indicator. The indicator remains visible with SCI_FINDINDICATORSHOW and
            fades out after showing for half a second with SCI_FINDINDICATORFLASH. SCI_FINDINDICATORSHOW behaves
            similarly to the macOS TextEdit and Safari applications and is best suited to editing documentation where the
            search target is often a word. SCI_FINDINDICATORFLASH is similar to Xcode and is suited to editing source code
            where the match will often be located next to operators which would otherwise be hidden under the indicator's
            padding.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEVISIBLEALWAYS">
            <summary>
            SCI_GETCARETLINEVISIBLEALWAYS -&gt; bool<br/>
            Choose to make the caret line always visible even when the window is not in focus. Default behaviour
            SCI_SETCARETLINEVISIBLEALWAYS(false) the caret line is only visible when the window is in focus.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINEVISIBLEALWAYS">
            <summary>
            SCI_SETCARETLINEVISIBLEALWAYS(bool alwaysVisible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETLINEENDTYPESALLOWED">
            <summary>
            SCI_SETLINEENDTYPESALLOWED(int lineEndBitSet)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINEENDTYPESALLOWED">
            <summary>
            SCI_GETLINEENDTYPESALLOWED -&gt; int<br/>
            By default, only the ASCII line ends are interpreted. Unicode line ends may be requested with
            SCI_SETLINEENDTYPESALLOWED(SC_LINE_END_TYPE_UNICODE) but this will be ineffective unless the lexer also allows
            you Unicode line ends. SCI_GETLINEENDTYPESALLOWED returns the current state.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINEENDTYPESACTIVE">
            <summary>
            SCI_GETLINEENDTYPESACTIVE -&gt; int<br/>
            SCI_GETLINEENDTYPESACTIVE reports the set of line ends currently interpreted by Scintilla. It is
            SCI_GETLINEENDTYPESSUPPORTED &amp; SCI_GETLINEENDTYPESALLOWED .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETREPRESENTATION">
            <summary>
            SCI_SETREPRESENTATION(const char *encodedCharacter, const char *representation)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETREPRESENTATION">
            <summary>
            SCI_GETREPRESENTATION(const char *encodedCharacter, char *representation NUL-terminated) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_CLEARREPRESENTATION">
            <summary>
            SCI_CLEARREPRESENTATION(const char *encodedCharacter)<br/>
            Any character, including those normally displayed as mnemonics may be represented by a Unicode string inverted in
            a rounded rectangle.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETREPRESENTATIONAPPEARANCE">
            <summary>
            SCI_SETREPRESENTATIONAPPEARANCE(const char *encodedCharacter, int appearance)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETREPRESENTATIONAPPEARANCE">
            <summary>
            SCI_GETREPRESENTATIONAPPEARANCE(const char *encodedCharacter) -&gt; int<br/>
            The appearance may be changed using these flags. If a colour is set and the appearance is set without
            SC_REPRESENTATION_COLOUR then the representation will show in the colour of the underlying text.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETREPRESENTATIONCOLOUR">
            <summary>
            SCI_SETREPRESENTATIONCOLOUR(const char *encodedCharacter, colouralpha colour)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETREPRESENTATIONCOLOUR">
            <summary>
            SCI_GETREPRESENTATIONCOLOUR(const char *encodedCharacter) -&gt; colouralpha<br/>
            The colour and translucency of a representation may be set.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EOLANNOTATIONSETTEXT">
            <summary>
            SCI_EOLANNOTATIONSETTEXT(line line, const char *text)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EOLANNOTATIONGETTEXT">
            <summary>
            SCI_EOLANNOTATIONGETTEXT(line line, char *text) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EOLANNOTATIONSETSTYLE">
            <summary>
            SCI_EOLANNOTATIONSETSTYLE(line line, int style)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EOLANNOTATIONGETSTYLE">
            <summary>
            SCI_EOLANNOTATIONGETSTYLE(line line) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EOLANNOTATIONSETVISIBLE">
            <summary>
            SCI_EOLANNOTATIONSETVISIBLE(int visible)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EOLANNOTATIONGETVISIBLE">
            <summary>
            SCI_EOLANNOTATIONGETVISIBLE -&gt; int<br/>
            End of Line Annotations can be made visible in a view and there is a choice of display style when visible. The two
            messages set and get the annotation display mode. The visible argument can be one of:
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EOLANNOTATIONSETSTYLEOFFSET">
            <summary>
            SCI_EOLANNOTATIONSETSTYLEOFFSET(int style)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_EOLANNOTATIONGETSTYLEOFFSET">
            <summary>
            SCI_EOLANNOTATIONGETSTYLEOFFSET -&gt; int<br/>
            End of Line Annotation styles may be completely separated from standard text styles by setting a style offset. For
            example, SCI_EOLANNOTATIONSETSTYLEOFFSET(512) would allow the end of line annotation styles to be numbered from
            512 up to 767 so they do not overlap styles set by lexers (or margins if margins offset is 256). Each style number
            set with SCI_EOLANNOTATIONSETSTYLE has the offset added before looking up the style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SUPPORTSFEATURE">
            <summary>
            SCI_SUPPORTSFEATURE(int feature) -&gt; bool<br/>
            Different platforms support different features and SCI_SUPPORTSFEATURE can be used to check which are currently
            available. For example, on Win32, Direct2D supports drawing translucent lines but GDI does not so
            SCI_SUPPORTSFEATURE(SC_SUPPORTS_TRANSLUCENT_STROKE) will return 1 for Direct2D and 0 for GDI. Its possible that
            translucent line drawing will be implemented in a future revision to the GDI platform layer or will be implemented
            on particular Windows versions. This call allows applications to tailor their settings: perhaps displaying a box
            with translucent coloured fill on Direct2D but a hollow box on GDI.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINECHARACTERINDEX">
            <summary>
            SCI_GETLINECHARACTERINDEX -&gt; int<br/>
            Returns which if any indexes are active. It may be SC_LINECHARACTERINDEX_NONE (0) or one or more of
            SC_LINECHARACTERINDEX_UTF32 (1) if whole characters are indexed or SC_LINECHARACTERINDEX_UTF16 (2) if UTF-16
            code units are indexed. Character indexes are currently only supported for UTF-8 documents.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ALLOCATELINECHARACTERINDEX">
            <summary>
            SCI_ALLOCATELINECHARACTERINDEX(int lineCharacterIndex)<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_RELEASELINECHARACTERINDEX">
            <summary>
            SCI_RELEASELINECHARACTERINDEX(int lineCharacterIndex)<br/>
            Allocate or release one or more indexes using same enumeration as SCI_GETLINECHARACTERINDEX. Different aspects
            of an application may need indexes for different periods and should allocate for those periods. Indexes use
            additional memory so releasing them can help minimize memory but they also take time to recalculate. Scintilla may
            also allocate indexes to support features like accessibility or input method editors. Only one index of each type
            is created for a document at a time.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_LINEFROMINDEXPOSITION">
            <summary>
            SCI_LINEFROMINDEXPOSITION(position pos, int lineCharacterIndex) -&gt; line<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_INDEXPOSITIONFROMLINE">
            <summary>
            SCI_INDEXPOSITIONFROMLINE(line line, int lineCharacterIndex) -&gt; position<br/>
            The document line of a particular character or code unit may be found by calling SCI_LINEFROMINDEXPOSITION with one
            of SC_LINECHARACTERINDEX_UTF32 (1) or SC_LINECHARACTERINDEX_UTF16 (2). The inverse action, finds the
            starting position of a document line either in characters or code units from the document start by calling
            SCI_INDEXPOSITIONFROMLINE with the same lineCharacterIndex argument.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLEXER">
            <summary>
            SCI_GETLEXER -&gt; int<br/>
            You can retrieve an integer lexer ID for the current lexer from the SCLEX_* enumeration in SciLexer.h. Some
            lexers may not have a lexer ID, just a lexer name in which case 0 is returned.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_COLOURISE">
            <summary>
            SCI_COLOURISE(position start, position end)<br/>
            This requests the current lexer or the container (if the lexer is set to NULL) to style the document between start
            and end. If end is -1, the document is styled from start to the end. If the "fold" property is
            set to "1" and your lexer or container supports folding, fold levels are also set. This message causes a
            redraw.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETPROPERTY">
            <summary>
            SCI_SETPROPERTY(const char *key, const char *value)<br/>
            You can communicate settings to lexers with keyword:value string pairs. There is no limit to the number of keyword
            pairs you can set, other than available memory. key is a case sensitive keyword, value is a string that is
            associated with the keyword. If there is already a value string associated with the keyword, it is replaced. If you
            pass a zero length string, the message does nothing. Both key and value are used without modification;
            extra spaces at the beginning or end of key are significant.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETKEYWORDS">
            <summary>
            SCI_SETKEYWORDS(int keyWordSet, const char *keyWords)<br/>
            You can set up to 9 lists of keywords for use by the current lexer. keyWordSet can be 0 to 8 (actually 0 to
            KEYWORDSET_MAX) and selects which keyword list to replace. keyWords is a list of keywords separated by
            spaces, tabs, "\n" or "\r" or any combination of these. It is expected that the keywords will be composed
            of standard ASCII printing characters, but there is nothing to stop you using any non-separator character codes
            from 1 to 255 (except common sense).
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPROPERTY">
            <summary>
            SCI_GETPROPERTY(const char *key, char *value NUL-terminated) -&gt; int<br/>
            Lookup a keyword:value pair using the specified key; if found, copy the value to the user-supplied buffer and
            return the length (not including the terminating 0). If not found, copy an empty string to the buffer and return
            0.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPROPERTYEXPANDED">
            <summary>
            SCI_GETPROPERTYEXPANDED(const char *key, char *value) -&gt; int<br/>
            This is now the same as SCI_GETPROPERTY- no expansion is performed.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPROPERTYINT">
            <summary>
            SCI_GETPROPERTYINT(const char *key, int defaultValue) -&gt; int<br/>
            Lookup a keyword:value pair using the specified key; if found, interpret the value as an integer and return it. If
            not found (or the value is an empty string) then return the supplied default. If the keyword:value pair is found but is
            not a number, then return 0.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLEXERLANGUAGE">
            <summary>
            SCI_GETLEXERLANGUAGE(&lt;unused&gt;, char *language NUL-terminated) -&gt; int<br/>
            SCI_GETLEXERLANGUAGE returns the name of the current lexer which must be set with SCI_SETILEXER. To locate
            the name for a lexer, open the relevant lexilla/lexers/Lex*.cxx file and search for LexerModule. The third
            argument in the LexerModule constructor is the name to use.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_PRIVATELEXERCALL">
            <summary>
            SCI_PRIVATELEXERCALL(int operation, pointer pointer) -&gt; pointer<br/>
            Call into a lexer in a way not understood by Scintilla.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_PROPERTYNAMES">
            <summary>
            SCI_PROPERTYNAMES(&lt;unused&gt;, char *names NUL-terminated) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_PROPERTYTYPE">
            <summary>
            SCI_PROPERTYTYPE(const char *name) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_DESCRIBEPROPERTY">
            <summary>
            SCI_DESCRIBEPROPERTY(const char *name, char *description NUL-terminated) -&gt; int<br/>
            Information may be retrieved about the properties that can be set for the current lexer. This information is only
            available for newer lexers. SCI_PROPERTYNAMES returns a string with all of the valid properties separated by "\n".
            If the lexer does not support this call then an empty string is returned. Properties may be boolean (
            SC_TYPE_BOOLEAN ), integer( SC_TYPE_INTEGER ), or string( SC_TYPE_STRING) and this is found with
            SCI_PROPERTYTYPE. A description of a property in English is returned by SCI_DESCRIBEPROPERTY .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_DESCRIBEKEYWORDSETS">
            <summary>
            SCI_DESCRIBEKEYWORDSETS(&lt;unused&gt;, char *descriptions NUL-terminated) -&gt; int<br/>
            A description of all of the keyword sets separated by "\n" is returned by SCI_DESCRIBEKEYWORDSETS .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETLINEENDTYPESSUPPORTED">
            <summary>
            SCI_GETLINEENDTYPESSUPPORTED -&gt; int<br/>
            SCI_GETLINEENDTYPESSUPPORTED reports the different types of line ends supported by the current lexer. This is a
            bit set although there is currently only a single choice with either SC_LINE_END_TYPE_DEFAULT (0) or
            SC_LINE_END_TYPE_UNICODE (1). These values are also used by the other messages concerned with Unicode line ends.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_ALLOCATESUBSTYLES">
            <summary>
            SCI_ALLOCATESUBSTYLES(int styleBase, int numberStyles) -&gt; int<br/>
            Allocate some number of substyles for a particular base style returning the first substyle number allocated. A
            failure, such as requesting more substyles than available, is indicated by returning a negative number. Lexers
            that support substyles will commonly allow allocating 64 substyles. Substyles are allocated contiguously.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSUBSTYLESSTART">
            <summary>
            SCI_GETSUBSTYLESSTART(int styleBase) -&gt; int<br/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSUBSTYLESLENGTH">
            <summary>
            SCI_GETSUBSTYLESLENGTH(int styleBase) -&gt; int<br/>
            Return the start and length of the substyles allocated for a base style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSTYLEFROMSUBSTYLE">
            <summary>
            SCI_GETSTYLEFROMSUBSTYLE(int subStyle) -&gt; int<br/>
            For a sub style, return the base style, else return the argument.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETPRIMARYSTYLEFROMSTYLE">
            <summary>
            SCI_GETPRIMARYSTYLEFROMSTYLE(int style) -&gt; int<br/>
            For a secondary style, return the primary style, else return the argument.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETIDENTIFIERS">
            <summary>
            SCI_SETIDENTIFIERS(int style, const char *identifiers)<br/>
            Similar to SCI_SETKEYWORDS but for substyles. The prefix feature available with SCI_SETKEYWORDS is not
            implemented for SCI_SETIDENTIFIERS .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_DISTANCETOSECONDARYSTYLES">
            <summary>
            SCI_DISTANCETOSECONDARYSTYLES -&gt; int<br/>
            Returns the distance between a primary style and its corresponding secondary style.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSUBSTYLEBASES">
            <summary>
            SCI_GETSUBSTYLEBASES(&lt;unused&gt;, char *styles NUL-terminated) -&gt; int<br/>
            Fill styles with a byte for each style that can be split into substyles.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETNAMEDSTYLES">
            <summary>
            SCI_GETNAMEDSTYLES -&gt; int<br/>
            Retrieve the number of named styles for the lexer.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_NAMEOFSTYLE">
            <summary>
            SCI_NAMEOFSTYLE(int style, char *name) -&gt; int<br/>
            Retrieve the name of a style. This is a C preprocessor symbol like "SCE_C_COMMENTDOC".
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_TAGSOFSTYLE">
            <summary>
            SCI_TAGSOFSTYLE(int style, char *tags) -&gt; int<br/>
            Retrieve the tags of a style. This is a space-separated set of words like "comment documentation".
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_DESCRIPTIONOFSTYLE">
            <summary>
            SCI_DESCRIPTIONOFSTYLE(int style, char *description) -&gt; int<br/>
            Retrieve an English-language description of a style which may be suitable for display in a user interface. This
            looks like "Doc comment: block comments beginning with /** or /*!".
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETILEXER">
            <summary>
            SCI_SETILEXER(&lt;unused&gt;, pointer ilexer)<br/>
            SCI_SETILEXER allows setting a lexer as an ILexer5*. The lexer may be implemented by an application or a
            shared library such as Lexilla.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_MOD_CHANGELINESTATE">
            <summary>
            SC_MOD_CHANGELINESTATE SCI_SETLINESTATE was called. line
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_MOD_CHANGEMARGIN">
            <summary>
            SC_MOD_CHANGEMARGIN line
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_MOD_CHANGEANNOTATION">
            <summary>
            SC_MOD_CHANGEANNOTATION line
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_MOD_CONTAINER">
            <summary>
            SC_MOD_CONTAINER SCI_ADDUNDOACTION . SC_MODEVENTMASKALL SCI_SETMODEVENTMASK . SCEN_CHANGE<br/>
            SCEN_CHANGE (768) is fired when the text (not the style) of the document changes. This notification is sent using
            the WM_COMMAND message on Windows and the "command" signal on GTK as this is the behaviour of the standard Edit
            control( SCEN_CHANGE has the same value as the Windows Edit control EN_CHANGE ). No other information
            is sent. If you need more detailed information use SCN_MODIFIED. You can filter the types of changes you
            are notified about with SCI_SETMODEVENTMASK and SCI_SETCOMMANDEVENTS .
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_MOD_LEXERSTATE">
            <summary>
            SC_MOD_LEXERSTATE position, length
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_MOD_INSERTCHECK">
            <summary>
            SC_MOD_INSERTCHECK SCI_CHANGEINSERTION . No other modifications may be made in this handler. position, length, text SC_MULTILINEUNDOREDO SC_STARTACTION
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SC_MOD_CHANGETABSTOPS">
            <summary>
            SC_MOD_CHANGETABSTOPS SCI_CLEARTABSTOPS or SCI_ADDTABSTOP was called. line
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_GETBIDIRECTIONAL">
            <summary>
            SCI_GETBIDIRECTIONAL -&gt; int<br/>
            Some languages, like Arabic and Hebrew, are written from right to left instead of from left to right as English is.
            Documents that use multiple languages may contain both directions and this is termed "bidirectional". The default
            text direction may be right to left or left to right. Scintilla only correctly displays bidirectional text on some
            platforms. Currently, there is experimental support for bidirectional text on Win32 using DirectWrite and on macOS
            using Cocoa. Only UTF-8 documents will show bidirectional behaviour and only in SC_BIDIRECTIONAL_L2R mode.
            Some features, such as virtual space may not work with bidirectional text or may work only in some circumstances.
            SC_BIDIRECTIONAL_R2L may be implemented in the future.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.SciMsg.SCI_SETBIDIRECTIONAL">
            <summary>
            SCI_SETBIDIRECTIONAL(int bidirectional)<br/>
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.ScintillaGateway">
             <summary>
             This it the plugin-writers primary interface to Notepad++/Scintilla.
             It takes away all the complexity with command numbers and Int-pointer casting.
            
             See http://www.scintilla.org/ScintillaDoc.html for further details.
             </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Utf8BytesToNullStrippedString(System.Byte[])">
            <summary>
            returns bytes decoded from UTF-8 as a string, with all trailing NULL bytes stripped off.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetNullStrippedStringFromMessageThatReturnsLength(Npp.DotNet.Plugin.SciMsg,System.UIntPtr)">
            <summary>
            Recall that all Scintilla methods have the signature
            (scintilla* scin, SciMsg msg, void* wParam, void* lParam) -&gt; void*<br></br>
            Many of these scintilla methods are bimodal in the following way<br></br>
            * if lParam is 0, return the length of the buffer to be filled and have no side effects. The wParam may be involved in telling Scintilla how big the buffer needs to be.<br></br>
            * if lParam is greater than 0, it is assumed to be a pointer to a buffer. Now the wParam indicates what the text will need to be.<br></br><br></br>
            This sets lParam to 0 to get the length, allocates a buffer of that length,<br></br>
            uses the second mode to fill a buffer,<br></br>
            and returns a string of the UTF8-decoded buffer with all trailing '\x00' chars stripped off.
            </summary>
            <param name="msg">message to send</param>
            <param name="wParam">another parameter for defining what the buffer should contain</param>
            <returns></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearSelectionToCursor">
            <summary>
            clears the selection without changing the position of the cursor
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCurrentLineNumber">
            <summary>
            Get the current line from the current position
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetScrollInfo(Npp.DotNet.Plugin.Win32.ScrollInfoMask,Npp.DotNet.Plugin.Win32.ScrollInfoBar)">
            <summary>
            Get the scroll information for the current Scintilla window.
            </summary>
            <param name="mask">Arguments for the scroll information such as tracking</param>
            <param name="scrollBar">Which scroll bar information are you looking for</param>
            <returns>A ScrollInfo struct with information of the current scroll state</returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AddText(System.Int32,System.String)">
            <summary>Add text to the document at current position. (Scintilla feature 2001)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AddStyledText(System.Int32,Npp.DotNet.Plugin.Cells)">
            <summary>Add array of cells to document. (Scintilla feature 2002)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.InsertText(System.Int32,System.String)">
            <summary>Insert string at a position. (Scintilla feature 2003)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ChangeInsertion(System.Int32,System.String)">
            <summary>Change the text that is being inserted in response to SC_MOD_INSERTCHECK (Scintilla feature 2672)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearAll">
            <summary>Delete all text in the document. (Scintilla feature 2004)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DeleteRange(System.Int32,System.Int32)">
            <summary>Delete a range of text in the document. (Scintilla feature 2645)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearDocumentStyle">
            <summary>Set all style bytes to 0, remove all folding information. (Scintilla feature 2005)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLength">
            <summary>Returns the number of bytes in the document. (Scintilla feature 2006)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCharAt(System.Int32)">
            <summary>Returns the character byte at the position. (Scintilla feature 2007)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCurrentPos">
            <summary>Returns the position of the caret. (Scintilla feature 2008)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAnchor">
            <summary>Returns the position of the opposite end of the selection to the caret. (Scintilla feature 2009)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetStyleAt(System.Int32)">
            <summary>Returns the style byte at the position. (Scintilla feature 2010)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Redo">
            <summary>Redoes the next action on the undo history. (Scintilla feature 2011)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetUndoCollection(System.Boolean)">
            <summary>
            Choose between collecting actions into the undo
            history and discarding them.
            (Scintilla feature 2012)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SelectAll">
            <summary>Select all the text in the document. (Scintilla feature 2013)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSavePoint">
            <summary>
            Remember the current position in the undo history as the position
            at which the document was saved.
            (Scintilla feature 2014)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetStyledText(Npp.DotNet.Plugin.TextRange)">
            <summary>
            Retrieve a buffer of cells.
            Returns the number of bytes in the buffer not including terminating NULs.
            (Scintilla feature 2015)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CanRedo">
            <summary>Are there any redoable actions in the undo history? (Scintilla feature 2016)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerLineFromHandle(System.Int32)">
            <summary>Retrieve the line number at which a particular marker is located. (Scintilla feature 2017)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerDeleteHandle(System.Int32)">
            <summary>Delete a marker. (Scintilla feature 2018)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetUndoCollection">
            <summary>Is undo history being collected? (Scintilla feature 2019)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetViewWS">
            <summary>
            Are white space characters currently visible?
            Returns one of SCWS_* constants.
            (Scintilla feature 2020)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetViewWS(Npp.DotNet.Plugin.WhiteSpace)">
            <summary>Make white space characters invisible, always visible or visible outside indentation. (Scintilla feature 2021)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTabDrawMode">
            <summary>
            Retrieve the current tab draw mode.
            Returns one of SCTD_* constants.
            (Scintilla feature 2698)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetTabDrawMode(Npp.DotNet.Plugin.TabDrawMode)">
            <summary>Set how tabs are drawn when visible. (Scintilla feature 2699)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PositionFromPoint(System.Int32,System.Int32)">
            <summary>Find the position from a point within the window. (Scintilla feature 2022)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PositionFromPointClose(System.Int32,System.Int32)">
            <summary>
            Find the position from a point within the window but return
            INVALID_POSITION if not close to text.
            (Scintilla feature 2023)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GotoLine(System.Int32)">
            <summary>Set caret to start of a line and ensure it is visible. (Scintilla feature 2024)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GotoPos(System.Int32)">
            <summary>Set caret to a position and ensure it is visible. (Scintilla feature 2025)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAnchor(System.Int32)">
            <summary>
            Set the selection anchor to a position. The anchor is the opposite
            end of the selection from the caret.
            (Scintilla feature 2026)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCurLine">
            <summary>
            Retrieve the text of the line containing the caret.
            Returns the index of the caret on the line.
            Result is NUL-terminated.
            (Scintilla feature 2027)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetEndStyled">
            <summary>Retrieve the position of the last correctly styled character. (Scintilla feature 2028)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ConvertEOLs(Npp.DotNet.Plugin.EndOfLine)">
            <summary>Convert all line endings in the document to one mode. (Scintilla feature 2029)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetEOLMode">
            <summary>Retrieve the current end of line mode - one of CRLF, CR, or LF. (Scintilla feature 2030)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetEOLMode(Npp.DotNet.Plugin.EndOfLine)">
            <summary>Set the current end of line mode. (Scintilla feature 2031)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StartStyling(System.Int32,System.Int32)">
            <summary>
            Set the current styling position to start.
            The unused parameter is no longer used and should be set to 0.
            (Scintilla feature 2032)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetStyling(System.Int32,System.Int32)">
            <summary>
            Change style from current styling position for length characters to a style
            and move the current styling position to after this newly styled segment.
            (Scintilla feature 2033)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetBufferedDraw">
            <summary>Is drawing done first into a buffer or direct to the screen? (Scintilla feature 2034)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetBufferedDraw(System.Boolean)">
            <summary>
            If drawing is buffered then each line of text is drawn into a bitmap buffer
            before drawing it to the screen to avoid flicker.
            (Scintilla feature 2035)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetTabWidth(System.Int32)">
            <summary>Change the visible size of a tab to be a multiple of the width of a space character. (Scintilla feature 2036)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTabWidth">
            <summary>Retrieve the visible size of a tab. (Scintilla feature 2121)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearTabStops(System.Int32)">
            <summary>Clear explicit tabstops on a line. (Scintilla feature 2675)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AddTabStop(System.Int32,System.Int32)">
            <summary>Add an explicit tab stop for a line. (Scintilla feature 2676)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetNextTabStop(System.Int32,System.Int32)">
            <summary>Find the next explicit tab stop position on a line after a position. (Scintilla feature 2677)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCodePage(System.Int32)">
            <summary>
            Set the code page used to interpret the bytes of the document as characters.
            The SC_CP_UTF8 value can be used to enter Unicode mode.
            (Scintilla feature 2037)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetIMEInteraction">
            <summary>Is the IME displayed in a window or inline? (Scintilla feature 2678)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetIMEInteraction(Npp.DotNet.Plugin.IMEInteraction)">
            <summary>Choose to display the the IME in a winow or inline. (Scintilla feature 2679)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerDefine(System.Int32,Npp.DotNet.Plugin.MarkerSymbol)">
            <summary>Set the symbol used for a particular marker number. (Scintilla feature 2040)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerSetFore(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour used for a particular marker number. (Scintilla feature 2041)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerSetBack(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour used for a particular marker number. (Scintilla feature 2042)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerSetBackSelected(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour used for a particular marker number when its folding block is selected. (Scintilla feature 2292)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerEnableHighlight(System.Boolean)">
            <summary>Enable/disable highlight for current folding bloc (smallest one that contains the caret) (Scintilla feature 2293)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerAdd(System.Int32,System.Int32)">
            <summary>Add a marker to a line, returning an ID which can be used to find or delete the marker. (Scintilla feature 2043)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerDelete(System.Int32,System.Int32)">
            <summary>Delete a marker from a line. (Scintilla feature 2044)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerDeleteAll(System.Int32)">
            <summary>Delete all markers with a particular number from all lines. (Scintilla feature 2045)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerGet(System.Int32)">
            <summary>Get a bit mask of all the markers set on a line. (Scintilla feature 2046)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerNext(System.Int32,System.Int32)">
            <summary>
            Find the next line at or after lineStart that includes a marker in mask.
            Return -1 when no more lines.
            (Scintilla feature 2047)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerPrevious(System.Int32,System.Int32)">
            <summary>Find the previous line before lineStart that includes a marker in mask. (Scintilla feature 2048)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerDefinePixmap(System.Int32,System.String)">
            <summary>Define a marker from a pixmap. (Scintilla feature 2049)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerAddSet(System.Int32,System.Int32)">
            <summary>Add a set of markers to a line. (Scintilla feature 2466)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerSetAlpha(System.Int32,Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha used for a marker that is drawn in the text area, not the margin. (Scintilla feature 2476)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginTypeN(System.Int32,Npp.DotNet.Plugin.MarginType)">
            <summary>Set a margin to be either numeric or symbolic. (Scintilla feature 2240)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginTypeN(System.Int32)">
            <summary>Retrieve the type of a margin. (Scintilla feature 2241)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginWidthN(System.Int32,System.Int32)">
            <summary>Set the width of a margin to a width expressed in pixels. (Scintilla feature 2242)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginWidthN(System.Int32)">
            <summary>Retrieve the width of a margin in pixels. (Scintilla feature 2243)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginMaskN(System.Int32,System.Int32)">
            <summary>Set a mask that determines which markers are displayed in a margin. (Scintilla feature 2244)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginMaskN(System.Int32)">
            <summary>Retrieve the marker mask of a margin. (Scintilla feature 2245)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginSensitiveN(System.Int32,System.Boolean)">
            <summary>Make a margin sensitive or insensitive to mouse clicks. (Scintilla feature 2246)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginSensitiveN(System.Int32)">
            <summary>Retrieve the mouse click sensitivity of a margin. (Scintilla feature 2247)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginCursorN(System.Int32,Npp.DotNet.Plugin.CursorShape)">
            <summary>Set the cursor shown when the mouse is inside a margin. (Scintilla feature 2248)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginCursorN(System.Int32)">
            <summary>Retrieve the cursor shown in a margin. (Scintilla feature 2249)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginBackN(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour of a margin. Only visible for SC_MARGIN_COLOUR. (Scintilla feature 2250)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginBackN(System.Int32)">
            <summary>Retrieve the background colour of a margin (Scintilla feature 2251)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMargins(System.Int32)">
            <summary>Allocate a non-standard number of margins. (Scintilla feature 2252)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMargins">
            <summary>How many margins are there?. (Scintilla feature 2253)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleClearAll">
            <summary>Clear all the styles and make equivalent to the global default style. (Scintilla feature 2050)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetFore(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of a style. (Scintilla feature 2051)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetBack(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour of a style. (Scintilla feature 2052)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetBold(System.Int32,System.Boolean)">
            <summary>Set a style to be bold or not. (Scintilla feature 2053)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetItalic(System.Int32,System.Boolean)">
            <summary>Set a style to be italic or not. (Scintilla feature 2054)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetSize(System.Int32,System.Int32)">
            <summary>Set the size of characters of a style. (Scintilla feature 2055)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetFont(System.Int32,System.String)">
            <summary>Set the font of a style. (Scintilla feature 2056)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetEOLFilled(System.Int32,System.Boolean)">
            <summary>Set a style to have its end of line filled or not. (Scintilla feature 2057)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleResetDefault">
            <summary>Reset the default style to its state at startup (Scintilla feature 2058)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetUnderline(System.Int32,System.Boolean)">
            <summary>Set a style to be underlined or not. (Scintilla feature 2059)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetFore(System.Int32)">
            <summary>Get the foreground colour of a style. (Scintilla feature 2481)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetBack(System.Int32)">
            <summary>Get the background colour of a style. (Scintilla feature 2482)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetBold(System.Int32)">
            <summary>Get is a style bold or not. (Scintilla feature 2483)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetItalic(System.Int32)">
            <summary>Get is a style italic or not. (Scintilla feature 2484)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetSize(System.Int32)">
            <summary>Get the size of characters of a style. (Scintilla feature 2485)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetFont(System.Int32)">
            <summary>
            Get the font of a style.
            Returns the length of the fontName
            Result is NUL-terminated.
            (Scintilla feature 2486)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetEOLFilled(System.Int32)">
            <summary>Get is a style to have its end of line filled or not. (Scintilla feature 2487)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetUnderline(System.Int32)">
            <summary>Get is a style underlined or not. (Scintilla feature 2488)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetCase(System.Int32)">
            <summary>Get is a style mixed case, or to force upper or lower case. (Scintilla feature 2489)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetCharacterSet(System.Int32)">
            <summary>Get the character get of the font in a style. (Scintilla feature 2490)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetVisible(System.Int32)">
            <summary>Get is a style visible or not. (Scintilla feature 2491)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetChangeable(System.Int32)">
            <summary>
            Get is a style changeable or not (read only).
            Experimental feature, currently buggy.
            (Scintilla feature 2492)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetHotSpot(System.Int32)">
            <summary>Get is a style a hotspot or not. (Scintilla feature 2493)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetCase(System.Int32,Npp.DotNet.Plugin.CaseVisible)">
            <summary>Set a style to be mixed case, or to force upper or lower case. (Scintilla feature 2060)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetSizeFractional(System.Int32,System.Int32)">
            <summary>Set the size of characters of a style. Size is in points multiplied by 100. (Scintilla feature 2061)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetSizeFractional(System.Int32)">
            <summary>Get the size of characters of a style in points multiplied by 100 (Scintilla feature 2062)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetWeight(System.Int32,Npp.DotNet.Plugin.FontWeight)">
            <summary>Set the weight of characters of a style. (Scintilla feature 2063)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleGetWeight(System.Int32)">
            <summary>Get the weight of characters of a style. (Scintilla feature 2064)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetCharacterSet(System.Int32,Npp.DotNet.Plugin.CharacterSet)">
            <summary>Set the character set of the font in a style. (Scintilla feature 2066)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetHotSpot(System.Int32,System.Boolean)">
            <summary>Set a style to be a hotspot or not. (Scintilla feature 2409)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelFore(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELFORE"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelBack(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELBACK"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelAlpha">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_GETSELALPHA"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelAlpha(Npp.DotNet.Plugin.Alpha)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETSELALPHA"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelEOLFilled">
            <summary>Is the selection end of line filled? (Scintilla feature 2479)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelEOLFilled(System.Boolean)">
            <summary>Set the selection to have its end of line filled or not. (Scintilla feature 2480)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretFore(Npp.DotNet.Plugin.Colour)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETFORE"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AssignCmdKey(Npp.DotNet.Plugin.KeyModifier,System.Int32)">
            <summary>When key+modifier combination keyDefinition is pressed perform sciCommand. (Scintilla feature 2070)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearCmdKey(Npp.DotNet.Plugin.KeyModifier)">
            <summary>When key+modifier combination keyDefinition is pressed do nothing. (Scintilla feature 2071)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearAllCmdKeys">
            <summary>Drop all key mappings. (Scintilla feature 2072)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetStylingEx(System.Int32,System.String)">
            <summary>Set the styles for a segment of the document. (Scintilla feature 2073)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetVisible(System.Int32,System.Boolean)">
            <summary>Set a style to be visible or not. (Scintilla feature 2074)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretPeriod">
            <summary>Get the time in milliseconds that the caret is on and off. (Scintilla feature 2075)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretPeriod(System.Int32)">
            <summary>Get the time in milliseconds that the caret is on and off. 0 = steady on. (Scintilla feature 2076)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWordChars(System.String)">
            <summary>
            Set the set of characters making up words for when moving or selecting by word.
            First sets defaults like SetCharsDefault.
            (Scintilla feature 2077)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetWordChars">
            <summary>
            Get the set of characters making up words for when moving or selecting by word.
            Returns the number of characters
            (Scintilla feature 2646)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCharacterCategoryOptimization(System.Int32)">
            <summary>Set the number of characters to have directly indexed categories (Scintilla feature 2720)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCharacterCategoryOptimization">
            <summary>Get the number of characters to have directly indexed categories (Scintilla feature 2721)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.BeginUndoAction">
            <summary>
            Start a sequence of actions that is undone and redone as a unit.
            May be nested.
            (Scintilla feature 2078)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.EndUndoAction">
            <summary>End a sequence of actions that is undone and redone as a unit. (Scintilla feature 2079)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicSetStyle(System.Int32,Npp.DotNet.Plugin.IndicatorStyle)">
            <summary>Set an indicator to plain, squiggle or TT. (Scintilla feature 2080)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicGetStyle(System.Int32)">
            <summary>Retrieve the style of an indicator. (Scintilla feature 2081)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicSetFore(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of an indicator. (Scintilla feature 2082)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicGetFore(System.Int32)">
            <summary>Retrieve the foreground colour of an indicator. (Scintilla feature 2083)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicSetUnder(System.Int32,System.Boolean)">
            <summary>Set an indicator to draw under text or over(default). (Scintilla feature 2510)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicGetUnder(System.Int32)">
            <summary>Retrieve whether indicator drawn under or over text. (Scintilla feature 2511)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicSetHoverStyle(System.Int32,Npp.DotNet.Plugin.IndicatorStyle)">
            <summary>Set a hover indicator to plain, squiggle or TT. (Scintilla feature 2680)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicGetHoverStyle(System.Int32)">
            <summary>Retrieve the hover style of an indicator. (Scintilla feature 2681)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicSetHoverFore(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground hover colour of an indicator. (Scintilla feature 2682)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicGetHoverFore(System.Int32)">
            <summary>Retrieve the foreground hover colour of an indicator. (Scintilla feature 2683)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicSetFlags(System.Int32,Npp.DotNet.Plugin.IndicFlag)">
            <summary>Set the attributes of an indicator. (Scintilla feature 2684)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicGetFlags(System.Int32)">
            <summary>Retrieve the attributes of an indicator. (Scintilla feature 2685)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWhitespaceFore(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of all whitespace and whether to use this setting. (Scintilla feature 2084)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWhitespaceBack(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour of all whitespace and whether to use this setting. (Scintilla feature 2085)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWhitespaceSize(System.Int32)">
            <summary>Set the size of the dots used to mark space characters. (Scintilla feature 2086)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetWhitespaceSize">
            <summary>Get the size of the dots used to mark space characters. (Scintilla feature 2087)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetLineState(System.Int32,System.Int32)">
            <summary>Used to hold extra styling information for each line. (Scintilla feature 2092)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineState(System.Int32)">
            <summary>Retrieve the extra styling information for a line. (Scintilla feature 2093)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMaxLineState">
            <summary>Retrieve the last line number that has line state. (Scintilla feature 2094)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretLineVisible">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEVISIBLE"/>
            <returns><see langword="true"/></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretLineVisible(System.Boolean)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINEVISIBLE"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretLineBack">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEBACK"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretLineBack(Npp.DotNet.Plugin.Colour)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEBACK"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretLineFrame">
            <summary>
            Retrieve the caret line frame width.
            Width = 0 means this option is disabled.
            (Scintilla feature 2704)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretLineFrame(System.Int32)">
            <summary>
            Display the caret line framed.
            Set width != 0 to enable this option and width = 0 to disable it.
            (Scintilla feature 2705)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StyleSetChangeable(System.Int32,System.Boolean)">
            <summary>
            Set a style to be changeable or not (read only).
            Experimental feature, currently buggy.
            (Scintilla feature 2099)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCShow(System.Int32,System.String)">
            <summary>
            Display a auto-completion list.
            The lengthEntered parameter indicates how many characters before
            the caret should be used to provide context.
            (Scintilla feature 2100)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCCancel">
            <summary>Remove the auto-completion list from the screen. (Scintilla feature 2101)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCActive">
            <summary>Is there an auto-completion list visible? (Scintilla feature 2102)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCPosStart">
            <summary>Retrieve the position of the caret when the auto-completion list was displayed. (Scintilla feature 2103)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCComplete">
            <summary>User has selected an item so remove the list and insert the selection. (Scintilla feature 2104)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCStops(System.String)">
            <summary>Define a set of character that when typed cancel the auto-completion list. (Scintilla feature 2105)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetSeparator(System.Int32)">
            <summary>
            Change the separator character in the string setting up an auto-completion list.
            Default is space but can be changed if items contain space.
            (Scintilla feature 2106)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetSeparator">
            <summary>Retrieve the auto-completion list separator character. (Scintilla feature 2107)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSelect(System.String)">
            <summary>Select the item in the auto-completion list that starts with a string. (Scintilla feature 2108)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetCancelAtStart(System.Boolean)">
            <summary>
            Should the auto-completion list be cancelled if the user backspaces to a
            position before where the box was created.
            (Scintilla feature 2110)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetCancelAtStart">
            <summary>Retrieve whether auto-completion cancelled by backspacing before start. (Scintilla feature 2111)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetFillUps(System.String)">
            <summary>
            Define a set of characters that when typed will cause the autocompletion to
            choose the selected item.
            (Scintilla feature 2112)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetChooseSingle(System.Boolean)">
            <summary>Should a single item auto-completion list automatically choose the item. (Scintilla feature 2113)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetChooseSingle">
            <summary>Retrieve whether a single item auto-completion list automatically choose the item. (Scintilla feature 2114)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetIgnoreCase(System.Boolean)">
            <summary>Set whether case is significant when performing auto-completion searches. (Scintilla feature 2115)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetIgnoreCase">
            <summary>Retrieve state of ignore case flag. (Scintilla feature 2116)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.UserListShow(System.Int32,System.String)">
            <summary>Display a list of strings and send notification when user chooses one. (Scintilla feature 2117)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetAutoHide(System.Boolean)">
            <summary>Set whether or not autocompletion is hidden automatically when nothing matches. (Scintilla feature 2118)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetAutoHide">
            <summary>Retrieve whether or not autocompletion is hidden automatically when nothing matches. (Scintilla feature 2119)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetDropRestOfWord(System.Boolean)">
            <summary>
            Set whether or not autocompletion deletes any word characters
            after the inserted text upon completion.
            (Scintilla feature 2270)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetDropRestOfWord">
            <summary>
            Retrieve whether or not autocompletion deletes any word characters
            after the inserted text upon completion.
            (Scintilla feature 2271)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.RegisterImage(System.Int32,System.String)">
            <summary>Register an XPM image for use in autocompletion lists. (Scintilla feature 2405)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearRegisteredImages">
            <summary>Clear all the registered XPM images. (Scintilla feature 2408)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetTypeSeparator">
            <summary>Retrieve the auto-completion list type-separator character. (Scintilla feature 2285)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetTypeSeparator(System.Int32)">
            <summary>
            Change the type-separator character in the string setting up an auto-completion list.
            Default is '?' but can be changed if items contain '?'.
            (Scintilla feature 2286)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetMaxWidth(System.Int32)">
            <summary>
            Set the maximum width, in characters, of auto-completion and user lists.
            Set to 0 to autosize to fit longest item, which is the default.
            (Scintilla feature 2208)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetMaxWidth">
            <summary>Get the maximum width, in characters, of auto-completion and user lists. (Scintilla feature 2209)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetMaxHeight(System.Int32)">
            <summary>
            Set the maximum height, in rows, of auto-completion and user lists.
            The default is 5 rows.
            (Scintilla feature 2210)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetMaxHeight">
            <summary>Set the maximum height, in rows, of auto-completion and user lists. (Scintilla feature 2211)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetIndent(System.Int32)">
            <summary>Set the number of spaces used for one level of indentation. (Scintilla feature 2122)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetIndent">
            <summary>Retrieve indentation size. (Scintilla feature 2123)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetUseTabs(System.Boolean)">
            <summary>
            Indentation will only use space characters if useTabs is false, otherwise
            it will use a combination of tabs and spaces.
            (Scintilla feature 2124)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetUseTabs">
            <summary>Retrieve whether tabs will be used in indentation. (Scintilla feature 2125)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetLineIndentation(System.Int32,System.Int32)">
            <summary>Change the indentation of a line to a number of columns. (Scintilla feature 2126)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineIndentation(System.Int32)">
            <summary>Retrieve the number of columns that a line is indented. (Scintilla feature 2127)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineIndentPosition(System.Int32)">
            <summary>Retrieve the position before the first non indentation character on a line. (Scintilla feature 2128)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetColumn(System.Int32)">
            <summary>Retrieve the column number of a position, taking tab width into account. (Scintilla feature 2129)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CountCharacters(System.Int32,System.Int32)">
            <summary>Count characters between two positions. (Scintilla feature 2633)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CountCodeUnits(System.Int32,System.Int32)">
            <summary>Count code units between two positions. (Scintilla feature 2715)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetHScrollBar(System.Boolean)">
            <summary>Show or hide the horizontal scroll bar. (Scintilla feature 2130)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetHScrollBar">
            <summary>Is the horizontal scroll bar visible? (Scintilla feature 2131)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetIndentationGuides(Npp.DotNet.Plugin.IndentView)">
            <summary>Show or hide indentation guides. (Scintilla feature 2132)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetIndentationGuides">
            <summary>Are the indentation guides visible? (Scintilla feature 2133)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetHighlightGuide(System.Int32)">
            <summary>
            Set the highlighted indentation guide column.
            0 = no highlighted guide.
            (Scintilla feature 2134)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetHighlightGuide">
            <summary>Get the highlighted indentation guide column. (Scintilla feature 2135)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineEndPosition(System.Int32)">
            <summary>Get the position after the last visible characters on a line. (Scintilla feature 2136)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCodePage">
            <summary>Get the code page used to interpret the bytes of the document as characters. (Scintilla feature 2137)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretFore">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETFORE"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetReadOnly">
            <summary>In read-only mode? (Scintilla feature 2140)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCurrentPos(System.Int32)">
            <summary>Sets the position of the caret. (Scintilla feature 2141)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionStart(System.Int32)">
            <summary>Sets the position that starts the selection - this becomes the anchor. (Scintilla feature 2142)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionStart">
            <summary>Returns the position at the start of the selection. (Scintilla feature 2143)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionEnd(System.Int32)">
            <summary>Sets the position that ends the selection - this becomes the caret. (Scintilla feature 2144)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionEnd">
            <summary>Returns the position at the end of the selection. (Scintilla feature 2145)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetEmptySelection(System.Int32)">
            <summary>Set caret to a position, while removing any existing selection. (Scintilla feature 2556)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetPrintMagnification(System.Int32)">
            <summary>Sets the print magnification added to the point size of each style for printing. (Scintilla feature 2146)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPrintMagnification">
            <summary>Returns the print magnification. (Scintilla feature 2147)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetPrintColourMode(Npp.DotNet.Plugin.PrintOption)">
            <summary>Modify colours when printing for clearer printed text. (Scintilla feature 2148)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPrintColourMode">
            <summary>Returns the print colour mode. (Scintilla feature 2149)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FindText(Npp.DotNet.Plugin.FindOption,Npp.DotNet.Plugin.TextToFind)">
            <summary>Find some text in the document. (Scintilla feature 2150)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetFirstVisibleLine">
            <summary>Retrieve the display line at the top of the display. (Scintilla feature 2152)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLine(System.Int32)">
            <summary>
            Retrieve the contents of a line.
            Returns the length of the line.
            (Scintilla feature 2153)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineCount">
            <summary>Returns the number of lines in the document. There is always at least one. (Scintilla feature 2154)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginLeft(System.Int32)">
            <summary>Sets the size in pixels of the left margin. (Scintilla feature 2155)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginLeft">
            <summary>Returns the size in pixels of the left margin. (Scintilla feature 2156)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginRight(System.Int32)">
            <summary>Sets the size in pixels of the right margin. (Scintilla feature 2157)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginRight">
            <summary>Returns the size in pixels of the right margin. (Scintilla feature 2158)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetModify">
            <summary>Is the document different from when it was last saved? (Scintilla feature 2159)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSel(System.Int32,System.Int32)">
            <summary>Select a range of text. (Scintilla feature 2160)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelText">
            <summary>
            Retrieve the selected text.
            Return the length of the text.
            Result is NUL-terminated.
            (Scintilla feature 2161)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTextRange(Npp.DotNet.Plugin.TextRange)">
            <summary>
            Retrieve a range of text.
            Return the length of the text.
            (Scintilla feature 2162)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.HideSelection(System.Boolean)">
            <summary>Draw the selection either highlighted or in normal (non-highlighted) style. (Scintilla feature 2163)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PointXFromPosition(System.Int32)">
            <summary>Retrieve the x value of the point in the window where a position is displayed. (Scintilla feature 2164)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PointYFromPosition(System.Int32)">
            <summary>Retrieve the y value of the point in the window where a position is displayed. (Scintilla feature 2165)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineFromPosition(System.Int32)">
            <summary>Retrieve the line containing a position. (Scintilla feature 2166)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PositionFromLine(System.Int32)">
            <summary>Retrieve the position at the start of a line. (Scintilla feature 2167)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineScroll(System.Int32,System.Int32)">
            <summary>Scroll horizontally and vertically. (Scintilla feature 2168)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ScrollCaret">
            <summary>Ensure the caret is visible. (Scintilla feature 2169)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ScrollRange(System.Int32,System.Int32)">
            <summary>
            Scroll the argument positions and the range between them into view giving
            priority to the primary position then the secondary position.
            This may be used to make a search match visible.
            (Scintilla feature 2569)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ReplaceSel(System.String)">
            <summary>Replace the selected text with the argument text. (Scintilla feature 2170)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetReadOnly(System.Boolean)">
            <summary>Set to read only or read write. (Scintilla feature 2171)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Null">
            <summary>Null operation. (Scintilla feature 2172)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CanPaste">
            <summary>Will a paste succeed? (Scintilla feature 2173)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CanUndo">
            <summary>Are there any undoable actions in the undo history? (Scintilla feature 2174)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.EmptyUndoBuffer">
            <summary>Delete the undo history. (Scintilla feature 2175)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Undo">
            <summary>Undo one action in the undo history. (Scintilla feature 2176)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Cut">
            <summary>Cut the selection to the clipboard. (Scintilla feature 2177)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Copy">
            <summary>Copy the selection to the clipboard. (Scintilla feature 2178)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Paste">
            <summary>Paste the contents of the clipboard into the document replacing the selection. (Scintilla feature 2179)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Clear">
            <summary>Clear the selection. (Scintilla feature 2180)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetText(System.String)">
            <summary>Replace the contents of the document with the argument text. (Scintilla feature 2181)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetText(System.Int32)">
            <summary>
            Retrieve all the text in the document.
            Returns number of characters retrieved.
            Result is NUL-terminated.
            (Scintilla feature 2182)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTextLength">
            <summary>Retrieve the number of characters in the document. (Scintilla feature 2183)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetDirectFunction">
            <summary>Retrieve a pointer to a function that processes messages for this Scintilla. (Scintilla feature 2184)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetDirectPointer">
            <summary>
            Retrieve a pointer value to use as the first argument when calling
            the function returned by GetDirectFunction.
            (Scintilla feature 2185)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetOvertype(System.Boolean)">
            <summary>Set to overtype (true) or insert mode. (Scintilla feature 2186)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetOvertype">
            <summary>Returns true if overtype mode is active otherwise false is returned. (Scintilla feature 2187)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretWidth(System.Int32)">
            <summary>Set the width of the insert mode caret. (Scintilla feature 2188)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretWidth">
            <summary>Returns the width of the insert mode caret. (Scintilla feature 2189)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetTargetStart(System.Int32)">
            <summary>
            Sets the position that starts the target which is used for updating the
            document without affecting the scroll position.
            (Scintilla feature 2190)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTargetStart">
            <summary>Get the position that starts the target. (Scintilla feature 2191)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetTargetEnd(System.Int32)">
            <summary>
            Sets the position that ends the target which is used for updating the
            document without affecting the scroll position.
            (Scintilla feature 2192)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTargetEnd">
            <summary>Get the position that ends the target. (Scintilla feature 2193)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetTargetRange(System.Int32,System.Int32)">
            <summary>Sets both the start and end of the target in one call. (Scintilla feature 2686)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTargetText">
            <summary>Retrieve the text in the target. (Scintilla feature 2687)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.TargetFromSelection">
            <summary>Make the target range start and end be the same as the selection range start and end. (Scintilla feature 2287)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.TargetWholeDocument">
            <summary>Sets the target to the whole document. (Scintilla feature 2690)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ReplaceTarget(System.Int32,System.String)">
            <summary>
            Replace the target text with the argument text.
            Text is counted so it can contain NULs.
            Returns the length of the replacement text.
            (Scintilla feature 2194)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ReplaceTargetRE(System.Int32,System.String)">
            <summary>
            Replace the target text with the argument text after \d processing.
            Text is counted so it can contain NULs.
            Looks for \d where d is between 1 and 9 and replaces these with the strings
            matched in the last search operation which were surrounded by \( and \).
            Returns the length of the replacement text including any change
            caused by processing the \d patterns.
            (Scintilla feature 2195)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SearchInTarget(System.Int32,System.String)">
            <summary>
            Search for a counted string in the target and set the target to the found
            range. Text is counted so it can contain NULs.
            Returns start of found range or -1 for failure in which case target is not moved.
            (Scintilla feature 2197)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSearchFlags(Npp.DotNet.Plugin.FindOption)">
            <summary>Set the search flags used by SearchInTarget. (Scintilla feature 2198)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSearchFlags">
            <summary>Get the search flags used by SearchInTarget. (Scintilla feature 2199)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipShow(System.Int32,System.String)">
            <summary>Show a call tip containing a definition near position pos. (Scintilla feature 2200)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipCancel">
            <summary>Remove the call tip from the screen. (Scintilla feature 2201)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipActive">
            <summary>Is there an active call tip? (Scintilla feature 2202)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipPosStart">
            <summary>Retrieve the position where the caret was before displaying the call tip. (Scintilla feature 2203)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipSetPosStart(System.Int32)">
            <summary>Set the start position in order to change when backspacing removes the calltip. (Scintilla feature 2214)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipSetHlt(System.Int32,System.Int32)">
            <summary>Highlight a segment of the definition. (Scintilla feature 2204)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipSetBack(Npp.DotNet.Plugin.Colour)">
            <summary>Set the background colour for the call tip. (Scintilla feature 2205)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipSetFore(Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour for the call tip. (Scintilla feature 2206)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipSetForeHlt(Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour for the highlighted part of the call tip. (Scintilla feature 2207)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipUseStyle(System.Int32)">
            <summary>Enable use of STYLE_CALLTIP and set call tip tab size in pixels. (Scintilla feature 2212)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CallTipSetPosition(System.Boolean)">
            <summary>Set position of calltip, above or below text. (Scintilla feature 2213)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VisibleFromDocLine(System.Int32)">
            <summary>Find the display line of a document line taking hidden lines into account. (Scintilla feature 2220)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DocLineFromVisible(System.Int32)">
            <summary>Find the document line of a display line taking hidden lines into account. (Scintilla feature 2221)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WrapCount(System.Int32)">
            <summary>The number of display lines needed to wrap a document line (Scintilla feature 2235)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetFoldLevel(System.Int32,Npp.DotNet.Plugin.FoldLevel)">
            <summary>
            Set the fold level of a line.
            This encodes an integer level along with flags indicating whether the
            line is a header and whether it is effectively white space.
            (Scintilla feature 2222)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetFoldLevel(System.Int32)">
            <summary>Retrieve the fold level of a line. (Scintilla feature 2223)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLastChild(System.Int32,Npp.DotNet.Plugin.FoldLevel)">
            <summary>Find the last child line of a header line. (Scintilla feature 2224)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetFoldParent(System.Int32)">
            <summary>Find the parent line of a child line. (Scintilla feature 2225)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ShowLines(System.Int32,System.Int32)">
            <summary>Make a range of lines visible. (Scintilla feature 2226)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.HideLines(System.Int32,System.Int32)">
            <summary>Make a range of lines invisible. (Scintilla feature 2227)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineVisible(System.Int32)">
            <summary>Is a line visible? (Scintilla feature 2228)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAllLinesVisible">
            <summary>Are all lines visible? (Scintilla feature 2236)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetFoldExpanded(System.Int32,System.Boolean)">
            <summary>Show the children of a header line. (Scintilla feature 2229)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetFoldExpanded(System.Int32)">
            <summary>Is a header line expanded? (Scintilla feature 2230)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ToggleFold(System.Int32)">
            <summary>Switch a header line between expanded and contracted. (Scintilla feature 2231)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ToggleFoldShowText(System.Int32,System.String)">
            <summary>Switch a header line between expanded and contracted and show some text after the line. (Scintilla feature 2700)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FoldDisplayTextSetStyle(Npp.DotNet.Plugin.FoldDisplayTextStyle)">
            <summary>Set the style of fold display text. (Scintilla feature 2701)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FoldDisplayTextGetStyle">
            <summary>Get the style of fold display text. (Scintilla feature 2707)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetDefaultFoldDisplayText(System.String)">
            <summary>Set the default fold display text. (Scintilla feature 2722)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetDefaultFoldDisplayText">
            <summary>Get the default fold display text. (Scintilla feature 2723)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FoldLine(System.Int32,Npp.DotNet.Plugin.FoldAction)">
            <summary>Expand or contract a fold header. (Scintilla feature 2237)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FoldChildren(System.Int32,Npp.DotNet.Plugin.FoldAction)">
            <summary>Expand or contract a fold header and its children. (Scintilla feature 2238)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ExpandChildren(System.Int32,Npp.DotNet.Plugin.FoldLevel)">
            <summary>Expand a fold header and all children. Use the level argument instead of the line's current level. (Scintilla feature 2239)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FoldAll(Npp.DotNet.Plugin.FoldAction)">
            <summary>Expand or contract all fold headers. (Scintilla feature 2662)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.EnsureVisible(System.Int32)">
            <summary>Ensure a particular line is visible by expanding any header line hiding it. (Scintilla feature 2232)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAutomaticFold(Npp.DotNet.Plugin.AutomaticFold)">
            <summary>Set automatic folding behaviours. (Scintilla feature 2663)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAutomaticFold">
            <summary>Get automatic folding behaviours. (Scintilla feature 2664)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetFoldFlags(Npp.DotNet.Plugin.FoldFlag)">
            <summary>Set some style options for folding. (Scintilla feature 2233)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.EnsureVisibleEnforcePolicy(System.Int32)">
            <summary>
            Ensure a particular line is visible by expanding any header line hiding it.
            Use the currently set visibility policy to determine which range to display.
            (Scintilla feature 2234)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetTabIndents(System.Boolean)">
            <summary>Sets whether a tab pressed when caret is within indentation indents. (Scintilla feature 2260)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTabIndents">
            <summary>Does a tab pressed when caret is within indentation indent? (Scintilla feature 2261)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetBackSpaceUnIndents(System.Boolean)">
            <summary>Sets whether a backspace pressed when caret is within indentation unindents. (Scintilla feature 2262)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetBackSpaceUnIndents">
            <summary>Does a backspace pressed when caret is within indentation unindent? (Scintilla feature 2263)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMouseDwellTime(System.Int32)">
            <summary>Sets the time the mouse must sit still to generate a mouse dwell event. (Scintilla feature 2264)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMouseDwellTime">
            <summary>Retrieve the time the mouse must sit still to generate a mouse dwell event. (Scintilla feature 2265)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordStartPosition(System.Int32,System.Boolean)">
            <summary>Get position of start of word. (Scintilla feature 2266)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordEndPosition(System.Int32,System.Boolean)">
            <summary>Get position of end of word. (Scintilla feature 2267)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IsRangeWord(System.Int32,System.Int32)">
            <summary>Is the range start..end considered a word? (Scintilla feature 2691)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetIdleStyling(Npp.DotNet.Plugin.IdleStyling)">
            <summary>Sets limits to idle styling. (Scintilla feature 2692)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetIdleStyling">
            <summary>Retrieve the limits to idle styling. (Scintilla feature 2693)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWrapMode(Npp.DotNet.Plugin.Wrap)">
            <summary>Sets whether text is word wrapped. (Scintilla feature 2268)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetWrapMode">
            <summary>Retrieve whether text is word wrapped. (Scintilla feature 2269)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWrapVisualFlags(Npp.DotNet.Plugin.WrapVisualFlag)">
            <summary>Set the display mode of visual flags for wrapped lines. (Scintilla feature 2460)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetWrapVisualFlags">
            <summary>Retrive the display mode of visual flags for wrapped lines. (Scintilla feature 2461)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWrapVisualFlagsLocation(Npp.DotNet.Plugin.WrapVisualLocation)">
            <summary>Set the location of visual flags for wrapped lines. (Scintilla feature 2462)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetWrapVisualFlagsLocation">
            <summary>Retrive the location of visual flags for wrapped lines. (Scintilla feature 2463)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWrapStartIndent(System.Int32)">
            <summary>Set the start indent for wrapped lines. (Scintilla feature 2464)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetWrapStartIndent">
            <summary>Retrive the start indent for wrapped lines. (Scintilla feature 2465)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWrapIndentMode(Npp.DotNet.Plugin.WrapIndentMode)">
            <summary>Sets how wrapped sublines are placed. Default is fixed. (Scintilla feature 2472)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetWrapIndentMode">
            <summary>Retrieve how wrapped sublines are placed. Default is fixed. (Scintilla feature 2473)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetLayoutCache(Npp.DotNet.Plugin.LineCache)">
            <summary>Sets the degree of caching of layout information. (Scintilla feature 2272)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLayoutCache">
            <summary>Retrieve the degree of caching of layout information. (Scintilla feature 2273)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetScrollWidth(System.Int32)">
            <summary>Sets the document width assumed for scrolling. (Scintilla feature 2274)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetScrollWidth">
            <summary>Retrieve the document width assumed for scrolling. (Scintilla feature 2275)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetScrollWidthTracking(System.Boolean)">
            <summary>Sets whether the maximum width line displayed is used to set scroll width. (Scintilla feature 2516)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetScrollWidthTracking">
            <summary>Retrieve whether the scroll width tracks wide lines. (Scintilla feature 2517)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.TextWidth(System.Int32,System.String)">
            <summary>
            Measure the pixel width of some text in a particular style.
            NUL terminated text argument.
            Does not handle tab or control characters.
            (Scintilla feature 2276)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetEndAtLastLine(System.Boolean)">
            <summary>
            Sets the scroll range so that maximum scroll position has
            the last line at the bottom of the view (default).
            Setting this to false allows scrolling one page below the last line.
            (Scintilla feature 2277)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetEndAtLastLine">
            <summary>
            Retrieve whether the maximum scroll position has the last
            line at the bottom of the view.
            (Scintilla feature 2278)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.TextHeight(System.Int32)">
            <summary>Retrieve the height of a particular line of text in pixels. (Scintilla feature 2279)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetVScrollBar(System.Boolean)">
            <summary>Show or hide the vertical scroll bar. (Scintilla feature 2280)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetVScrollBar">
            <summary>Is the vertical scroll bar visible? (Scintilla feature 2281)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AppendText(System.Int32,System.String)">
            <summary>Append a string to the end of the document without changing the selection. (Scintilla feature 2282)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPhasesDraw">
            <summary>How many phases is drawing done in? (Scintilla feature 2673)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetPhasesDraw(Npp.DotNet.Plugin.PhasesDraw)">
            <summary>
            In one phase draw, text is drawn in a series of rectangular blocks with no overlap.
            In two phase draw, text is drawn in a series of lines allowing runs to overlap horizontally.
            In multiple phase draw, each element is drawn over the whole drawing area, allowing text
            to overlap from one line to the next.
            (Scintilla feature 2674)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetFontQuality(Npp.DotNet.Plugin.FontQuality)">
            <summary>Choose the quality level for text from the FontQuality enumeration. (Scintilla feature 2611)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetFontQuality">
            <summary>Retrieve the quality level for text. (Scintilla feature 2612)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetFirstVisibleLine(System.Int32)">
            <summary>Scroll so that a display line is at the top of the display. (Scintilla feature 2613)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMultiPaste(Npp.DotNet.Plugin.MultiPaste)">
            <summary>Change the effect of pasting when there are multiple selections. (Scintilla feature 2614)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMultiPaste">
            <summary>Retrieve the effect of pasting when there are multiple selections. (Scintilla feature 2615)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTag(System.Int32)">
            <summary>
            Retrieve the value of a tag from a regular expression search.
            Result is NUL-terminated.
            (Scintilla feature 2616)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LinesJoin">
            <summary>Join the lines in the target. (Scintilla feature 2288)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LinesSplit(System.Int32)">
            <summary>
            Split the lines in the target into lines that are less wide than pixelWidth
            where possible.
            (Scintilla feature 2289)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetFoldMarginColour(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set one of the colours used as a chequerboard pattern in the fold margin (Scintilla feature 2290)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetFoldMarginHiColour(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <summary>Set the other colour used as a chequerboard pattern in the fold margin (Scintilla feature 2291)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAccessibility(Npp.DotNet.Plugin.Accessibility)">
            <summary>Enable or disable accessibility. (Scintilla feature 2702)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAccessibility">
            <summary>Report accessibility status. (Scintilla feature 2703)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineDown">
            <summary>Move caret down one line. (Scintilla feature 2300)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineDownExtend">
            <summary>Move caret down one line extending selection to new caret position. (Scintilla feature 2301)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineUp">
            <summary>Move caret up one line. (Scintilla feature 2302)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineUpExtend">
            <summary>Move caret up one line extending selection to new caret position. (Scintilla feature 2303)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CharLeft">
            <summary>Move caret left one character. (Scintilla feature 2304)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CharLeftExtend">
            <summary>Move caret left one character extending selection to new caret position. (Scintilla feature 2305)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CharRight">
            <summary>Move caret right one character. (Scintilla feature 2306)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CharRightExtend">
            <summary>Move caret right one character extending selection to new caret position. (Scintilla feature 2307)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordLeft">
            <summary>Move caret left one word. (Scintilla feature 2308)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordLeftExtend">
            <summary>Move caret left one word extending selection to new caret position. (Scintilla feature 2309)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordRight">
            <summary>Move caret right one word. (Scintilla feature 2310)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordRightExtend">
            <summary>Move caret right one word extending selection to new caret position. (Scintilla feature 2311)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Home">
            <summary>Move caret to first position on line. (Scintilla feature 2312)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.HomeExtend">
            <summary>Move caret to first position on line extending selection to new caret position. (Scintilla feature 2313)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineEnd">
            <summary>Move caret to last position on line. (Scintilla feature 2314)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineEndExtend">
            <summary>Move caret to last position on line extending selection to new caret position. (Scintilla feature 2315)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DocumentStart">
            <summary>Move caret to first position in document. (Scintilla feature 2316)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DocumentStartExtend">
            <summary>Move caret to first position in document extending selection to new caret position. (Scintilla feature 2317)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DocumentEnd">
            <summary>Move caret to last position in document. (Scintilla feature 2318)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DocumentEndExtend">
            <summary>Move caret to last position in document extending selection to new caret position. (Scintilla feature 2319)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PageUp">
            <summary>Move caret one page up. (Scintilla feature 2320)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PageUpExtend">
            <summary>Move caret one page up extending selection to new caret position. (Scintilla feature 2321)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PageDown">
            <summary>Move caret one page down. (Scintilla feature 2322)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PageDownExtend">
            <summary>Move caret one page down extending selection to new caret position. (Scintilla feature 2323)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.EditToggleOvertype">
            <summary>Switch from insert to overtype mode or the reverse. (Scintilla feature 2324)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Cancel">
            <summary>Cancel any modes such as call tip or auto-completion list display. (Scintilla feature 2325)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DeleteBack">
            <summary>Delete the selection or if no selection, the character before the caret. (Scintilla feature 2326)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Tab">
            <summary>
            If selection is empty or all on one line replace the selection with a tab character.
            If more than one line selected, indent the lines.
            (Scintilla feature 2327)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.BackTab">
            <summary>Dedent the selected lines. (Scintilla feature 2328)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.NewLine">
            <summary>Insert a new line, may use a CRLF, CR or LF depending on EOL mode. (Scintilla feature 2329)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FormFeed">
            <summary>Insert a Form Feed character. (Scintilla feature 2330)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VCHome">
            <summary>
            Move caret to before first visible character on line.
            If already there move to first character on line.
            (Scintilla feature 2331)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VCHomeExtend">
            <summary>Like VCHome but extending selection to new caret position. (Scintilla feature 2332)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ZoomIn">
            <summary>Magnify the displayed text by increasing the sizes by 1 point. (Scintilla feature 2333)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ZoomOut">
            <summary>Make the displayed text smaller by decreasing the sizes by 1 point. (Scintilla feature 2334)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DelWordLeft">
            <summary>Delete the word to the left of the caret. (Scintilla feature 2335)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DelWordRight">
            <summary>Delete the word to the right of the caret. (Scintilla feature 2336)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DelWordRightEnd">
            <summary>Delete the word to the right of the caret, but not the trailing non-word characters. (Scintilla feature 2518)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineCut">
            <summary>Cut the line containing the caret. (Scintilla feature 2337)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineDelete">
            <summary>Delete the line containing the caret. (Scintilla feature 2338)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineTranspose">
            <summary>Switch the current line with the previous. (Scintilla feature 2339)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineReverse">
            <summary>Reverse order of selected lines. (Scintilla feature 2354)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineDuplicate">
            <summary>Duplicate the current line. (Scintilla feature 2404)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LowerCase">
            <summary>Transform the selection to lower case. (Scintilla feature 2340)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.UpperCase">
            <summary>Transform the selection to upper case. (Scintilla feature 2341)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineScrollDown">
            <summary>Scroll the document down, keeping the caret visible. (Scintilla feature 2342)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineScrollUp">
            <summary>Scroll the document up, keeping the caret visible. (Scintilla feature 2343)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DeleteBackNotLine">
            <summary>
            Delete the selection or if no selection, the character before the caret.
            Will not delete the character before at the start of a line.
            (Scintilla feature 2344)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.HomeDisplay">
            <summary>Move caret to first position on display line. (Scintilla feature 2345)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.HomeDisplayExtend">
            <summary>
            Move caret to first position on display line extending selection to
            new caret position.
            (Scintilla feature 2346)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineEndDisplay">
            <summary>Move caret to last position on display line. (Scintilla feature 2347)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineEndDisplayExtend">
            <summary>
            Move caret to last position on display line extending selection to new
            caret position.
            (Scintilla feature 2348)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.HomeWrap">
            <summary>
            Like Home but when word-wrap is enabled goes first to start of display line
            HomeDisplay, then to start of document line Home.
            (Scintilla feature 2349)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.HomeWrapExtend">
            <summary>
            Like HomeExtend but when word-wrap is enabled extends first to start of display line
            HomeDisplayExtend, then to start of document line HomeExtend.
            (Scintilla feature 2450)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineEndWrap">
            <summary>
            Like LineEnd but when word-wrap is enabled goes first to end of display line
            LineEndDisplay, then to start of document line LineEnd.
            (Scintilla feature 2451)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineEndWrapExtend">
            <summary>
            Like LineEndExtend but when word-wrap is enabled extends first to end of display line
            LineEndDisplayExtend, then to start of document line LineEndExtend.
            (Scintilla feature 2452)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VCHomeWrap">
            <summary>
            Like VCHome but when word-wrap is enabled goes first to start of display line
            VCHomeDisplay, then behaves like VCHome.
            (Scintilla feature 2453)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VCHomeWrapExtend">
            <summary>
            Like VCHomeExtend but when word-wrap is enabled extends first to start of display line
            VCHomeDisplayExtend, then behaves like VCHomeExtend.
            (Scintilla feature 2454)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineCopy">
            <summary>Copy the line containing the caret. (Scintilla feature 2455)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MoveCaretInsideView">
            <summary>Move the caret inside current view if it's not there already. (Scintilla feature 2401)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineLength(System.Int32)">
            <summary>How many characters are on a line, including end of line characters? (Scintilla feature 2350)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.BraceHighlight(System.Int32,System.Int32)">
            <summary>Highlight the characters at two positions. (Scintilla feature 2351)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.BraceHighlightIndicator(System.Boolean,System.Int32)">
            <summary>Use specified indicator to highlight matching braces instead of changing their style. (Scintilla feature 2498)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.BraceBadLight(System.Int32)">
            <summary>Highlight the character at a position indicating there is no matching brace. (Scintilla feature 2352)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.BraceBadLightIndicator(System.Boolean,System.Int32)">
            <summary>Use specified indicator to highlight non matching brace instead of changing its style. (Scintilla feature 2499)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.BraceMatch(System.Int32,System.Int32)">
            <summary>
            Find the position of a matching brace or INVALID_POSITION if no match.
            The maxReStyle must be 0 for now. It may be defined in a future release.
            (Scintilla feature 2353)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetViewEOL">
            <summary>Are the end of line characters visible? (Scintilla feature 2355)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetViewEOL(System.Boolean)">
            <summary>Make the end of line characters visible or invisible. (Scintilla feature 2356)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetDocPointer">
            <summary>Retrieve a pointer to the document object. (Scintilla feature 2357)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetDocPointer(System.IntPtr)">
            <summary>Change the document object used. (Scintilla feature 2358)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetModEventMask(Npp.DotNet.Plugin.ModificationFlags)">
            <summary>Set which document modification events are sent to the container. (Scintilla feature 2359)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetEdgeColumn">
            <summary>Retrieve the column number which text should be kept within. (Scintilla feature 2360)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetEdgeColumn(System.Int32)">
            <summary>
            Set the column number of the edge.
            If text goes past the edge then it is highlighted.
            (Scintilla feature 2361)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetEdgeMode">
            <summary>Retrieve the edge highlight mode. (Scintilla feature 2362)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetEdgeMode(Npp.DotNet.Plugin.EdgeVisualStyle)">
            <summary>
            The edge may be displayed by a line (EDGE_LINE/EDGE_MULTILINE) or by highlighting text that
            goes beyond it (EDGE_BACKGROUND) or not displayed at all (EDGE_NONE).
            (Scintilla feature 2363)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetEdgeColour">
            <summary>Retrieve the colour used in edge indication. (Scintilla feature 2364)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetEdgeColour(Npp.DotNet.Plugin.Colour)">
            <summary>Change the colour used in edge indication. (Scintilla feature 2365)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MultiEdgeAddLine(System.Int32,Npp.DotNet.Plugin.Colour)">
            <summary>Add a new vertical edge to the view. (Scintilla feature 2694)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MultiEdgeClearAll">
            <summary>Clear all vertical edges. (Scintilla feature 2695)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SearchAnchor">
            <summary>Sets the current caret position to be the search anchor. (Scintilla feature 2366)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SearchNext(Npp.DotNet.Plugin.FindOption,System.String)">
            <summary>
            Find some text starting at the search anchor.
            Does not ensure the selection is visible.
            (Scintilla feature 2367)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SearchPrev(Npp.DotNet.Plugin.FindOption,System.String)">
            <summary>
            Find some text starting at the search anchor and moving backwards.
            Does not ensure the selection is visible.
            (Scintilla feature 2368)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LinesOnScreen">
            <summary>Retrieves the number of lines completely visible. (Scintilla feature 2370)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.UsePopUp(Npp.DotNet.Plugin.PopUp)">
            <summary>
            Set whether a pop up menu is displayed automatically when the user presses
            the wrong mouse button on certain areas.
            (Scintilla feature 2371)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SelectionIsRectangle">
            <summary>Is the selection rectangular? The alternative is the more common stream selection. (Scintilla feature 2372)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetZoom(System.Int32)">
            <summary>
            Set the zoom level. This number of points is added to the size of all fonts.
            It may be positive to magnify or negative to reduce.
            (Scintilla feature 2373)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetZoom">
            <summary>Retrieve the zoom level. (Scintilla feature 2374)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CreateDocument(System.Int32,Npp.DotNet.Plugin.DocumentOption)">
            <summary>
            Create a new document object.
            Starts with reference count of 1 and not selected into editor.
            (Scintilla feature 2375)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AddRefDocument(System.IntPtr)">
            <summary>Extend life of document. (Scintilla feature 2376)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ReleaseDocument(System.IntPtr)">
            <summary>Release a reference to the document, deleting document if it fades to black. (Scintilla feature 2377)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetDocumentOptions">
            <summary>Get which document options are set. (Scintilla feature 2379)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetModEventMask">
            <summary>Get which document modification events are sent to the container. (Scintilla feature 2378)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCommandEvents(System.Boolean)">
            <summary>Set whether command events are sent to the container. (Scintilla feature 2717)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCommandEvents">
            <summary>Get whether command events are sent to the container. (Scintilla feature 2718)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetFocus(System.Boolean)">
            <summary>Change internal focus flag. (Scintilla feature 2380)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetFocus">
            <summary>Get internal focus flag. (Scintilla feature 2381)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetStatus(Npp.DotNet.Plugin.Status)">
            <summary>Change error status - 0 = OK. (Scintilla feature 2382)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetStatus">
            <summary>Get error status. (Scintilla feature 2383)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMouseDownCaptures(System.Boolean)">
            <summary>Set whether the mouse is captured when its button is pressed. (Scintilla feature 2384)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMouseDownCaptures">
            <summary>Get whether mouse gets captured. (Scintilla feature 2385)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMouseWheelCaptures(System.Boolean)">
            <summary>Set whether the mouse wheel can be active outside the window. (Scintilla feature 2696)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMouseWheelCaptures">
            <summary>Get whether mouse wheel can be active outside the window. (Scintilla feature 2697)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCursor(Npp.DotNet.Plugin.CursorShape)">
            <summary>Sets the cursor to one of the SC_CURSOR* values. (Scintilla feature 2386)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCursor">
            <summary>Get cursor type. (Scintilla feature 2387)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetControlCharSymbol(System.Int32)">
            <summary>
            Change the way control characters are displayed:
            If symbol is &lt; 32, keep the drawn way, else, use the given character.
            (Scintilla feature 2388)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetControlCharSymbol">
            <summary>Get the way control characters are displayed. (Scintilla feature 2389)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordPartLeft">
            <summary>Move to the previous change in capitalisation. (Scintilla feature 2390)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordPartLeftExtend">
            <summary>
            Move to the previous change in capitalisation extending selection
            to new caret position.
            (Scintilla feature 2391)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordPartRight">
            <summary>Move to the change next in capitalisation. (Scintilla feature 2392)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordPartRightExtend">
            <summary>
            Move to the next change in capitalisation extending selection
            to new caret position.
            (Scintilla feature 2393)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetVisiblePolicy(Npp.DotNet.Plugin.VisiblePolicy,System.Int32)">
            <summary>
            Set the way the display area is determined when a particular line
            is to be moved to by Find, FindNext, GotoLine, etc.
            (Scintilla feature 2394)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DelLineLeft">
            <summary>Delete back from the current position to the start of the line. (Scintilla feature 2395)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DelLineRight">
            <summary>Delete forwards from the current position to the end of the line. (Scintilla feature 2396)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetXOffset(System.Int32)">
            <summary>Set the xOffset (ie, horizontal scroll position). (Scintilla feature 2397)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetXOffset">
            <summary>Get the xOffset (ie, horizontal scroll position). (Scintilla feature 2398)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ChooseCaretX">
            <summary>Set the last x chosen value to be the caret x position. (Scintilla feature 2399)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GrabFocus">
            <summary>Set the focus to this Scintilla widget. (Scintilla feature 2400)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetXCaretPolicy(Npp.DotNet.Plugin.CaretPolicy,System.Int32)">
            <summary>
            Set the way the caret is kept visible when going sideways.
            The exclusion zone is given in pixels.
            (Scintilla feature 2402)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetYCaretPolicy(Npp.DotNet.Plugin.CaretPolicy,System.Int32)">
            <summary>
            Set the way the line the caret is on is kept visible.
            The exclusion zone is given in lines.
            (Scintilla feature 2403)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetPrintWrapMode(Npp.DotNet.Plugin.Wrap)">
            <summary>Set printing to line wrapped (SC_WRAP_WORD) or not line wrapped (SC_WRAP_NONE). (Scintilla feature 2406)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPrintWrapMode">
            <summary>Is printing line wrapped? (Scintilla feature 2407)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetHotspotActiveFore(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETHOTSPOTACTIVEFORE"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetHotspotActiveFore">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_GETHOTSPOTACTIVEFORE"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetHotspotActiveBack(System.Boolean,Npp.DotNet.Plugin.Colour)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETHOTSPOTACTIVEBACK"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetHotspotActiveBack">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_GETHOTSPOTACTIVEBACK"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetHotspotActiveUnderline(System.Boolean)">
            <summary>Enable / Disable underlining active hotspots. (Scintilla feature 2412)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetHotspotActiveUnderline">
            <summary>Get whether underlining for active hotspots. (Scintilla feature 2496)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetHotspotSingleLine(System.Boolean)">
            <summary>Limit hotspots to single line so hotspots on two lines don't merge. (Scintilla feature 2421)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetHotspotSingleLine">
            <summary>Get the HotspotSingleLine property (Scintilla feature 2497)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ParaDown">
            <summary>Move caret down one paragraph (delimited by empty lines). (Scintilla feature 2413)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ParaDownExtend">
            <summary>Extend selection down one paragraph (delimited by empty lines). (Scintilla feature 2414)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ParaUp">
            <summary>Move caret up one paragraph (delimited by empty lines). (Scintilla feature 2415)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ParaUpExtend">
            <summary>Extend selection up one paragraph (delimited by empty lines). (Scintilla feature 2416)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PositionBefore(System.Int32)">
            <summary>
            Given a valid document position, return the previous position taking code
            page into account. Returns 0 if passed 0.
            (Scintilla feature 2417)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PositionAfter(System.Int32)">
            <summary>
            Given a valid document position, return the next position taking code
            page into account. Maximum value returned is the last position in the document.
            (Scintilla feature 2418)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PositionRelative(System.Int32,System.Int32)">
            <summary>
            Given a valid document position, return a position that differs in a number
            of characters. Returned value is always between 0 and last position in document.
            (Scintilla feature 2670)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PositionRelativeCodeUnits(System.Int32,System.Int32)">
            <summary>
            Given a valid document position, return a position that differs in a number
            of UTF-16 code units. Returned value is always between 0 and last position in document.
            The result may point half way (2 bytes) inside a non-BMP character.
            (Scintilla feature 2716)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CopyRange(System.Int32,System.Int32)">
            <summary>Copy a range of text to the clipboard. Positions are clipped into the document. (Scintilla feature 2419)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CopyText(System.Int32,System.String)">
            <summary>Copy argument text to the clipboard. (Scintilla feature 2420)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionMode(Npp.DotNet.Plugin.SelectionMode)">
            <summary>
            Set the selection mode to stream (SC_SEL_STREAM) or rectangular (SC_SEL_RECTANGLE/SC_SEL_THIN) or
            by lines (SC_SEL_LINES).
            (Scintilla feature 2422)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionMode">
            <summary>Get the mode of the current selection. (Scintilla feature 2423)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMoveExtendsSelection">
            <summary>Get whether or not regular caret moves will extend or reduce the selection. (Scintilla feature 2706)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineSelStartPosition(System.Int32)">
            <summary>Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line). (Scintilla feature 2424)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineSelEndPosition(System.Int32)">
            <summary>Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line). (Scintilla feature 2425)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineDownRectExtend">
            <summary>Move caret down one line, extending rectangular selection to new caret position. (Scintilla feature 2426)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineUpRectExtend">
            <summary>Move caret up one line, extending rectangular selection to new caret position. (Scintilla feature 2427)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CharLeftRectExtend">
            <summary>Move caret left one character, extending rectangular selection to new caret position. (Scintilla feature 2428)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CharRightRectExtend">
            <summary>Move caret right one character, extending rectangular selection to new caret position. (Scintilla feature 2429)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.HomeRectExtend">
            <summary>Move caret to first position on line, extending rectangular selection to new caret position. (Scintilla feature 2430)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VCHomeRectExtend">
            <summary>
            Move caret to before first visible character on line.
            If already there move to first character on line.
            In either case, extend rectangular selection to new caret position.
            (Scintilla feature 2431)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineEndRectExtend">
            <summary>Move caret to last position on line, extending rectangular selection to new caret position. (Scintilla feature 2432)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PageUpRectExtend">
            <summary>Move caret one page up, extending rectangular selection to new caret position. (Scintilla feature 2433)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PageDownRectExtend">
            <summary>Move caret one page down, extending rectangular selection to new caret position. (Scintilla feature 2434)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StutteredPageUp">
            <summary>Move caret to top of page, or one page up if already at top of page. (Scintilla feature 2435)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StutteredPageUpExtend">
            <summary>Move caret to top of page, or one page up if already at top of page, extending selection to new caret position. (Scintilla feature 2436)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StutteredPageDown">
            <summary>Move caret to bottom of page, or one page down if already at bottom of page. (Scintilla feature 2437)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StutteredPageDownExtend">
            <summary>Move caret to bottom of page, or one page down if already at bottom of page, extending selection to new caret position. (Scintilla feature 2438)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordLeftEnd">
            <summary>Move caret left one word, position cursor at end of word. (Scintilla feature 2439)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordLeftEndExtend">
            <summary>Move caret left one word, position cursor at end of word, extending selection to new caret position. (Scintilla feature 2440)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordRightEnd">
            <summary>Move caret right one word, position cursor at end of word. (Scintilla feature 2441)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.WordRightEndExtend">
            <summary>Move caret right one word, position cursor at end of word, extending selection to new caret position. (Scintilla feature 2442)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetWhitespaceChars(System.String)">
            <summary>
            Set the set of characters making up whitespace for when moving or selecting by word.
            Should be called after SetWordChars.
            (Scintilla feature 2443)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetWhitespaceChars">
            <summary>Get the set of characters making up whitespace for when moving or selecting by word. (Scintilla feature 2647)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetPunctuationChars(System.String)">
            <summary>
            Set the set of characters making up punctuation characters
            Should be called after SetWordChars.
            (Scintilla feature 2648)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPunctuationChars">
            <summary>Get the set of characters making up punctuation characters (Scintilla feature 2649)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCharsDefault">
            <summary>Reset the set of characters for whitespace and word characters to the defaults. (Scintilla feature 2444)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetCurrent">
            <summary>Get currently selected item position in the auto-completion list (Scintilla feature 2445)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetCurrentText">
            <summary>
            Get currently selected item text in the auto-completion list
            Returns the length of the item text
            Result is NUL-terminated.
            (Scintilla feature 2610)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetCaseInsensitiveBehaviour(Npp.DotNet.Plugin.CaseInsensitiveBehaviour)">
            <summary>Set auto-completion case insensitive behaviour to either prefer case-sensitive matches or have no preference. (Scintilla feature 2634)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetCaseInsensitiveBehaviour">
            <summary>Get auto-completion case insensitive behaviour. (Scintilla feature 2635)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetMulti(Npp.DotNet.Plugin.MultiAutoComplete)">
            <summary>Change the effect of autocompleting when there are multiple selections. (Scintilla feature 2636)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetMulti">
            <summary>Retrieve the effect of autocompleting when there are multiple selections. (Scintilla feature 2637)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCSetOrder(Npp.DotNet.Plugin.Ordering)">
            <summary>Set the way autocompletion lists are ordered. (Scintilla feature 2660)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AutoCGetOrder">
            <summary>Get the way autocompletion lists are ordered. (Scintilla feature 2661)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Allocate(System.Int32)">
            <summary>Enlarge the document to a particular size of text bytes. (Scintilla feature 2446)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.TargetAsUTF8">
            <summary>
            Returns the target converted to UTF8.
            Return the length in bytes.
            (Scintilla feature 2447)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetLengthForEncode(System.Int32)">
            <summary>
            Set the length of the utf8 argument for calling EncodedFromUTF8.
            Set to -1 and the string will be measured to the first nul.
            (Scintilla feature 2448)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.EncodedFromUTF8(System.String)">
            <summary>
            Translates a UTF8 string into the document encoding.
            Return the length of the result in bytes.
            On error return 0.
            (Scintilla feature 2449)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FindColumn(System.Int32,System.Int32)">
            <summary>
            Find the position of a column on a line taking into account tabs and
            multi-byte characters. If beyond end of line, return line end position.
            (Scintilla feature 2456)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretSticky">
            <summary>Can the caret preferred x position only be changed by explicit movement commands? (Scintilla feature 2457)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretSticky(Npp.DotNet.Plugin.CaretSticky)">
            <summary>Stop the caret preferred x position changing when the user types. (Scintilla feature 2458)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ToggleCaretSticky">
            <summary>Switch between sticky and non-sticky: meant to be bound to a key. (Scintilla feature 2459)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetPasteConvertEndings(System.Boolean)">
            <summary>Enable/Disable convert-on-paste for line endings (Scintilla feature 2467)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPasteConvertEndings">
            <summary>Get convert-on-paste setting (Scintilla feature 2468)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SelectionDuplicate">
            <summary>Duplicate the selection. If selection empty duplicate the line containing the caret. (Scintilla feature 2469)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretLineBackAlpha(Npp.DotNet.Plugin.Alpha)">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_SETCARETLINEBACKALPHA"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretLineBackAlpha">
            <inheritdoc cref="F:Npp.DotNet.Plugin.SciMsg.SCI_GETCARETLINEBACKALPHA"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretStyle(Npp.DotNet.Plugin.CaretStyle)">
            <summary>Set the style of the caret to be drawn. (Scintilla feature 2512)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretStyle">
            <summary>Returns the current style of the caret. (Scintilla feature 2513)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetIndicatorCurrent(System.Int32)">
            <summary>Set the indicator used for IndicatorFillRange and IndicatorClearRange (Scintilla feature 2500)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetIndicatorCurrent">
            <summary>Get the current indicator (Scintilla feature 2501)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetIndicatorValue(System.Int32)">
            <summary>Set the value used for IndicatorFillRange (Scintilla feature 2502)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetIndicatorValue">
            <summary>Get the current indicator value (Scintilla feature 2503)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicatorFillRange(System.Int32,System.Int32)">
            <summary>Turn a indicator on over a range. (Scintilla feature 2504)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicatorClearRange(System.Int32,System.Int32)">
            <summary>Turn a indicator off over a range. (Scintilla feature 2505)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicatorAllOnFor(System.Int32)">
            <summary>Are any indicators present at pos? (Scintilla feature 2506)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicatorValueAt(System.Int32,System.Int32)">
            <summary>What value does a particular indicator have at a position? (Scintilla feature 2507)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicatorStart(System.Int32,System.Int32)">
            <summary>Where does a particular indicator start? (Scintilla feature 2508)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicatorEnd(System.Int32,System.Int32)">
            <summary>Where does a particular indicator end? (Scintilla feature 2509)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetPositionCache(System.Int32)">
            <summary>Set number of entries in position cache (Scintilla feature 2514)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPositionCache">
            <summary>How many entries are allocated to the position cache? (Scintilla feature 2515)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CopyAllowLine">
            <summary>Copy the selection, if selection empty copy the line with the caret (Scintilla feature 2519)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCharacterPointer">
            <summary>
            Compact the document buffer and return a read-only pointer to the
            characters in the document.
            (Scintilla feature 2520)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetRangePointer(System.Int32,System.Int32)">
            <summary>
            Return a read-only pointer to a range of characters in the document.
            May move the gap so that the range is contiguous, but will only move up
            to lengthRange bytes.
            (Scintilla feature 2643)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetGapPosition">
            <summary>
            Return a position which, to avoid performance costs, should not be within
            the range of a call to GetRangePointer.
            (Scintilla feature 2644)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicSetAlpha(System.Int32,Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha fill colour of the given indicator. (Scintilla feature 2523)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicGetAlpha(System.Int32)">
            <summary>Get the alpha fill colour of the given indicator. (Scintilla feature 2524)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicSetOutlineAlpha(System.Int32,Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha outline colour of the given indicator. (Scintilla feature 2558)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndicGetOutlineAlpha(System.Int32)">
            <summary>Get the alpha outline colour of the given indicator. (Scintilla feature 2559)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetExtraAscent(System.Int32)">
            <summary>Set extra ascent for each line (Scintilla feature 2525)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetExtraAscent">
            <summary>Get extra ascent for each line (Scintilla feature 2526)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetExtraDescent(System.Int32)">
            <summary>Set extra descent for each line (Scintilla feature 2527)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetExtraDescent">
            <summary>Get extra descent for each line (Scintilla feature 2528)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerSymbolDefined(System.Int32)">
            <summary>Which symbol was defined for markerNumber with MarkerDefine (Scintilla feature 2529)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginSetText(System.Int32,System.String)">
            <summary>Set the text in the text margin for a line (Scintilla feature 2530)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginGetText(System.Int32)">
            <summary>Get the text in the text margin for a line (Scintilla feature 2531)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginSetStyle(System.Int32,System.Int32)">
            <summary>Set the style number for the text margin for a line (Scintilla feature 2532)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginGetStyle(System.Int32)">
            <summary>Get the style number for the text margin for a line (Scintilla feature 2533)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginSetStyles(System.Int32,System.String)">
            <summary>Set the style in the text margin for a line (Scintilla feature 2534)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginGetStyles(System.Int32)">
            <summary>Get the styles in the text margin for a line (Scintilla feature 2535)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginTextClearAll">
            <summary>Clear the margin text on all lines (Scintilla feature 2536)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginSetStyleOffset(System.Int32)">
            <summary>Get the start of the range of style numbers used for margin text (Scintilla feature 2537)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarginGetStyleOffset">
            <summary>Get the start of the range of style numbers used for margin text (Scintilla feature 2538)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMarginOptions(Npp.DotNet.Plugin.MarginOption)">
            <summary>Set the margin options. (Scintilla feature 2539)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMarginOptions">
            <summary>Get the margin options. (Scintilla feature 2557)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationSetText(System.Int32,System.String)">
            <summary>Set the annotation text for a line (Scintilla feature 2540)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationGetText(System.Int32)">
            <summary>Get the annotation text for a line (Scintilla feature 2541)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationSetStyle(System.Int32,System.Int32)">
            <summary>Set the style number for the annotations for a line (Scintilla feature 2542)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationGetStyle(System.Int32)">
            <summary>Get the style number for the annotations for a line (Scintilla feature 2543)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationSetStyles(System.Int32,System.String)">
            <summary>Set the annotation styles for a line (Scintilla feature 2544)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationGetStyles(System.Int32)">
            <summary>Get the annotation styles for a line (Scintilla feature 2545)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationGetLines(System.Int32)">
            <summary>Get the number of annotation lines for a line (Scintilla feature 2546)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationClearAll">
            <summary>Clear the annotations from all lines (Scintilla feature 2547)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationSetVisible(Npp.DotNet.Plugin.AnnotationVisible)">
            <summary>Set the visibility for the annotations for a view (Scintilla feature 2548)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationGetVisible">
            <summary>Get the visibility for the annotations for a view (Scintilla feature 2549)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationSetStyleOffset(System.Int32)">
            <summary>Get the start of the range of style numbers used for annotations (Scintilla feature 2550)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AnnotationGetStyleOffset">
            <summary>Get the start of the range of style numbers used for annotations (Scintilla feature 2551)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ReleaseAllExtendedStyles">
            <summary>Release all extended (>255) style numbers (Scintilla feature 2552)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AllocateExtendedStyles(System.Int32)">
            <summary>Allocate some extended (>255) style numbers and return the start of the range (Scintilla feature 2553)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AddUndoAction(System.Int32,Npp.DotNet.Plugin.UndoFlags)">
            <summary>Add a container action to the undo stack (Scintilla feature 2560)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CharPositionFromPoint(System.Int32,System.Int32)">
            <summary>Find the position of a character from a point within the window. (Scintilla feature 2561)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CharPositionFromPointClose(System.Int32,System.Int32)">
            <summary>
            Find the position of a character from a point within the window.
            Return INVALID_POSITION if not close to text.
            (Scintilla feature 2562)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMouseSelectionRectangularSwitch(System.Boolean)">
            <summary>Set whether switching to rectangular mode while selecting with the mouse is allowed. (Scintilla feature 2668)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMouseSelectionRectangularSwitch">
            <summary>Whether switching to rectangular mode while selecting with the mouse is allowed. (Scintilla feature 2669)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMultipleSelection(System.Boolean)">
            <summary>Set whether multiple selections can be made (Scintilla feature 2563)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMultipleSelection">
            <summary>Whether multiple selections can be made (Scintilla feature 2564)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAdditionalSelectionTyping(System.Boolean)">
            <summary>Set whether typing can be performed into multiple selections (Scintilla feature 2565)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAdditionalSelectionTyping">
            <summary>Whether typing can be performed into multiple selections (Scintilla feature 2566)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAdditionalCaretsBlink(System.Boolean)">
            <summary>Set whether additional carets will blink (Scintilla feature 2567)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAdditionalCaretsBlink">
            <summary>Whether additional carets will blink (Scintilla feature 2568)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAdditionalCaretsVisible(System.Boolean)">
            <summary>Set whether additional carets are visible (Scintilla feature 2608)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAdditionalCaretsVisible">
            <summary>Whether additional carets are visible (Scintilla feature 2609)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelections">
            <summary>How many selections are there? (Scintilla feature 2570)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionEmpty">
            <summary>Is every selected range empty? (Scintilla feature 2650)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearSelections">
            <summary>Clear selections to a single empty stream selection (Scintilla feature 2571)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelection(System.Int32,System.Int32)">
            <summary>Set a simple selection (Scintilla feature 2572)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AddSelection(System.Int32,System.Int32)">
            <summary>Add a selection (Scintilla feature 2573)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DropSelectionN(System.Int32)">
            <summary>Drop one selection (Scintilla feature 2671)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetMainSelection(System.Int32)">
            <summary>Set the main selection (Scintilla feature 2574)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetMainSelection">
            <summary>Which selection is the main selection (Scintilla feature 2575)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionNCaret(System.Int32,System.Int32)">
            <summary>Set the caret position of the nth selection. (Scintilla feature 2576)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionNCaret(System.Int32)">
            <summary>Return the caret position of the nth selection. (Scintilla feature 2577)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionNAnchor(System.Int32,System.Int32)">
            <summary>Set the anchor position of the nth selection. (Scintilla feature 2578)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionNAnchor(System.Int32)">
            <summary>Return the anchor position of the nth selection. (Scintilla feature 2579)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionNCaretVirtualSpace(System.Int32,System.Int32)">
            <summary>Set the virtual space of the caret of the nth selection. (Scintilla feature 2580)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionNCaretVirtualSpace(System.Int32)">
            <summary>Return the virtual space of the caret of the nth selection. (Scintilla feature 2581)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionNAnchorVirtualSpace(System.Int32,System.Int32)">
            <summary>Set the virtual space of the anchor of the nth selection. (Scintilla feature 2582)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionNAnchorVirtualSpace(System.Int32)">
            <summary>Return the virtual space of the anchor of the nth selection. (Scintilla feature 2583)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionNStart(System.Int32,System.Int32)">
            <summary>Sets the position that starts the selection - this becomes the anchor. (Scintilla feature 2584)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionNStart(System.Int32)">
            <summary>Returns the position at the start of the selection. (Scintilla feature 2585)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetSelectionNEnd(System.Int32,System.Int32)">
            <summary>Sets the position that ends the selection - this becomes the currentPosition. (Scintilla feature 2586)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSelectionNEnd(System.Int32)">
            <summary>Returns the position at the end of the selection. (Scintilla feature 2587)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetRectangularSelectionCaret(System.Int32)">
            <summary>Set the caret position of the rectangular selection. (Scintilla feature 2588)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetRectangularSelectionCaret">
            <summary>Return the caret position of the rectangular selection. (Scintilla feature 2589)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetRectangularSelectionAnchor(System.Int32)">
            <summary>Set the anchor position of the rectangular selection. (Scintilla feature 2590)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetRectangularSelectionAnchor">
            <summary>Return the anchor position of the rectangular selection. (Scintilla feature 2591)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetRectangularSelectionCaretVirtualSpace(System.Int32)">
            <summary>Set the virtual space of the caret of the rectangular selection. (Scintilla feature 2592)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetRectangularSelectionCaretVirtualSpace">
            <summary>Return the virtual space of the caret of the rectangular selection. (Scintilla feature 2593)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetRectangularSelectionAnchorVirtualSpace(System.Int32)">
            <summary>Set the virtual space of the anchor of the rectangular selection. (Scintilla feature 2594)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetRectangularSelectionAnchorVirtualSpace">
            <summary>Return the virtual space of the anchor of the rectangular selection. (Scintilla feature 2595)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetVirtualSpaceOptions(Npp.DotNet.Plugin.VirtualSpace)">
            <summary>Set options for virtual space behaviour. (Scintilla feature 2596)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetVirtualSpaceOptions">
            <summary>Return options for virtual space behaviour. (Scintilla feature 2597)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetRectangularSelectionModifier(System.Int32)">
            <summary>
            On GTK, allow selecting the modifier key to use for mouse-based
            rectangular selection. Often the window manager requires Alt+Mouse Drag
            for moving windows.
            Valid values are SCMOD_CTRL(default), SCMOD_ALT, or SCMOD_SUPER.
            (Scintilla feature 2598)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetRectangularSelectionModifier">
            <summary>Get the modifier key used for rectangular selection. (Scintilla feature 2599)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAdditionalSelFore(Npp.DotNet.Plugin.Colour)">
            <summary>
            Set the foreground colour of additional selections.
            Must have previously called SetSelFore with non-zero first argument for this to have an effect.
            (Scintilla feature 2600)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAdditionalSelBack(Npp.DotNet.Plugin.Colour)">
            <summary>
            Set the background colour of additional selections.
            Must have previously called SetSelBack with non-zero first argument for this to have an effect.
            (Scintilla feature 2601)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAdditionalSelAlpha(Npp.DotNet.Plugin.Alpha)">
            <summary>Set the alpha of the selection. (Scintilla feature 2602)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAdditionalSelAlpha">
            <summary>Get the alpha of the selection. (Scintilla feature 2603)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetAdditionalCaretFore(Npp.DotNet.Plugin.Colour)">
            <summary>Set the foreground colour of additional carets. (Scintilla feature 2604)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetAdditionalCaretFore">
            <summary>Get the foreground colour of additional carets. (Scintilla feature 2605)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.RotateSelection">
            <summary>Set the main selection to the next selection. (Scintilla feature 2606)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SwapMainAnchorCaret">
            <summary>Swap that caret and anchor of the main selection. (Scintilla feature 2607)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MultipleSelectAddNext">
            <summary>
            Add the next occurrence of the main selection to the set of selections as main.
            If the current selection is empty then select word around caret.
            (Scintilla feature 2688)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MultipleSelectAddEach">
            <summary>
            Add each occurrence of the main selection in the target to the set of selections.
            If the current selection is empty then select word around caret.
            (Scintilla feature 2689)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ChangeLexerState(System.Int32,System.Int32)">
            <summary>
            Indicate that the internal state of a lexer has changed over a range and therefore
            there may be a need to redraw.
            (Scintilla feature 2617)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ContractedFoldNext(System.Int32)">
            <summary>
            Find the next line at or after lineStart that is a contracted fold header line.
            Return -1 when no more lines.
            (Scintilla feature 2618)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VerticalCentreCaret">
            <summary>Centre current line in window. (Scintilla feature 2619)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MoveSelectedLinesUp">
            <summary>Move the selected lines up one line, shifting the line above after the selection (Scintilla feature 2620)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MoveSelectedLinesDown">
            <summary>Move the selected lines down one line, shifting the line below before the selection (Scintilla feature 2621)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetIdentifier(System.Int32)">
            <summary>Set the identifier reported as idFrom in notification messages. (Scintilla feature 2622)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetIdentifier">
            <summary>Get the identifier. (Scintilla feature 2623)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.RGBAImageSetWidth(System.Int32)">
            <summary>Set the width for future RGBA image data. (Scintilla feature 2624)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.RGBAImageSetHeight(System.Int32)">
            <summary>Set the height for future RGBA image data. (Scintilla feature 2625)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.RGBAImageSetScale(System.Int32)">
            <summary>Set the scale factor in percent for future RGBA image data. (Scintilla feature 2651)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.MarkerDefineRGBAImage(System.Int32,System.String)">
            <summary>
            Define a marker from RGBA data.
            It has the width and height from RGBAImageSetWidth/Height
            (Scintilla feature 2626)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.RegisterRGBAImage(System.Int32,System.String)">
            <summary>
            Register an RGBA image for use in autocompletion lists.
            It has the width and height from RGBAImageSetWidth/Height
            (Scintilla feature 2627)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ScrollToStart">
            <summary>Scroll to start of document. (Scintilla feature 2628)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ScrollToEnd">
            <summary>Scroll to end of document. (Scintilla feature 2629)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetTechnology(Npp.DotNet.Plugin.Technology)">
            <summary>Set the technology used. (Scintilla feature 2630)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTechnology">
            <summary>Get the tech. (Scintilla feature 2631)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.CreateLoader(System.Int32,Npp.DotNet.Plugin.DocumentOption)">
            <summary>Create an ILoader*. (Scintilla feature 2632)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FindIndicatorShow(System.Int32,System.Int32)">
            <summary>On OS X, show a find indicator. (Scintilla feature 2640)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FindIndicatorFlash(System.Int32,System.Int32)">
            <summary>On OS X, flash a find indicator, then fade out. (Scintilla feature 2641)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FindIndicatorHide">
            <summary>On OS X, hide the find indicator. (Scintilla feature 2642)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VCHomeDisplay">
            <summary>
            Move caret to before first visible character on display line.
            If already there move to first character on display line.
            (Scintilla feature 2652)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.VCHomeDisplayExtend">
            <summary>Like VCHomeDisplay but extending selection to new caret position. (Scintilla feature 2653)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetCaretLineVisibleAlways">
            <summary>Is the caret line always visible? (Scintilla feature 2654)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetCaretLineVisibleAlways(System.Boolean)">
            <summary>Sets the caret line to always visible. (Scintilla feature 2655)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetLineEndTypesAllowed(Npp.DotNet.Plugin.LineEndType)">
            <summary>Set the line end types that the application wants to use. May not be used if incompatible with lexer or encoding. (Scintilla feature 2656)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineEndTypesAllowed">
            <summary>Get the line end types currently allowed. (Scintilla feature 2657)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineEndTypesActive">
            <summary>Get the line end types currently recognised. May be a subset of the allowed types due to lexer limitation. (Scintilla feature 2658)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetRepresentation(System.String,System.String)">
            <summary>Set the way a character is drawn. (Scintilla feature 2665)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetRepresentation(System.String)">
            <summary>
            Set the way a character is drawn.
            Result is NUL-terminated.
            (Scintilla feature 2666)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ClearRepresentation(System.String)">
            <summary>Remove a character representation. (Scintilla feature 2667)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StartRecord">
            <summary>Start notifying the container of all key presses and commands. (Scintilla feature 3001)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.StopRecord">
            <summary>Stop notifying the container of all key presses and commands. (Scintilla feature 3002)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLexer">
            <summary>Retrieve the lexing language of the document. (Scintilla feature 4002)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.Colourise(System.Int32,System.Int32)">
            <summary>Colourise a segment of the document using the current lexing language. (Scintilla feature 4003)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetProperty(System.String,System.String)">
            <summary>Set up a value that may be used by a lexer for some optional feature. (Scintilla feature 4004)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetKeyWords(System.Int32,System.String)">
            <summary>Set up the key words used by the lexer. (Scintilla feature 4005)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetLexerLanguage(System.String)">
            <summary>Set the lexing language of the document based on string name. (Scintilla feature 4006)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LoadLexerLibrary(System.String)">
            <summary>Load a lexer library (dll / so). (Scintilla feature 4007)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetProperty(System.String)">
            <summary>
            Retrieve a "property" value previously set with SetProperty.
            Result is NUL-terminated.
            (Scintilla feature 4008)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPropertyExpanded(System.String)">
            <summary>
            Retrieve a "property" value previously set with SetProperty,
            with "$()" variable replacement on returned buffer.
            Result is NUL-terminated.
            (Scintilla feature 4009)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPropertyInt(System.String,System.Int32)">
            <summary>
            Retrieve a "property" value previously set with SetProperty,
            interpreted as an int AFTER any "$()" variable replacement.
            (Scintilla feature 4010)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLexerLanguage">
            <summary>
            Retrieve the name of the lexer.
            Return the length of the text.
            Result is NUL-terminated.
            (Scintilla feature 4012)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PrivateLexerCall(System.Int32,System.IntPtr)">
            <summary>For private communication between an application and a known lexer. (Scintilla feature 4013)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PropertyNames">
            <summary>
            Retrieve a '\n' separated list of properties understood by the current lexer.
            Result is NUL-terminated.
            (Scintilla feature 4014)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.PropertyType(System.String)">
            <summary>Retrieve the type of a property. (Scintilla feature 4015)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DescribeProperty(System.String)">
            <summary>
            Describe a property.
            Result is NUL-terminated.
            (Scintilla feature 4016)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DescribeKeyWordSets">
            <summary>
            Retrieve a '\n' separated list of descriptions of the keyword sets understood by the current lexer.
            Result is NUL-terminated.
            (Scintilla feature 4017)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineEndTypesSupported">
            <summary>
            Bit set of LineEndType enumertion for which line ends beyond the standard
            LF, CR, and CRLF are supported by the lexer.
            (Scintilla feature 4018)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AllocateSubStyles(System.Int32,System.Int32)">
            <summary>Allocate a set of sub styles for a particular base style, returning start of range (Scintilla feature 4020)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSubStylesStart(System.Int32)">
            <summary>The starting style number for the sub styles associated with a base style (Scintilla feature 4021)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSubStylesLength(System.Int32)">
            <summary>The number of sub styles associated with a base style (Scintilla feature 4022)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetStyleFromSubStyle(System.Int32)">
            <summary>For a sub style, return the base style, else return the argument. (Scintilla feature 4027)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetPrimaryStyleFromStyle(System.Int32)">
            <summary>For a secondary style, return the primary style, else return the argument. (Scintilla feature 4028)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.FreeSubStyles">
            <summary>Free allocated sub styles (Scintilla feature 4023)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetIdentifiers(System.Int32,System.String)">
            <summary>Set the identifiers that are shown in a particular style (Scintilla feature 4024)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DistanceToSecondaryStyles">
            <summary>
            Where styles are duplicated by a feature such as active/inactive code
            return the distance between the two types.
            (Scintilla feature 4025)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetSubStyleBases">
            <summary>
            Get the set of base styles that can be extended with sub styles
            Result is NUL-terminated.
            (Scintilla feature 4026)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetNamedStyles">
            <summary>Retrieve the number of named styles for the lexer. (Scintilla feature 4029)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.NameOfStyle(System.Int32)">
            <summary>
            Retrieve the name of a style.
            Result is NUL-terminated.
            (Scintilla feature 4030)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.TagsOfStyle(System.Int32)">
            <summary>
            Retrieve a ' ' separated list of style tags like "literal quoted string".
            Result is NUL-terminated.
            (Scintilla feature 4031)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.DescriptionOfStyle(System.Int32)">
            <summary>
            Retrieve a description of a style.
            Result is NUL-terminated.
            (Scintilla feature 4032)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetBidirectional">
            <summary>Retrieve bidirectional text display state. (Scintilla feature 2708)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetBidirectional(Npp.DotNet.Plugin.Bidirectional)">
            <summary>Set bidirectional text display state. (Scintilla feature 2709)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetLineCharacterIndex">
            <summary>Retrieve line character index state. (Scintilla feature 2710)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.AllocateLineCharacterIndex(Npp.DotNet.Plugin.LineCharacterIndexType)">
            <summary>Request line character index be created or its use count increased. (Scintilla feature 2711)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.ReleaseLineCharacterIndex(Npp.DotNet.Plugin.LineCharacterIndexType)">
            <summary>Decrease use count of line character index and remove if 0. (Scintilla feature 2712)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.LineFromIndexPosition(System.Int32,Npp.DotNet.Plugin.LineCharacterIndexType)">
            <summary>Retrieve the document line containing a position measured in index units. (Scintilla feature 2713)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.IndexPositionFromLine(System.Int32,Npp.DotNet.Plugin.LineCharacterIndexType)">
            <summary>Retrieve the position measured in index units at the start of a document line. (Scintilla feature 2714)</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetStyleBits(System.Int32)">
            <summary>
            Scintilla no longer supports style byte indicators. The last version to support style byte indicators was 3.4.2.
            Any use of these symbols should be removed and replaced with <a href="https://www.scintilla.org/ScintillaDoc.html#Indicators">standard indicators</a>.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetStyleBits">
            <summary>Always returns <c>8</c>, indicating that 8 bits are used for styling and there are 256 styles.</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetStyleBitsNeeded">
            <inheritdoc cref="M:Npp.DotNet.Plugin.ScintillaGateway.GetStyleBits" />
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetKeysUnicode(System.Boolean)">
            <summary>
            On Windows, Scintilla no longer supports narrow character windows so input is always treated as Unicode.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetKeysUnicode">
            <inheritdoc cref="M:Npp.DotNet.Plugin.ScintillaGateway.SetKeysUnicode(System.Boolean)" />
            <returns><see langword="true"/></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.GetTwoPhaseDraw">
            <summary>
            Single phase drawing SC_PHASES_ONE, is deprecated and should be replaced with 2-phase SC_PHASES_TWO or multi-phase SC_PHASES_MULTIPLE drawing.
            </summary>
            <returns><see langword="true"/></returns>
        </member>
        <member name="M:Npp.DotNet.Plugin.ScintillaGateway.SetTwoPhaseDraw(System.Boolean)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.ScintillaGateway.GetTwoPhaseDraw" />
        </member>
        <member name="T:Npp.DotNet.Plugin.ScNotificationHeader">
            <summary>
            Compatible with Windows NMHDR.
            hwndFrom is really an environment specific window handle or pointer
            but most clients of Scintilla.h do not have this type visible.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.ScNotificationHeader.HwndFrom">
            <summary>
            environment specific window handle/pointer
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.ScNotificationHeader.IdFrom">
            <summary>
            CtrlID of the window issuing the notification
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.ScNotificationHeader.Code">
            <summary>
            The SCN_* notification Code
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.ScNotification.LineNumber">
            <summary>
            0-based index
            </summary>
        </member>
        <member name="P:Npp.DotNet.Plugin.ScNotification.Position">
            <summary>
            SCN_STYLENEEDED, SCN_DOUBLECLICK, SCN_MODIFIED, SCN_MARGINCLICK, SCN_NEEDSHOWN, SCN_DWELLSTART, SCN_DWELLEND, SCN_CALLTIPCLICK, SCN_HOTSPOTCLICK, SCN_HOTSPOTDOUBLECLICK, SCN_HOTSPOTRELEASECLICK, SCN_INDICATORCLICK, SCN_INDICATORRELEASE, SCN_USERLISTSELECTION, SCN_AUTOCSELECTION
            </summary>
        </member>
        <member name="P:Npp.DotNet.Plugin.ScNotification.Character">
            <summary>
            Character of the notification - eg keydown
            SCN_CHARADDED, SCN_KEY, SCN_AUTOCCOMPLETE, SCN_AUTOCSELECTION, SCN_USERLISTSELECTION
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.TextToFind.#ctor(Npp.DotNet.Plugin.CharacterRange,System.String)">
            <summary>
            text to find
            </summary>
            <param name="chrRange">range to search</param>
            <param name="searchText">the search pattern</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.TextToFind.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            text to find
            </summary>
            <param name="cpmin">range to search</param>
            <param name="cpmax">range to search</param>
            <param name="searchText">the search pattern</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Utils.CheckMenuItem(System.Int32,System.Boolean)">
            <summary>
            if a menu item (for your plugin's drop-down menu) has a checkmark, check/uncheck it, and call its associated funcId.
            </summary>
            <param name="funcId">the index of the menu item of interest</param>
            <param name="isChecked">whether the menu item should be checked</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Utils.CheckMenuItemToggle(System.Int32,System.Boolean@)">
            <summary>
            if a menu item (for your plugin's drop-down menu) has a checkmark:<br></br>
            - if it's checked, uncheck it<br></br>
            - if it's unchecked, check it.
            Either way, call its associated funcId.
            </summary>
            <param name="funcId">the index of the menu item of interest</param>
            <param name="isCurrentlyChecked">whether the menu item is currently checked</param>
        </member>
        <member name="T:Npp.DotNet.Plugin.Win32.ScrollInfo">
            <summary>
            Get the scroll information of a scroll bar or window with scroll bar<br/>
            <see href="https://learn.microsoft.com/windows/win32/api/winuser/ns-winuser-scrollinfo"/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfo.cbSize">
            <summary>
            Specifies the size, in bytes, of this structure. The caller must set this to <c>sizeof(</c><see cref="T:Npp.DotNet.Plugin.Win32.ScrollInfo"/><c>)</c>.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfo.fMask">
            <summary>
            Specifies the scroll bar parameters to set or retrieve.
            <see cref="T:Npp.DotNet.Plugin.Win32.ScrollInfoMask"/>
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfo.nMin">
            <summary>
            Specifies the minimum scrolling position.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfo.nMax">
            <summary>
            Specifies the maximum scrolling position.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfo.nPage">
            <summary>
            Specifies the page size, in device units. A scroll bar uses this value to determine the appropriate size of the proportional scroll box.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfo.nPos">
            <summary>
            Specifies the position of the scroll box.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfo.nTrackPos">
            <summary>
            Specifies the immediate position of a scroll box that the user is dragging.
            An application can retrieve this value while processing the SB_THUMBTRACK request code.
            An application cannot set the immediate scroll position; the SetScrollInfo function ignores this member.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Win32.TagNMHDR">
            <summary>
            Holds message data sent with <see cref="F:Npp.DotNet.Plugin.Win32.WM_NOTIFY"/>.
            </summary>
            <remarks>
            See <see href="https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-nmhdr"/>
            </remarks>
        </member>
        <member name="T:Npp.DotNet.Plugin.Win32.ScrollInfoMask">
            <summary>
            Possible values of <see cref="F:Npp.DotNet.Plugin.Win32.ScrollInfo.fMask"/>.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfoMask.SIF_RANGE">
            <summary>
            The nMin and nMax members contain the minimum and maximum values for the scrolling range.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfoMask.SIF_PAGE">
            <summary>
            The nPage member contains the page size for a proportional scroll bar.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfoMask.SIF_POS">
            <summary>
            The nPos member contains the scroll box position, which is not updated while the user drags the scroll box.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfoMask.SIF_DISABLENOSCROLL">
            <summary>
            This value is used only when setting a scroll bar's parameters.
            If the scroll bar's new parameters make the scroll bar unnecessary,
            disable the scroll bar instead of removing it.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfoMask.SIF_TRACKPOS">
            <summary>
            The nTrackPos member contains the current position of the scroll box while the user is dragging it.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.ScrollInfoMask.SIF_ALL">
            <summary>
            Combination of SIF_PAGE, SIF_POS, SIF_RANGE, and SIF_TRACKPOS.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Win32.ScrollInfoBar">
            <summary>
            Possible values of the <c>nBar</c> parameter when calling <see cref="M:Npp.DotNet.Plugin.Win32.GetScrollInfo(System.IntPtr,System.Int32,Npp.DotNet.Plugin.Win32.ScrollInfo@)"/>.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)">
            <summary>
            You should try to avoid calling this method in your plugin code. Rather use one of the gateways such as
            <see cref="T:Npp.DotNet.Plugin.ScintillaGateway"/> or <see cref="T:Npp.DotNet.Plugin.NotepadPPGateway"/>.<br/><br/>
            If gateways are missing or incomplete, please help extend them and send your code to the project
            at <see href="https://github.com/molsonkiko/NppCSharpPluginPack"/>
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.Text.StringBuilder)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.IntPtr)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.IntPtr@)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UInt32,Npp.DotNet.Plugin.MenuCmdId)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UInt32,System.Int32)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UInt32,System.Int32@)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.Int32)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UInt32,System.Text.StringBuilder)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UInt32,System.String)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,Npp.DotNet.Plugin.SciMsg,System.UIntPtr,System.Int32)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,Npp.DotNet.Plugin.SciMsg,System.UInt32,System.IntPtr)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,Npp.DotNet.Plugin.SciMsg,System.UInt32,System.String)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,Npp.DotNet.Plugin.SciMsg,System.UInt32,System.Text.StringBuilder)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,Npp.DotNet.Plugin.SciMsg,System.UInt32,System.Int32)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,Npp.DotNet.Plugin.SciMsg,System.UIntPtr,System.IntPtr)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UInt32,Npp.DotNet.Plugin.LangType@)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UInt32)">
            <inheritdoc cref="M:Npp.DotNet.Plugin.Win32.SendMessage(System.IntPtr,System.UInt32,System.UIntPtr,System.String)"/>
        </member>
        <member name="T:Npp.DotNet.Plugin.Win32.MsgBox">
            <summary>
            Possible values of the <c>uType</c> paramater of <see cref="M:Npp.DotNet.Plugin.Win32.MsgBoxDialog(System.IntPtr,System.String,System.String,System.UInt32)"/>.
            </summary>
            <remarks>
            To display an icon in the message box, specify one of the ICON* values.<br/>
            To indicate the default button, specify one of the DEFBUTTON* values.<br/>
            To indicate the modality of the dialog box, specify one of the following values beginning with <see cref="F:Npp.DotNet.Plugin.Win32.MsgBox.APPLMODAL"/>.<br/>
            See <see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-messagebox"/>
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ABORTRETRYIGNORE">
            <summary>The message box contains three push buttons: Abort, Retry, and Ignore.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.CANCELTRYCONTINUE">
            <summary>The message box contains three push buttons: Cance, Try Again, Continue. Use this message box type instead of <see cref="F:Npp.DotNet.Plugin.Win32.MsgBox.ABORTRETRYIGNORE"/> .</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.HELP">
            <summary>Adds a Help button to the message box. When the user clicks the Help button or presses F1, the system sends a <see cref="F:Npp.DotNet.Plugin.Win32.WM_HELP"/> message to the owner.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.OK">
            <summary>The message box contains one push button: OK. This is the default.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.OKCANCEL">
            <summary>The message box contains two push buttons: OK and Cancel.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.RETRYCANCEL">
            <summary>The message box contains two push buttons: Retry and Cancel.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.YESNO">
            <summary>The message box contains two push buttons: Yes and No.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.YESNOCANCEL">
            <summary>The message box contains three push buttons: Yes, No, and Cancel.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ICONEXCLAMATION">
            <summary>An exclamation-point icon appears in the message box.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ICONWARNING">
            <summary>An exclamation-point icon appears in the message box.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ICONINFORMATION">
            <summary>An icon consisting of a lowercase letter <c>i</c> in a circle appears in the message box.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ICONASTERISK">
            <summary>An icon consisting of a lowercase letter <c>i</c> in a circle appears in the message box.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ICONQUESTION">
            <summary>A question-mark icon appears in the message box.</summary>
            <remarks>
            The question-mark message icon is no longer recommended because it does not clearly represent a specific
            type of message and because the phrasing of a message as a question could apply to any message type.
            In addition, users can confuse the message symbol question mark with Help information. Therefore, do not use
            this question mark message symbol in your message boxes. The system continues to support its inclusion only
            for backward compatibility.
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ICONSTOP">
            <summary>A stop-sign icon appears in the message box.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ICONERROR">
            <summary>A stop-sign icon appears in the message box.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.ICONHAND">
            <summary>A stop-sign icon appears in the message box.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.DEFBUTTON1">
            <summary>
            The first button is the default button.
            DEFBUTTON1 is the default unless DEFBUTTON2, DEFBUTTON3, or DEFBUTTON4 is specified.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.DEFBUTTON2">
            <summary>The second button is the default button.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.DEFBUTTON3">
            <summary>The third button is the default button.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.DEFBUTTON4">
            <summary>The fourth button is the default button.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.APPLMODAL">
            <summary>
            The user must respond to the message box before continuing work in the window identified by the hWnd parameter.
            However, the user can move to the windows of other threads and work in those windows.
            <see cref="F:Npp.DotNet.Plugin.Win32.MsgBox.APPLMODAL"/> is the default if neither <see cref="F:Npp.DotNet.Plugin.Win32.MsgBox.SYSTEMMODAL"/> nor <see cref="F:Npp.DotNet.Plugin.Win32.MsgBox.TASKMODAL"/> is specified.
            </summary>
            <remarks>
            Depending on the hierarchy of windows in the application, the user may be able to move to other windows within the thread.
            All child windows of the parent of the message box are automatically disabled, but pop-up windows are not.
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.SYSTEMMODAL">
            <summary>
            Same as <see cref="F:Npp.DotNet.Plugin.Win32.MsgBox.APPLMODAL"/> except that the message box has the <see cref="F:Npp.DotNet.Plugin.Win32.WS_EX_TOPMOST"/> style. Use system-modal message boxes to notify the user of serious, potentially damaging errors that require immediate attention (for example, running out of memory). This flag has no effect on the user's ability to interact with windows other than those associated with hWnd.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.TASKMODAL">
            <summary>
            Same as <see cref="F:Npp.DotNet.Plugin.Win32.MsgBox.APPLMODAL"/> except that all the top-level windows belonging to the current thread are disabled if the hWnd parameter is NULL. Use this flag when the calling application or library does not have a window handle available but still needs to prevent input to other windows in the calling thread without suspending other threads.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.DEFAULT_DESKTOP_ONLY">
            <summary>
            Same as desktop of the interactive window station. For more information, see Window Stations.
            </summary>
            <remarks>
            If the current input desktop is not the default desktop, <see cref="M:Npp.DotNet.Plugin.Win32.MsgBoxDialog(System.IntPtr,System.String,System.String,System.UInt32)"/> does not return until the user switches to the default desktop.
            </remarks>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.RIGHT">
            <summary>The text is right-justified.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.RTLREADING">
            <summary>Displays message and caption text using right-to-left reading order on Hebrew and Arabic systems.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.SETFOREGROUND">
            <summary>The message box becomes the foreground window. Internally, the system calls the SetForegroundWindow function for the message box.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.TOPMOST">
            <summary>The message box is created with the <see cref="F:Npp.DotNet.Plugin.Win32.WS_EX_TOPMOST"/> window style.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.MsgBox.SERVICE_NOTIFICATION">
            <summary>The caller is a service notifying the user of an event. The function displays a message box on the current active desktop, even if there is no user logged on to the computer.</summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Win32.DlgResult">
            <summary>
            Possible return values of <see cref="M:Npp.DotNet.Plugin.Win32.MsgBoxDialog(System.IntPtr,System.String,System.String,System.UInt32)"/>.
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.ABORT">
            <summary>The Abort button was selected.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.CANCEL">
            <summary>The Cancel button was selected.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.CONTINUE">
            <summary>The Continue button was selected.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.IGNORE">
            <summary>The Ignore button was selected.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.NO">
            <summary>The No button was selected.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.OK">
            <summary>The OK button was selected.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.RETRY">
            <summary>The Retry button was selected.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.TRYAGAIN">
            <summary>The Try Again button was selected.</summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Win32.DlgResult.YES">
            <summary>The Yes button was selected.</summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Win32.GetScrollInfo(System.IntPtr,System.Int32,Npp.DotNet.Plugin.Win32.ScrollInfo@)">
            <summary>
            See <see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-getscrollinfo"/>
            </summary>
            <param name="hwnd">Handle to a scroll bar control or a window with a standard scroll bar, depending on the value of the <paramref name="nBar"/> parameter.</param>
            <param name="nBar">See <see cref="T:Npp.DotNet.Plugin.Win32.ScrollInfoBar"/></param>
            <param name="scrollInfo">See <see cref="T:Npp.DotNet.Plugin.Win32.ScrollInfo"/></param>
            <returns></returns>
        </member>
        <member name="T:Npp.DotNet.Plugin.Winforms.Callbacks">
            <summary>
            various methods that every new form in this app should call.<br></br>
            You may ask, "Wait, why do we have a static class with a bunch of methods everyone needs to call?"<br></br>
                "Shouldn't this be a subclass of Form, and have all the forms just subclass this?"<br></br>
            To which I answer, NO!<br></br>
            *I TRIED* having a superclass that all my forms inherited from, and the result was a total mess.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Callbacks.GenericKeyDownHandler(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            CALL THIS IN YOUR KeyDown HANDLER FOR ALL CONTROLS *except TextBoxes*<br></br>
            suppress annoying ding when user hits escape, enter, tab, or space
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Callbacks.TextBoxKeyPressHandler(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            CALL THIS IN YOUR KeyDown HANDLER FOR ALL TextBoxes and ComboBoxes<br></br>
            suppress annoying ding when user hits tab
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Callbacks.GenericKeyUpHandler(System.Windows.Forms.Form,System.Object,System.Windows.Forms.KeyEventArgs,System.Boolean)">
            <summary>
            CALL THIS IN YOUR KeyUp HANDLER FOR ALL CONTROLS (but only add to the form itself *IF NOT isModal*)<br></br>
            Enter presses button,<br></br>
            escape focuses editor (or closes if isModal),<br></br>
            Ctrl+V pastes text into text boxes and combo boxes<br></br>
            if isModal:<br></br>
            - tab goes through controls,<br></br>
            - shift-tab -> go through controls backward<br></br>
            </summary>
            <param name="form"></param>
            <param name="sender"></param>
            <param name="e"></param>
            <param name="isModal">if true, this blocks the parent application until closed. THIS IS ONLY TRUE OF POP-UP DIALOGS</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Callbacks.GenericTabNavigationHandler(System.Windows.Forms.Form,System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            CALL THIS METHOD IN A KeyUp HANDLER, *UNLESS USING GenericKeyUpHandler ABOVE*<br></br>
            Tab -> go through controls, Shift+Tab -> go through controls backward.<br></br>
            Ignores invisible or disabled controls.
            </summary>
            <param name="form">the parent form</param>
            <param name="sender">probably a control with a tabstop</param>
            <param name="e">the key event that triggered this</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Callbacks.PressEnterInTextBoxHandler(System.Object,System.Boolean)">
            <summary>
            NPPM_MODELESSDIALOG consumes the KeyDown and KeyPress events for the Enter key,<br></br>
            so our KeyUp handler needs to simulate pressing enter to add a new line in a multiline text box.<br></br>
            Note that this does not fully repair the functionality of the Enter key in a multiline text box,
            because only one newline can be created for a single keypress of Enter, no matter how long the key is held down.
            </summary>
            <param name="sender">the text box that sent the message</param>
            <param name="isModal">if true, this blocks the parent application until closed. THIS IS ONLY TRUE OF POP-UP DIALOGS</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Callbacks.RegisterFormIfModeless(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            CALL THIS IN YOUR Dispose(bool disposing) METHOD, INSIDE OF THE ".Designer.cs" FILE<br></br>
            When this form is initialized, *if it is a modeless dialog* (i.e., !isModal; the form does not block the parent application until closed)<br></br>
            this will call Notepad++ with the NPPM_MODELESSDIALOG message to register the form.
            <strong>VERY IMPORTANT: in your Designer.cs files, in the part where it says this.Controls.Add(nameOfControl),
            you need to make sure the controls are added in tabstop order.</strong><br></br>
            This is because the order in which the controls are added controls tab order.<br></br>
            For example, if you want to go through your controls in the order<br></br>
            1. FooButton<br></br>
            2. BarTextBox<br></br>
            3. BazCheckBox<br></br>
            You must go to your Designer.cs file and make sure that the Form adds the controls in this order:<br></br>
            <code>
            this.Controls.Add(this.FooButton);
            this.Controls.Add(this.BarTextBox);
            this.Controls.Add(this.BazCheckBox);
            </code>
            </summary>
            <param name="form"></param>
            <param name="isModal">if true, this blocks the parent application until closed. THIS IS ONLY TRUE OF POP-UP DIALOGS</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Callbacks.UnregisterFormIfModeless(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            CALL THIS IN YOUR Dispose(bool disposing) METHOD, INSIDE OF THE ".Designer.cs" FILE<br></br>
            If this was a modeless dialog (i.e., !isModal; a dialog that does not block Notepad++ while open),<br></br>
            call Notepad++ with the NPPM_MODELESSDIALOG message to unregister the form.
            </summary>
            <param name="form"></param>
            <param name="isModal">if true, this blocks the parent application until closed. THIS IS ONLY TRUE OF POP-UP DIALOGS</param>
        </member>
        <member name="P:Npp.DotNet.Plugin.Winforms.Classes.FormBase.IsModal">
            <summary>
            if true, this blocks the parent application until closed.<br></br>
            THIS IS ONLY TRUE OF POP-UP DIALOGS.
            </summary>
        </member>
        <member name="P:Npp.DotNet.Plugin.Winforms.Classes.FormBase.IsDocking">
            <summary>
            if true, this form's default appearance is docked (attached) to the left, right, bottom, or top of the Notepad++ window.
            </summary>
        </member>
        <member name="P:Npp.DotNet.Plugin.Winforms.Classes.FormBase.IsLoaded">
            <summary>
            indicates whether the form became visible for the first time<br></br>
            this is an unprincipled hack to deal with weirdness surrounding the opening of docking forms<br></br>
            since the Load and Shown events are suppressed on docking form startup.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Classes.FormBase.#ctor(System.Boolean,System.Boolean)">
            <summary>
            superclass of all forms in the application.<br></br>
            Implements many useful handlers, and deals with some weird behaviors induced by interoperating with Notepad++.
            </summary>
            <param name="isModal">if true, this blocks the parent application until closed. THIS IS ONLY TRUE OF POP-UP DIALOGS</param>
            <param name="isDocking">if true, this form's default appearance is docked (attached) to the left, right, bottom, or top of the Notepad++ window.</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Classes.FormBase.FormBase_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            this is called every time the form's visibility changes,
            but it only does anything once, before the form is loaded for the first time.<br></br>
            This adds KeyUp, KeyDown, and KeyPress event handlers to all controls according to the recommendations in NppFormHelper.<br></br>
            It also styles the form using FormStyle.ApplyStyle
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Classes.FormBase.AddKeyUpDownPressHandlers(System.Windows.Forms.Control)">
            <summary>
            This adds KeyUp, KeyDown, and KeyPress event handlers to all controls according to the recommendations in NppFormHelper.
            </summary>
            <param name="ctrl"></param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Classes.FormBase.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            suppress the default response to the Tab key
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Winforms.Classes.FormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Classes.FormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.Classes.FormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Winforms.DialogUtils">
            <summary>
            Contains connectors to Scintilla (editor) and Notepad++ (notepad)
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.DialogUtils.#cctor">
            <summary>
            Extends the default instance of <see cref="T:Npp.DotNet.Plugin.INotepadPPGateway"/> with methods from <see cref="T:Npp.DotNet.Plugin.Winforms.PluginDialogBase"/>.
            </summary>
        </member>
        <member name="P:Npp.DotNet.Plugin.Winforms.DialogUtils.NotepadGUI">
            <summary>
            Connector to Notepad++'s GUI.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.DialogUtils.TryCopyToClipboard(System.String)">
            <summary>
            Trying to copy an empty string or null to the clipboard raises an error.<br></br>
            This shows a message box if the user tries to do that.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.DialogUtils.AskBeforeDoingSomething(Npp.DotNet.Plugin.Winforms.AskUserWhetherToDoThing,System.String,System.String)">
            <summary>
            Based on the value of askUser, do one of three things:<br></br>
            DONT_DO_DONT_ASK: return false (don't do the thing)<br></br>
            ASK_BEFORE_DOING:<br></br>
            1. show a Yes/No message box with text messageBoxText and caption messageBoxCaption.<br></br>
            2. if and only if the user clicks Yes, return true.<br></br>
            DO_WITHOUT_ASKING: return true (do the thing without asking)
            </summary>
            <param name="askUser">whether to ask user</param>
            <param name="messageBoxText">text of message box (if and only if askUser = ASK_BEFORE_DOING</param>
            <param name="messageBoxCaption">caption of message box (if and only if askUser = ASK_BEFORE_DOING</param>
            <returns></returns>
        </member>
        <member name="F:Npp.DotNet.Plugin.Winforms.AskUserWhetherToDoThing.DONT_DO_DONT_ASK">
            <summary>
            don't do the thing, and don't prompt the user either
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Winforms.AskUserWhetherToDoThing.ASK_BEFORE_DOING">
            <summary>
            prompt the user to ask whether to do it
            </summary>
        </member>
        <member name="F:Npp.DotNet.Plugin.Winforms.AskUserWhetherToDoThing.DO_WITHOUT_ASKING">
            <summary>
            do it without prompting the user
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Winforms.NamespaceDoc">
            <summary>
            Types and methods extracted from <see href="https://github.com/molsonkiko/NppCSharpPluginPack"/>.
            </summary>
        </member>
        <member name="T:Npp.DotNet.Plugin.Winforms.PluginDialogBase">
            <summary>
            This class holds helpers for sending messages defined in the Msgs_h.cs file. It is at the moment
            incomplete. Please help fill in the blanks.
            </summary>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.PluginDialogBase.AddModelessDialog(System.IntPtr)">
            <summary>
            Register a modeless form (i.e., a form that doesn't block the parent application until closed)<br></br>
            with Notepad++ using NPPM_MODELESSDIALOG<br></br>
            If you don't do this, Notepad++ may intercept some keystrokes in uIntPtrended ways.
            </summary>
            <param name="formHandle">the Handle attribute of a Windows form</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.PluginDialogBase.RemoveModelessDialog(System.IntPtr)">
            <summary>
            unregister a modelesss form that was registered with AddModelessDialog.<br></br>
            This MUST be called in the Dispose method of the form, BEFORE the components of the form are disposed.
            </summary>
            <param name="formHandle">the Handle attribute of a Windows form</param>
        </member>
        <member name="M:Npp.DotNet.Plugin.Winforms.PluginDialogBase.AllocateIndicators(System.UInt32,System.Int32[]@)">
            <summary>
            Introduced in Notepad++ 8.5.6.<br></br>
            NPPM_ALLOCATEINDICATOR: allocate one or more unused indicator IDs,
            which can then be assigned styles and used to style regions of text.<br></br>
            returns false and sets indicators to null if numberOfIndicators is less than 1, or if the requested number of indicators could not be allocated.<br></br>
            Otherwise, returns true, and sets indicators to an array of numberOfIndicators indicator IDs.<br></br>
            See https://www.scintilla.org/ScintillaDoc.html#Indicators for more info on the indicator API.
            </summary>
            <param name="numberOfIndicators">number of consecutive indicator IDs to allocate</param>
            <param name="indicators"></param>
            <returns></returns>
        </member>
    </members>
</doc>
